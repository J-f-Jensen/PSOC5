ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBUART_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.section	.gnu.lto_.profile.24c054e9,"",%progbits
  18 0000 789C6366 		.ascii	"x\234cf```a\200\000F\006\013-\000\001\016\000k"
  18      60606061 
  18      80004606 
  18      0B2D0001 
  18      0E006B
  19              		.text
  20              		.section	.gnu.lto_.jmpfuncs.24c054e9,"",%progbits
  21 0000 789C6366 		.ascii	"x\234cf\300\016\204\2404+\020310030\260@8\014\000\003"
  21      C00E84A0 
  21      342B1033 
  21      31303033 
  21      30B04038 
  22 0017 6C0029   		.ascii	"l\000)"
  23              		.text
  24              		.section	.gnu.lto_.inline.24c054e9,"",%progbits
  25 0000 789C6366 		.ascii	"x\234cf\300\016\322\2414+\003\003?/#\003\223\304\204"
  25      C00ED2A1 
  25      342B0303 
  25      3F2F2303 
  25      93C484
  26 0013 4D8C0C6C 		.ascii	"M\214\014l\013\344\231@\202LX\304\230\261\210\26100"
  26      0BE49940 
  26      824C58C4 
  26      98B188B1 
  26      3030
  27 0025 3301C580 		.ascii	"3\001\305\200,\230\010+\003\013\017\252\010#\027\210"
  27      2C98082B 
  27      030B0FAA 
  27      08231788 
  28 0035 040040C9 		.ascii	"\004\000@\311\010\365"
  28      08F5
  29              		.text
  30              		.section	.gnu.lto_.pureconst.24c054e9,"",%progbits
  31 0000 789C6366 		.ascii	"x\234cf``\340f\200\000V\006)&)f)\026\006V\011\000\003"
  31      6060E066 
  31      80005606 
  31      29262966 
  31      29160656 
  32 0017 DA0088   		.ascii	"\332\000\210"
  33              		.text
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 2


  34              		.section	.gnu.lto_USBUART_EP_1_ISR.24c054e9,"",%progbits
  35 0000 789C9593 		.ascii	"x\234\225\223\333K\024q\024\307\177\337\337\314^fV3"
  35      DB4B1471 
  35      14C77FDF 
  35      DFCC5E66 
  35      5633
  36 0012 7AF41F90 		.ascii	"z\364\037\220\240\315\207\350)\020\252\207 \202$\363"
  36      A0CD87E8 
  36      2910AA87 
  36      208224F3 
  37 0022 CD90B07D 		.ascii	"\315\220\260}\350%\303\352%\020gp\003+\022/\030R)\024"
  37      E825C3EA 
  37      25106770 
  37      032B122F 
  37      18522914 
  38 0036 796B73BD 		.ascii	"yks\275\246]4g-]\205(\264\242\362\301 \014\354%\274"
  38      A65D3467 
  38      2D5D8528 
  38      B4A2F2C1 
  38      200CEC25 
  39 004b 8436A66E 		.ascii	"\2046\246n\347\314l\"\246R\013{~;s\276\277\357\371\234"
  39      E7CC6C22 
  39      A6520B7B 
  39      7E3B73BE 
  39      BFEFF99C 
  40 005f F3FBAD22 		.ascii	"\363\373\255\"\376\376\354\243\357UU\210\335\264\302"
  40      FEFEECA3 
  40      EF555588 
  40      DDB4C2
  41 006e 23202B5E 		.ascii	"# +^\013a\372\245TF\263\204\241\253\3614a\244(P\335"
  41      0B61FAA5 
  41      5446B384 
  41      A1ABF134 
  41      61A42850 
  42 0083 D72AC03F 		.ascii	"\327*\300?\004D\211TT\224\340\233\234\225\250\260\""
  42      04448954 
  42      5494E09B 
  42      9C95A8B0 
  42      22
  43 0094 B5818C06 		.ascii	"\265\201\214\006\3030f\306[\314l\013\266\024b^\272\005"
  43      C33066C6 
  43      5BCC6C0B 
  43      B614625E 
  43      BA05
  44 00a6 D0840C41 		.ascii	"\320\204\014A\242\331\360\312\207\2007L\242\235n\016"
  44      A2D9F0CA 
  44      8780374C 
  44      A29D6E0E 
  45 00b6 CDF082D6 		.ascii	"\315\360\202\326\266]\226\221HT7u\037H\225\302\226P"
  45      B65D9691 
  45      48543775 
  45      1F4895C2 
  45      9650
  46 00c8 397838F8 		.ascii	"9x8\3708\3709h\034t\016BL\321f\206\370*%\257\312\004"
  46      38F83968 
  46      1C740E42 
  46      4CD16686 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 3


  46      F82A25AF 
  47 00de 0617AEAD 		.ascii	"\006\027\256\255\336T\330oQ\252T\252l\244!\242LK[\312"
  47      DE54D86F 
  47      51AA54AA 
  47      6CA421A2 
  47      4C4B5BCA 
  48 00f2 EB9669A8 		.ascii	"\353\226i\250\\\375\363\324\2331\277\363J\360\343\307"
  48      5CFDF3D4 
  48      9B31BFF3 
  48      4AF0E3C7 
  49 0102 F1254BAB 		.ascii	"\361%K\253\303m3L\254\012Z\220\216\007H'\246\010\352"
  49      C36D334C 
  49      AC0A5A90 
  49      8E074827 
  49      A608EA
  50 0115 202650FA 		.ascii	" &P\372\323\353\332y\\\307\312\312\356\372\035\274]"
  50      D3EBDA79 
  50      5CC7CACA 
  50      EEFA1DBC 
  50      5D
  51 0126 5985C043 		.ascii	"Y\205\300C\222R\325*\260f;\267Vr#\017\026\367t\014\215"
  51      9252D52A 
  51      B0663BB7 
  51      5672230F 
  51      16F7740C 
  52 013b 25117DB4 		.ascii	"%\021}\264\345{MoL\262\241\272<\260\021Qu\020\227&\273"
  52      E57B4D6F 
  52      4CB2A1BA 
  52      3CB01151 
  52      75109726 
  53 0150 12BA636A 		.ascii	"\022\272cjZ{l\351A\224l\333\330\226\222\325\257\232"
  53      5A7B6CE9 
  53      41946CDB 
  53      D89692D5 
  53      AF9A
  54 0162 FBD38211 		.ascii	"\373\323\202\021\203r\307m\351E;\025\232s\006N\311x"
  54      8372C76D 
  54      E9453B15 
  54      9A73064E 
  54      C978
  55 0174 DD74A7CA 		.ascii	"\335t\247\312F>\360\343\210\025K\350\231\255\254=eK"
  55      463EF0E3 
  55      88154BE8 
  55      99ADAC3D 
  55      654B
  56 0186 3F3A1044 		.ascii	"?:\020D'\3738\342+\261\332\037\212\353t\331\226\032"
  56      27FB38E2 
  56      2BB1DA1F 
  56      8AEB74D9 
  56      961A
  57 0198 BA9039C7 		.ascii	"\272\2209\307S\026\350F\320\001\237\035\256\364\270"
  57      5316E846 
  57      D0019F1D 
  57      AEF4B8
  58 01a7 E07ED2D7 		.ascii	"\340~\322\327\277-\217\312\342_F\231\341\267\245\276"
  58      BF2D8FCA 
  58      E25F4699 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 4


  58      E1B7A5BE 
  59 01b7 225D9735 		.ascii	"\"]\2275v\335y\374b4\332>f7LR\005\360\010\305\350I\242"
  59      76DD79FC 
  59      6234DA3E 
  59      66374C52 
  59      05F008C5 
  60 01ce DF58E9B4 		.ascii	"\337X\351\264\30184\253\024\364\022\370:\232\350\300"
  60      C13834AB 
  60      14F412F8 
  60      3A9AE8C0 
  61 01de F2518601 		.ascii	"\362Q\206\001\243<f\024\347\246<qP\326\016E\272(\345"
  61      A33C6614 
  61      E7A63C71 
  61      50D60E45 
  61      BA28E5
  62 01f1 D1FBF369 		.ascii	"\321\373\363i\\\024\212\300S\362x\217\360\247\322{H"
  62      5C148AC0 
  62      53F2788F 
  62      F0A7D27B 
  62      48
  63 0202 8AD64F02 		.ascii	"\212\326O\002tj\317\334*to\0241\232\2458\255\305\357"
  63      746ACFDC 
  63      2A746F14 
  63      319AA538 
  63      ADC5EF
  64 0215 A6BA6A6D 		.ascii	"\246\272jm\313\3266\366\322\267Y/\234JA\377\346\315"
  64      CBD636F6 
  64      D2B7592F 
  64      9C4A41FF 
  64      E6CD
  65 0227 7052C373 		.ascii	"pR\303s\356F\341n\006\334n\026\222\335\350n\365\232"
  65      EE46E16E 
  65      06DC6E16 
  65      92DDE86E 
  65      F59A
  66 0239 BE3B559A 		.ascii	"\276;U\232\303j\020\254\265\341\212\375\033[lk\266\301"
  66      C36A10AC 
  66      B5E18AFD 
  66      1B5B6C6B 
  66      B6C1
  67 024b EDD85EAC 		.ascii	"\355\330^\254\261\275Dp\221\017\221\246\244\376\371"
  67      B1BD4470 
  67      910F91A6 
  67      A4FEF9
  68 025a 77CDB4BF 		.ascii	"w\315\264\2773S\377\213chS\016+\223A\206\267\000\261"
  68      3353FF8B 
  68      6368530E 
  68      2B934186 
  68      B700B1
  69 026d 8E31499C 		.ascii	"\2161I\234IT&\031A\220\322c\267\032K\2353\326h(\243"
  69      49542619 
  69      4190D263 
  69      B71A4B9D 
  69      33D66828 
  70 0282 B46B12A6 		.ascii	"\264k\022\246\325\033\227\214\303\016StW\011\22382\216"
  70      D51B978C 
  70      C30E5374 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 5


  70      57099338 
  70      328E
  71 0294 84CE858A 		.ascii	"\204\316\205\212N_\014\235\311\317)\274TT\020\312\313"
  71      4E5F0C9D 
  71      C9CF29BC 
  71      545410CA 
  71      CB
  72 02a5 CE293CBC 		.ascii	"\316)<\274?/7\347P\356\301\023'\363C\347\317^(\332["
  72      3F2F37E7 
  72      50EEC113 
  72      27F343E7 
  72      CF5E28DA 
  73 02ba 207E03FA 		.ascii	" ~\003\372 \251="
  73      20A93D
  74              		.text
  75              		.section	.gnu.lto_USBUART_EP_2_ISR.24c054e9,"",%progbits
  76 0000 789C9593 		.ascii	"x\234\225\223\337KTA\024\307\347\234{\367\307\335]1"
  76      DF4B5441 
  76      14C7E79C 
  76      7BF7C7DD 
  76      5D31
  77 0012 A287F01F 		.ascii	"\242\207\360\037\220\240M(z\025\252\207^\202\242\315"
  77      90A04D28 
  77      7A15AA87 
  77      5E82A2CD 
  78 0022 3743C2F6 		.ascii	"7C\302\366\241\227\014\253\227@\274\253\033\210\245"
  78      A1970CAB 
  78      9740BCAB 
  78      1B88A5
  79 0031 882184B5 		.ascii	"\210!\204\265Q\226\246m\376\316\037\225\346\325\254"
  79      5196A66D 
  79      FECE1F95 
  79      E6D5AC
  80 0040 550A43C5 		.ascii	"U\012C\305,\011\203P0\210p5\264\353\017\354\234\031"
  80      2C098350 
  80      30887035 
  80      B4EB0FEC 
  80      9C19
  81 0052 933057EA 		.ascii	"\2230W\352\302=\263s\317w\276\347sff5\361\367s\200\336"
  81      C23DB373 
  81      CF77BEE7 
  81      73666635 
  81      F1F77380 
  82 0067 125D883D 		.ascii	"\022]\210=4\202C\000\226\015\011\021r#j\203\351\302"
  82      34824300 
  82      960D0911 
  82      72236A83 
  82      E9C2
  83 0079 F4E8B164 		.ascii	"\364\350\261da\3724\320\325g\035\200\177\010\020\371"
  83      61FA34D0 
  83      D5671D80 
  83      7F0810F9 
  84 0089 A8E9900F 		.ascii	"\250\351\220\017_1\216PfEozS\253M\323\234-\350\331u"
  84      5F318E50 
  84      66456F7A 
  84      53AB4DD3 
  84      9C2DE8D9 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 6


  85 009e 75B78D42 		.ascii	"u\267\215B\314\243\362\207\207\220*H\023\017\257\216"
  85      CCA3F287 
  85      87902A48 
  85      130FAF8E 
  86 00ae 7B9D61D2 		.ascii	"{\235a\322\354P9\250\005'\320\330\270\3232\327\326F"
  86      EC5039A8 
  86      0527D0D8 
  86      B8D332D7 
  86      D646
  87 00c0 577A97BC 		.ascii	"Wz\227\274I(l\004\235\203\203\203\213\203\233\203\301"
  87      49286C04 
  87      9D838383 
  87      8B839B83 
  87      C1
  88 00d1 C1C34188 		.ascii	"\301\303A\210)Z\315\020\323\210<j\023\320\267P<T\267"
  88      295ACD10 
  88      D3883C6A 
  88      13D0B750 
  88      3C54B7
  89 00e4 9F0D1751 		.ascii	"\237\015\027Q\247ZE\003\325Qm\006m\304kV\310\324\271"
  89      A75A4503 
  89      D5516D06 
  89      6DC46B56 
  89      C8D4B9
  90 00f7 FCE7A977 		.ascii	"\374\347\251w\303n\371I\360\364\303\310\222eD\340V("
  90      C36EF949 
  90      F0F4C3C8 
  90      926544E0 
  90      5628
  91 0109 0C366A50 		.ascii	"\0146jP\007)\360\010R\010*\012\021\020\023P\370\323"
  91      0729F008 
  91      52082A0A 
  91      11101350 
  91      F8D3
  92 011b A9EC1CCA 		.ascii	"\251\354\034\312\361n\327d\211\217\227k\253 \3401I\251"
  92      F16ED764 
  92      898F976B 
  92      AB20E031 
  92      49A9
  93 012d 6A39B066 		.ascii	"j9\260f;\267zr#\017\026\2677\277\037\321\224\247\213"
  93      3BB77A72 
  93      230F16B7 
  93      37BF1FD1 
  93      94A78B
  94 0140 967CAFE8 		.ascii	"\226|\257\350\350E6\324Wz6#\352\022qi\262u\315#MC\326"
  94      E84536D4 
  94      577A3623 
  94      EA127169 
  94      B275CD23 
  95 0157 5E1B1DD0 		.ascii	"^\033\035\320@\266\215lK\311\033ok\273\223\375Q\223"
  95      40B68D6C 
  95      4BC91B6F 
  95      6BBB93FD 
  95      5193
  96 0169 72C76D74 		.ascii	"r\307mtB\023\025\232\223;N\311\312\361\351\037\262}"
  96      4213159A 
  96      933B4EC9 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 7


  96      CAF1E91F 
  96      B27D
  97 017b 17F274A1 		.ascii	"\027\362t\241\245\177\324\233V\317\332\3236\272\241"
  97      A57FD49B 
  97      56CFDAD3 
  97      36BAA1
  98 018a 19FCD0C2 		.ascii	"\031\374\320\302>R\374\355\372X\233O9]\261\321\200V"
  98      3E52FCED 
  98      FA589B4F 
  98      395DB1D1 
  98      8056
  99 019c 489BE35D 		.ascii	"H\233\343]\026\360\004\374\022<>^\356P\340n\322\337"
  99      16F004FC 
  99      123C3E5E 
  99      EE50E06E 
  99      D2DF
 100 01ae 192D6DC0 		.ascii	"\031-m\300\274e\263\310t\333\350YE\345\262\301\356\221"
 100      BC65B3C8 
 100      74DBE859 
 100      45E5B2C1 
 100      EE91
 101 01c0 D32F668D 		.ascii	"\323/f\215\355bv3D*/\264A\036\264\257\243w\326\336\253"
 101      ED627633 
 101      442A2FB4 
 101      411EB4AF 
 101      A377D6DE 
 102 01d5 76320EED 		.ascii	"v2\016\355\225\017:\010\374\017\232\370\375\342v'\323"
 102      950F3A08 
 102      FC0F9AF8 
 102      FDE27627 
 102      D3
 103 01e6 00B37432 		.ascii	"\000\263t2\213\274+O%\313\306\251\240b)mx0\237\314U"
 103      8BBC2B4F 
 103      25CBC6A9 
 103      A062296D 
 103      78309FCC 
 104 01fb 4113F08C 		.ascii	"A\023\360\214L\306 \374\261\260\012\326E\244\210EfZ"
 104      4CC620FC 
 104      B1B00AD6 
 104      45A48845 
 104      665A
 105 020d 74A9A063 		.ascii	"t\251\240c{\256\312\320\305\321\304`\272&{\373T\225"
 105      7BAECAD0 
 105      C5D1C460 
 105      BA267BFB 
 105      5495
 106 021f A4D446C2 		.ascii	"\244\324F\302\33667\323\265U3\234\362Aw\202n8k\300\013"
 106      DE3637D3 
 106      B555339C 
 106      F2417782 
 106      6E386BC0 
 107 0234 6E47E376 		.ascii	"nG\343vzT;\013\353\355xT\371\212\256\333\345\206\204"
 107      7A543B0B 
 107      EBED7854 
 107      F98AAEDB 
 107      E58684
 108 0247 3589D6DA 		.ascii	"5\211\326\332t\311\376\015\25671\\\337\266p/7\340\372"
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 8


 108      74C9FE0D 
 108      AE37315C 
 108      DFB6702F 
 108      37E0FA
 109 025a C1BFC8E7 		.ascii	"\301\277\310\347H\373\244\377\376\203\3156M\027$\375"
 109      48FBA4FF 
 109      FE83CD36 
 109      4D1724FD 
 110 026a 17C8AB2D 		.ascii	"\027\310\253-A\2544&y\235\210\304:\306(1F\321\031e\000"
 110      41AC3426 
 110      799D88C4 
 110      3AC62831 
 110      46D11965 
 111 027f FC941FAE 		.ascii	"\374\224\037\256\254)\224\307l\320\266\014\322\262I"
 111      AC2994C7 
 111      6CD0B60C 
 111      D2B249
 112 028e 0859CB6F 		.ascii	"\010Y\313o\220y\330b\212\356+q\022H\352\321\340\371"
 112      9079D862 
 112      8AEE2B71 
 112      1248EAD1 
 112      E0F9
 113 02a0 60EE994B 		.ascii	"`\356\231K\301\263Y\201\234\313\271\331\301\314\023"
 113      C1B35981 
 113      9CCBB9D9 
 113      C1CC13
 114 02af 819C2307 		.ascii	"\201\234#\00733\002\2073\016\235<\225\025\274p\356b"
 114      33330287 
 114      330E9D3C 
 114      9515BC70 
 114      EE62
 115 02c1 EEBE6CF1 		.ascii	"\356\276l\361\013\205F\251y"
 115      0B8546A9 
 115      79
 116              		.text
 117              		.section	.gnu.lto_USBUART_EP_3_ISR.24c054e9,"",%progbits
 118 0000 789C9593 		.ascii	"x\234\225\223\317KTQ\024\307\3579\367\315\2177:\030"
 118      CF4B5451 
 118      14C7EF39 
 118      F7CD8F37 
 118      3A18
 119 0012 D222FC07 		.ascii	"\322\"\374\007$h\022\212\266B\265h\023\024\231;C\302"
 119      2468128A 
 119      B642B568 
 119      1314993B 
 119      43C2
 120 0024 66D126C3 		.ascii	"f\321&\303j\023\210o\230\021\244HdD\213\312\026\225"
 120      6A13886F 
 120      9811A448 
 120      64448BCA 
 120      1695
 121 0036 3F6A5253 		.ascii	"?jRSK+\177=\1775\012\375@\305J\027\006aeP2\243\244="
 121      4B2B7F3D 
 121      7F350AFD 
 121      40C54A17 
 121      06616550 
 122 004e 4DEC9C77 		.ascii	"M\354\234wm\010s\244\036\274s\347\276\363\275\337\363"
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 9


 122      6D0873A4 
 122      1EBC73E7 
 122      BEF3BDDF 
 122      F3
 123 005f 39F7DE91 		.ascii	"9\367\336\221\342\357g/\275W4!v\322\010\016\001X\361"
 123      E2EF672F 
 123      BD573421 
 123      76D2080E 
 123      0158F1
 124 0072 4A88801B 		.ascii	"J\210\200\033Q\216d\013\303\243E\323\204\221*AS\237"
 124      518E640B 
 124      C3A345D3 
 124      84912A41 
 124      539F
 125 0084 3500FE21 		.ascii	"5\000\376!@\224\240\324\240\004\276`\034\241\302\214"
 125      4094A0D4 
 125      A004BE60 
 125      1CA1C28C 
 126 0094 5C4BC9AC 		.ascii	"\\K\311\2545\014#\026^\330^\272\303B!\026P\371C=d\012"
 126      350C2316 
 126      5ED85EBA 
 126      C3422116 
 126      50F9433D 
 127 00aa D2C443AB 		.ascii	"\322\304C\253oS\234!\322lS9h\000'\320\330\234n\032k"
 127      6F539C21 
 127      D26C5339 
 127      680027D0 
 127      D89C6E1A 
 128 00bf 6B952F07 		.ascii	"k\225/\007\272\322\275(,\004\215\203\203\203\213\203"
 128      BAD2BD28 
 128      2C048D83 
 128      83838B83 
 129 00cf 9B83CEC1 		.ascii	"\233\203\316\301\303A\210\031Z\315\020\037\021y\224"
 129      C3418819 
 129      5ACD101F 
 129      117994
 130 00de 53D0BF78 		.ascii	"S\320\277x\351M\347\0366\\B\215j\225\015\327F\344,Z"
 130      E94DE71E 
 130      365C428D 
 130      6A950DD7 
 130      46E42C5A 
 131 00f2 8897CD80 		.ascii	"\210\227\315\200\241q\371\3673\257G\335\366'\301\323"
 131      A171F9F7 
 131      33AF47DD 
 131      F627C1D3 
 132 0102 7763CBA6 		.ascii	"wc\313\246^\0037\002!\260P\302=\310\200\373\220AP\021"
 132      5E033702 
 132      21B050C2 
 132      3DC880FB 
 132      90415011 
 133 0116 A8013105 		.ascii	"\250\0011\005\301\037Ne\347P\216\365C\237\373\274\274"
 133      C11F4E65 
 133      E7508EF5 
 133      439FFBBC 
 133      BC
 134 0127 5CAE8080 		.ascii	"\\\256\200\200\007$\245\252a`\315Vn\215\344F\036,n\217"
 134      0724A5AA 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 10


 134      6160CD56 
 134      6E8DE446 
 134      1E2C6E8F 
 135 013b 7F1A97CA 		.ascii	"\177\032\227\312\323EK\346\252:\372\220\015\265\237"
 135      D3454BE6 
 135      AA3AFA90 
 135      0DB59F
 136 014a BD1B1135 		.ascii	"\275\033\0215\033qy\272m\315c\233\006\314]\026:\240"
 136      1B7179BA 
 136      6DCD639B 
 136      06CC5D16 
 136      3AA0
 137 015c 896C9BD9 		.ascii	"\211l\233\331\226\222\225/\032\272\323|\021\203rG,t"
 137      9692952F 
 137      1ABAD37C 
 137      11837247 
 137      2C74
 138 016e C2432A34 		.ascii	"\302C*4o\3578%\313\233\356.\244\261\221K\362\264\177"
 138      6FEF3825 
 138      CB9BEE2E 
 138      A4B1914B 
 138      F2B47F
 139 0181 727A50CF 		.ascii	"rzP\317jd\355\011\013\335\320\002>he\037[\334s5\026"
 139      6A64ED09 
 139      0BDDD002 
 139      3E68651F 
 139      5BDC7335 
 140 0196 97CAE9A2 		.ascii	"\227\312\351\242\205:\264A\326<\357\262\200G\340\263"
 140      853AB441 
 140      D63CEFB2 
 140      8047E0B3 
 141 01a6 C15BBE56 		.ascii	"\301[\276V:\024\270\233\364\267\306\313\233\260x\305"
 141      3A14B89B 
 141      F4B7C6CB 
 141      9BB078C5 
 142 01b6 2833DC16 		.ascii	"(3\334\026zVQ\271$\330=\366\364\203Qg\271\230\335\010"
 142      7A5651B9 
 142      24D83DF6 
 142      F4835167 
 142      B998DD08 
 143 01ca 902A051E 		.ascii	"\220*\005\036C1\264\257\243\207\243\315\325\222qh\257"
 143      4331B4AF 
 143      A387A3CD 
 143      D5927168 
 143      AF
 144 01db 52A183C0 		.ascii	"R\241\203\300\377\240)\035\233\253\326\231\006\230\345"
 144      FFA0291D 
 144      9BABD699 
 144      0698E5
 145 01ea 09B3D877 		.ascii	"\011\263\330w\345\251\315\2228\025T,\211FA\012xF&\023"
 145      E5A9CD92 
 145      3815542C 
 145      8946410A 
 145      78462613 
 146 01fe 109A0CDE 		.ascii	"\020\232\014\336\206u\021)\2425\263\255\232\255\240"
 146      86751129 
 146      A235B3AD 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 11


 146      9AADA0
 147 020d 63EB5465 		.ascii	"c\353Te\350\342H1\222-\355\336\276\335\361*\265\236"
 147      E8E24831 
 147      922DEDDE 
 147      BEDDF12A 
 147      B59E
 148 021f B4B78DCD 		.ascii	"\264\267\215\315tm\326\014\247R\241;I7\234\325\241\207"
 148      746DD60C 
 148      A752A13B 
 148      49379CD5 
 148      A187
 149 0231 DB91DC4E 		.ascii	"\333\221\334N\257jgq\275\035\217*_\325u3\254\333\260"
 149      AF6A6771 
 149      BD1D8F2A 
 149      5FD57533 
 149      ACDBB0
 150 0244 06D19A1B 		.ascii	"\006\321\232\033.\331\277\301\365%\207\353\337\022n"
 150      2ED9BFC1 
 150      F52587EB 
 150      DF126E
 151 0253 20013708 		.ascii	" \0017\010\276%>G\332'\355\367\037,\026\373\036\364"
 151      BE253E47 
 151      DA27EDF7 
 151      1F2C16FB 
 151      1EF4
 152 0265 FE17C8D0 		.ascii	"\376\027\310\320\246 f\026\223<OFb\036f\224(\243h\214"
 152      A6206616 
 152      933C4F46 
 152      621E6694 
 152      28A3688C 
 153 0279 320C3ECA 		.ascii	"2\014>\312\217^\257\013\332\307\254\323\266\214\320"
 153      8F5EAF0B 
 153      DAC7ACD3 
 153      B68CD0
 154 0288 B2690898 		.ascii	"\262i\010\230\335c\310<l1C\367\2258\011$\363\220\377"
 154      DD63C83C 
 154      6C3143F7 
 154      95380924 
 154      F390FF
 155 029b 8CBFE8E4 		.ascii	"\214\277\350\344y\377\251\374\234\302\013E\005\376\274"
 155      79FFA9FC 
 155      9CC20B45 
 155      05FEBC
 156 02aa A3398507 		.ascii	"\2439\205\007\367\345\345\346\034\310\335\177\354x\276"
 156      F7E5E5E6 
 156      1CC8DD7F 
 156      EC78BE
 157 02b9 FFECE973 		.ascii	"\377\354\351sE\273\013\304/\024\006\251K"
 157      45BB0BC4 
 157      2F1406A9 
 157      4B
 158              		.text
 159              		.section	.gnu.lto_USBUART_SOF_ISR.24c054e9,"",%progbits
 160 0000 789C6366 		.ascii	"x\234cf\300\004R@\\\016\304\232@\314\310\314\300\310"
 160      C0045240 
 160      5C0EC49A 
 160      40CCC8CC 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 12


 160      C0C8
 161 0012 34E11C03 		.ascii	"4\341\034\003C#\007\023##\210\301\300\310P\317\304X"
 161      43230713 
 161      232388C1 
 161      C0C850CF 
 161      C458
 162 0024 CFF892E9 		.ascii	"\317\370\222\351#\023\343\204\003\253gp\253/mhh\370"
 162      2313E384 
 162      03AB6770 
 162      AB2F6D68 
 162      68F8
 163 0036 70E9EE31 		.ascii	"p\351\3561\246\206)\011?\231\030\030>3A\014b\\\316\250"
 163      A6862909 
 163      3F991818 
 163      3E33410C 
 163      625CCEA8 
 164 004a CE0054F5 		.ascii	"\316\000T\365\261\345\357un\266\026\240*\001\210\034"
 164      B1E5EF75 
 164      6EB616A0 
 164      2A01881C 
 165 005a E30A4636 		.ascii	"\343\012F6F \275^\350@\303\377\377\223\277\317\352P"
 165      4620BD5E 
 165      E840C3FF 
 165      FF93BFCF 
 165      EA50
 166 006c 96068A3F 		.ascii	"\226\006\212?\001b\220\025O\231\230@4\363=FF\220J\220"
 166      01629015 
 166      4F999840 
 166      34F33D46 
 166      46904A90 
 167 0080 514F9818 		.ascii	"QO\230\030AB@\005\352\356\251y\251E\211%\251)\361\301"
 167      41424005 
 167      EAEEA979 
 167      A9458925 
 167      A929F1C1 
 168 0094 F9A545C9 		.ascii	"\371\245E\311\2511\001\301\371\316\2461\241\301N\241"
 168      A93101C1 
 168      F9CEA631 
 168      A1C14EA1 
 169 00a4 8E4121F1 		.ascii	"\216A!\361\251\005\231\305Ez\311\014\000\265\0338\316"
 169      A90599C5 
 169      457AC90C 
 169      00B51B38 
 169      CE
 170              		.text
 171              		.section	.gnu.lto_USBUART_BUS_RESET_ISR.24c054e9,"",%progbits
 172 0000 789C6366 		.ascii	"x\234cf\300\004R@\274\024\2105\201\230\221\231\201\221"
 172      C0045240 
 172      BC148835 
 172      81989199 
 172      8191
 173 0012 69C23906 		.ascii	"i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261"
 173      86460E26 
 173      46461083 
 173      8191A19E 
 173      89B1
 174 0024 9EF125D3 		.ascii	"\236\361%\323G&\306\011\007V\317\340V_\332\320\320\360"
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 13


 174      4726C609 
 174      0756CFE0 
 174      565FDAD0 
 174      D0F0
 175 0036 61D157B7 		.ascii	"a\321W\267\206)\011?\231\030\030>3A\314a\\\316\250\316"
 175      8629093F 
 175      9918183E 
 175      3341CC61 
 175      5CCEA8CE 
 176 004a 0054F4B1 		.ascii	"\000T\364\261\345\357un\266\026\240\"\001\210\034\343"
 176      E5EF756E 
 176      B616A022 
 176      01881CE3 
 177 005a 0A463646 		.ascii	"\012F6F \275^\350@\303\377\377\227\257\316~a$\315\314"
 177      20BD5EE8 
 177      40C3FFFF 
 177      97AFCE7E 
 177      6124CDCC 
 178 006e C0F00428 		.ascii	"\300\360\004(\007\262\341)\023\023\210f\276\303\330"
 178      07B2E129 
 178      13138866 
 178      BEC3D8
 179 007d 7CE0EF3B 		.ascii	"|\340\357;\015\220j\2201\363.\367\255c\252\375\335\320"
 179      0D906A90 
 179      31F32EF7 
 179      AD63AAFD 
 179      DDD0
 180 008f D1C0F193 		.ascii	"\321\300\361\223\211\3613\023\320\004\306\225\214\265"
 180      89F13313 
 180      D004C695 
 180      8CB5
 181 009d 0C3F81CA 		.ascii	"\014?\201\312\35716\036\230\376\236\003\254\224\001"
 181      EF31361E 
 181      98FE9E03 
 181      AC9401
 182 00ac 641223C8 		.ascii	"d\022#\310\004\240y\352\356\251y\251E\211%\251)\361"
 182      04A079EA 
 182      EEA979A9 
 182      458925A9 
 182      29F1
 183 00be C1F9A545 		.ascii	"\301\371\245E\311\2511\001\301\371\316\2461\241\301"
 183      C9A93101 
 183      C1F9CEA6 
 183      31A1C1
 184 00cd 4EA18E41 		.ascii	"N\241\216A!\361\251\005\231\305Ez\311\014\000\007\245"
 184      21F1A905 
 184      99C5457A 
 184      C90C0007 
 184      A5
 185 00de 4B64     		.ascii	"Kd"
 186              		.text
 187              		.section	.gnu.lto_.symbol_nodes.24c054e9,"",%progbits
 188 0000 789C55C8 		.ascii	"x\234U\310\261\015\2000\014\005\321\263\035G)\331\224"
 188      B10D8030 
 188      0C05D1B3 
 188      1D4729D9 
 188      94
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 14


 189 0011 117E4660 		.ascii	"\021~F`\002D\301<\314\300$\210\002\212\344\272w\001"
 189      0244C13C 
 189      CCC02488 
 189      028AE4BA 
 189      7701
 190 0023 ACFC3982 		.ascii	"\254\3749\202\355\002\211\375hd\262\0107\331x\335\345"
 190      ED0289FD 
 190      6864B208 
 190      37D978DD 
 190      E5
 191 0034 934331B9 		.ascii	"\223C1\271\250\214\266\252\374L\357\215\310\312y?\306"
 191      A88CB6AA 
 191      FC4CEF8D 
 191      C8CA793F 
 191      C6
 192 0045 0BF3731B 		.ascii	"\013\363s\033\320"
 192      D0
 193              		.text
 194              		.section	.gnu.lto_.refs.24c054e9,"",%progbits
 195 0000 789C6366 		.ascii	"x\234cf``\320f\200\000\026\006\006FV\006F\016FF.FFn"
 195      6060D066 
 195      80001606 
 195      06465606 
 195      460E4646 
 196 0018 1626141E 		.ascii	"\026&\024\03632\217\001\000\024s\000\270"
 196      33328F01 
 196      00147300 
 196      B8
 197              		.text
 198              		.section	.gnu.lto_.decls.24c054e9,"",%progbits
 199 0000 789CB556 		.ascii	"x\234\265V}PT\327\025\177\367\335e\331}\354\202#St\234"
 199      7D5054D7 
 199      157FF7DD 
 199      65D97DEC 
 199      82235374 
 200 0015 E9949A29 		.ascii	"\351\224\232)I;N\006\333i'\375+V\206\246i\322\350\270"
 200      493B4E06 
 200      DB6927FD 
 200      2B5686A6 
 200      69D2E8B8 
 201 0029 F847A6CE 		.ascii	"\370G\246\316P\002\017d&\205\315\262\266\223\376\365"
 201      50020F64 
 201      2685CDB2 
 201      B693FEF5 
 202 0039 6041BE09 		.ascii	"`A\276\0112!|\230\220U\301\345\033\004Aa\251 \001!\202"
 202      32217C98 
 202      9055C1E5 
 202      1B044161 
 202      A9200121 
 203 004e 1F4D094A 		.ascii	"\037M\011J\265\202(\022\020q!D\020\220\355\271\367\275"
 203      B5822812 
 203      10712144 
 203      1090EDB9 
 203      F7BD
 204 0060 B76F1777 		.ascii	"\267o\027w\223\2663y3g\357;\367\376\316\307\375\235"
 204      93B63379 
 204      3367EF3B 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 15


 204      F7FECEC7 
 204      FD9D
 205 0072 7BCF5BCC 		.ascii	"{\317[\3140\314\034b\030'<?\3243\314-xW\303\334~Fy\210"
 205      30CC1C62 
 205      18273C3F 
 205      D433CC2D 
 205      7857C3DC 
 206 008a 5E0FD208 		.ascii	"^\017\322\010\322\014\322\002r\026\244\035\004\340\314"
 206      D20CD202 
 206      7216A41D 
 206      04E0CC
 207 0099 34E3F910 		.ascii	"4\343\371\020\254^\362\021B\374\203\314\202\004\000"
 207      AC5EF211 
 207      42FC83CC 
 207      820400
 208 00a8 9803D183 		.ascii	"\230\003\321\203\374\016t\035\21430\006\3028\005\343"
 208      FC0E741D 
 208      8C333006 
 208      C23805E3 
 209 00b8 04881F11 		.ascii	"\004\210\037\021\3207`\274\0112\0022&\305\251\367\021"
 209      D03760BC 
 209      09320232 
 209      26C5A9F7 
 209      11
 210 00c9 AFF17B8A 		.ascii	"\257\361{\212\327\350#^\363\367\024\257\331G\274\026"
 210      D7E8235E 
 210      F3F714AF 
 210      D947BC16 
 211 00d9 695EAE09 		.ascii	"i^\256\011\222\3466?\244&X\302\005\001\250F\232g\031"
 211      92E6363F 
 211      A42658C2 
 211      0501A846 
 211      9A6719
 212 00ec A55E9B9F 		.ascii	"\245^\233\237\005\026u4.]\011\370\212E\201\\(Q;\213"
 212      05167534 
 212      2E5D09F8 
 212      8A45815C 
 212      28513B8B 
 213 0100 064BD5A0 		.ascii	"\006K\325\240\3528\025Q\355k\223#\252m\305\002<\205"
 213      EA381551 
 213      ED6B9323 
 213      AA6DC502 
 213      3C85
 214 0112 16618B0A 		.ascii	"\026a\213\012\355\017A6\264\003U\243\035\220I\015\332"
 214      ED0F4136 
 214      B40355A3 
 214      1D90490D 
 214      DA
 215 0123 06BF7F54 		.ascii	"\006\277\177T\211\236\012*\326\233\364\230E\344\375"
 215      899E0A2A 
 215      D69BF498 
 215      45E4FD
 216 0132 54E9DD11 		.ascii	"T\351\335\021nW-\230e\011=7Y%\234m\270\247A\027Z!X\233"
 216      6E572D98 
 216      65093D37 
 216      59259C6D 
 216      B8A74117 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 16


 217 014a 1D9DE55F 		.ascii	"\035\235\345_\352\204A\241\307\351|\225\272B\265\010"
 217      EA8441A1 
 217      C7E97C95 
 217      BA42B508 
 218 015a A33AB48B 		.ascii	"\243:\264\213n\022\336\305\335\326\243P0\313/)K\323"
 218      6E12DEC5 
 218      DDD6A350 
 218      30CB2F29 
 218      4BD3
 219 016c E2BDD477 		.ascii	"\342\275\324w]\273m!\200\272\260\256\234R\213\016\250"
 219      5DBB6D21 
 219      80BAB0AE 
 219      9C528B0E 
 219      A8
 220 017d 7D839B7D 		.ascii	"}\203\233}\203l\337H\355-G\317\335\363\307\006j\277"
 220      836CDF48 
 220      ED2D47CF 
 220      DDF3C706 
 220      6ABF
 221 018f 3CB8D2AA 		.ascii	"<\270\322\252\022\355\313l\356\366Mn\366M\262}3\265"
 221      12EDCB6C 
 221      EEF64D6E 
 221      F64DB27D 
 221      33B5
 222 01a1 7F98317F 		.ascii	"\177\2301\177\033\3418j?\326g9\216\301\276\271\331\372"
 222      1BE1386A 
 222      3FD66739 
 222      8EC1BEB9 
 222      D9FA
 223 01b3 A82DAE27 		.ascii	"\250-\256']Xw:\261\270\2033n\036\316\310\036Z\250\207"
 223      5D58773A 
 223      B1B88333 
 223      6E1ECEC8 
 223      1E5AA887 
 224 01c7 3BA72BAE 		.ascii	";\247+\256\251\260\231z\310;\223;\247\246\031L\324\236"
 224      A9B0997A 
 224      C83B933B 
 224      A7A6194C 
 224      D49E
 225 01d9 EBF324A1 		.ascii	"\353\363$\241\325\315E\253\354\342,u1p\254 \333\037"
 225      D5CD45AB 
 225      ECE22C75 
 225      3170AC20 
 225      DB1F
 226 01eb E720EAA3 		.ascii	"\347 \352\243\367\243\217\323\365\340cBp\\\316h\375"
 226      F7A38FD3 
 226      F5E06342 
 226      705CCE68 
 226      FD
 227 01fc 75997022 		.ascii	"u\231p\"M\330p:\221\350\245\315\315K\233\354\245\235"
 227      4DD8703A 
 227      91E8A5CD 
 227      CD4B9BEC 
 227      A59D
 228 020e 7A69EEAE 		.ascii	"zi\356\256\313\326\322\202\377\211\262\221\341\310\346"
 228      CBD6D282 
 228      FF89B291 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 17


 228      E1C8E6
 229 021d 68C17544 		.ascii	"h\301uD\035\355\316\314\324\340A1F\352i{\236?\254\205"
 229      1DEDCECC 
 229      D4E04131 
 229      46EA697B 
 229      9E3FAC85 
 230 0231 70628187 		.ascii	"pb\201\207\312/b\252:\3112;6\366\341S\214\270\260,A"
 230      CA2F62AA 
 230      3AC9323B 
 230      36F6E153 
 230      8CB8B02C 
 231 0246 48131C45 		.ascii	"H\023\034E\002\336\316\240];\320Ow0\350\357(\014`4\005"
 231      02DECEA0 
 231      5D3BD04F 
 231      7730E8EF 
 231      280C6034 
 232 025b D409E7C5 		.ascii	"\324\011\347\305\016\347\245\022N\203\243\"\363\302"
 232      0EE7A512 
 232      4E83A322 
 232      F3C2
 233 0269 EF2DC21E 		.ascii	"\357-\302\036\324\2058\324\341J\222F\220NH\326\015\373"
 233      D48538D4 
 233      E14A9246 
 233      904E48D6 
 233      0DFB
 234 027b 397FEC10 		.ascii	"9\177\354\0203\370l\2742\227\303\313\242R5\234?\305"
 234      33F86CBC 
 234      3297C3CB 
 234      A252359C 
 234      3FC5
 235 028d E134F184 		.ascii	"\3414\361\204\015M\256|\255\243\333\330B\324\361\374"
 235      0D4DAE7C 
 235      ADA3DBD8 
 235      42D4F1FC 
 236 029d A2D31CCE 		.ascii	"\242\323\034\316\023\327\312\226\207/\005\321\265\355"
 236      13D7CA96 
 236      872F05D1 
 236      B5ED
 237 02ab 444DB32F 		.ascii	"DM\263//r\270X\\\253:}}U\215\313E\245z\362j\221\236"
 237      2F72B858 
 237      5CAB3A7D 
 237      7D558DCB 
 237      45A57AF2 
 238 02c2 025F226A 		.ascii	"\002_\"j\371\215\251%L\271`\211\372\311\342|\227\026"
 238      F98DA925 
 238      4CB96089 
 238      FAC9E27C 
 238      9716
 239 02d4 9F603DB8 		.ascii	"\237`=\270\010\025\271(y\270rVCUR| c\355^\243M\215\302"
 239      0815B928 
 239      79B87256 
 239      4355527C 
 239      2063ED5E 
 240 02ec 38B24BEB 		.ascii	"8\262K\353S-B\303\260\303Ae\207\241\322\016)Y\202E\360"
 240      532D42C3 
 240      B0C34165 
 240      87A1D20E 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 18


 240      29598245 
 241 0301 AB0E64D0 		.ascii	"\253\016d\320E\240f\000\250AC\300W\250\304\327\3470"
 241      45A06600 
 241      A84143C0 
 241      57A8C4D7 
 241      E730
 242 0313 79192621 		.ascii	"y\031&!\312\322\263\336\031\214\253\305\014\306\227"
 242      CAD2B3DE 
 242      198CABC5 
 242      0CC697
 243 0322 C77BFD69 		.ascii	"\307{\375i\262\341D\335\350[\257V\343Vq\255\262\370"
 243      B2E144DD 
 243      E85BAF56 
 243      E35671AD 
 243      B2F8
 244 0334 A37A3F9A 		.ascii	"\243z?\232\271\206\250\327g\272\347\374\360\005\272"
 244      B986A8D7 
 244      67BAE7FC 
 244      F005BA
 245 0343 16B0313A 		.ascii	"\026\2601:\357\320\241\235\344\011&?aVH\301Q:T\033\263"
 245      EFD0A19D 
 245      E409263F 
 245      615648C1 
 245      513A541B 
 246 0358 9026E46D 		.ascii	"\220&\344m\247\245\350\201Do\240`\271|/\221\333}\221"
 246      A7A5E881 
 246      446FA060 
 246      B97C2F91 
 246      DB7D91
 247 036b DC718680 		.ascii	"\334q\206\200\255\347\247\374J\303)\360\037\236\300"
 247      ADE7A7FC 
 247      4AC329F0 
 247      1F9EC0
 248 037a EB6813B2 		.ascii	"\353h\023\262\316\205\354\365\342\3623\005\330\340\002"
 248      CE85ECF5 
 248      E2F23305 
 248      D8E002
 249 0389 F67B015E 		.ascii	"\366{\001^R\200\365.`\237\027\240\215\002\217\321\006"
 249      5280F52E 
 249      609F17A0 
 249      8D028FD1 
 249      06
 250 039a 25087B4C 		.ascii	"%\010{L\014:\007\364\235\247i\021,0\212n\003\2717\321"
 250      0C3A07F4 
 250      9DA76911 
 250      2C308A6E 
 250      03B937D1 
 251 03ae 4E3406F2 		.ascii	"N4\006\362\005\310\010\310(\310\227 \267@\376\005\362"
 251      05C808C8 
 251      28C89720 
 251      B740FE05 
 251      F2
 252 03bf 4FB49396 		.ascii	"O\264\223\226\207\206\254v\205\274\340%\344\317\\\251"
 252      8786AC76 
 252      85BCE025 
 252      E4CF5CA9 
 253 03cf D5B870DD 		.ascii	"\325\270p\335^p\273\\\270\246\014uu8=\020\327$\234\253"
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 19


 253      5E70BB5C 
 253      B8A60C75 
 253      75383D10 
 253      D7249CAB 
 254 03e3 F022818A 		.ascii	"\360\"\201\212\313F\027\364\312f(uz\225\356\227\034"
 254      CB4617F4 
 254      CA662875 
 254      7A95EE97 
 254      1C
 255 03f4 B2898A2A 		.ascii	"\262\211\212*\265\200\010\204\221\257\272\353\016-\364"
 255      B5800884 
 255      91AFBAEB 
 255      0E2DF4
 256 0403 DA3E60F1 		.ascii	"\332>`\361,\255?{\354\322\344'Z\024\026L\215:x\015\032"
 256      2CAD3F7B 
 256      ECD2E427 
 256      5A14164C 
 256      8D3A780D 
 257 0418 07AFFF56 		.ascii	"\007\257\377VN&\361@\037o,\242;@\336\377C$d\221;ur\300"
 257      4E26F140 
 257      1F6F2CA2 
 257      3B40DEFF 
 257      43246491 
 258 0430 3F18BCA6 		.ascii	"?\030\274\246~\233W\346\177q9v2\277?\220\336\201\011"
 258      7E9B57E6 
 258      7F713976 
 258      32BF3F90 
 258      DE8109
 259 0443 35D1339F 		.ascii	"5\3213\237VO!z\356\337%\352\272\345\321\023\314eI\237"
 259      564F217A 
 259      EEDF25EA 
 259      BAE5D113 
 259      CC65499F 
 260 0457 2BED6020 		.ascii	"+\355` ,\270}\257\356!\270\204\300#e\235\364\276\371"
 260      2CB87DAF 
 260      EE21B884 
 260      C023659D 
 260      F4BEF9
 261 046a C1EB015B 		.ascii	"\301\353\001[\013\245m\207\232(3w\001>I\341\367\321"
 261      0BA56D87 
 261      9A283377 
 261      013E49E1 
 261      F7D1
 262 047c 56D988A0 		.ascii	"V\331\210\240\273\333\272\006\003\335\321\023\337\206"
 262      BBDBBA06 
 262      03DDD113 
 262      DF86
 263 048a 5E3D9F7E 		.ascii	"^=\237~J\213S1\275\23633\323\207^8!T\246:.Wm\354)\026"
 263      4A8B5331 
 263      BD9E3333 
 263      D3875E38 
 263      2154A63A 
 264 04a4 0A3FB40A 		.ascii	"\012?\264\012\016\347\253?BSh+z \226\302\315\325\003"
 264      0EE7AB3F 
 264      4253682B 
 264      7A2096C2 
 264      CDD503
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 20


 265 04b7 B163A369 		.ascii	"\261c\243i\364\002\030\013%\271\225\032\234'zj{\222"
 265      F402180B 
 265      25B9951A 
 265      9C277A6A 
 265      7B92
 266 04c9 D3A1273B 		.ascii	"\323\241';\264\374\027\035\027\212?r5gT+\366\350\315"
 266      B4FC171D 
 266      178A3F72 
 266      3567542B 
 266      F6E8CD
 267 04dc 160F7DF6 		.ascii	"\026\017}\366\350\201\3057\322\241G\317\302)\374J9'"
 267      E881C537 
 267      D2A147CF 
 267      C229FC4A 
 267      3927
 268 04ee 334869D2 		.ascii	"3Hi\322\331\223\345Wt\272\034\322\313$\242\011Xaz\016"
 268      D993E557 
 268      74BA1CD2 
 268      CB24A209 
 268      58617A0E 
 269 0502 E9E80E60 		.ascii	"\351\350\016`$_\337a\313}\216VM\320\022\353\226\376"
 269      245FDF61 
 269      CB7D8E56 
 269      4DD012EB 
 269      96FE
 270 0514 8AC7629F 		.ascii	"\212\307b\237-\244\233*\356\372\270H\374$\011\036\275"
 270      2DA49B2A 
 270      EEFAB848 
 270      FC24091E 
 270      BD
 271 0525 5D27F6F6 		.ascii	"]'\366\366\243\005\307\357\004\341c\"\001\367\007\256"
 271      A305C7EF 
 271      04E16322 
 271      01F707AE 
 272 0535 2DEBB14D 		.ascii	"-\353\261MT\246\0375\334\362\307\215\242\362\315\352"
 272      54A61F35 
 272      DCF2C78D 
 272      A2F2CDEA 
 273 0545 033BC66D 		.ascii	"\003;\306m\242r\274\360\2132\361\363p\230\250s-\326"
 273      A272BCF0 
 273      8B32F1F3 
 273      7098A873 
 273      2DD6
 274 0557 4B1AEA51 		.ascii	"K\032\352QO\013\277X\267\246\362}N\226\345sr^<']-\237"
 274      4F0BBF58 
 274      B7A6F27D 
 274      4E96E573 
 274      725E3C27 
 275 056e 1EE594CA 		.ascii	"\036\345\224\312#z\345\277\001\370\023\012_\241\225"
 275      237AE5BF 
 275      01F8130A 
 275      5FA195
 276 057d 5F962BBF 		.ascii	"_\226+\277t\267\252(\000\333i\036\352\342\374\274\311"
 276      74B7AA28 
 276      00DB691E 
 276      EAE2FCBC 
 276      C9
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 21


 277 058e 20441BAF 		.ascii	" D\033\257\324ws\347\337V\372\356\327@\357\232\267\276"
 277      D47773E7 
 277      DF56FAEE 
 277      D740EF9A 
 277      B7BE
 278 05a0 E1BA8BEF 		.ascii	"\341\272\213\3571\3501Dr\320Hk\322EtB\351\236\301\315"
 278      31E83144 
 278      72D0486B 
 278      D2457442 
 278      E99EC1CD 
 279 05b4 5805D900 		.ascii	"X\005\331\000YW\272\227`\355|\021\232\022\344\204\236"
 279      5957BA97 
 279      60ED7C11 
 279      9A12E484 
 279      9E
 280 05c5 4ACEE54C 		.ascii	"J\316\345L\237\353\301M\323r\377Z\364\222\207\322\224"
 280      9FEBC14D 
 280      D372FF5A 
 280      F49287D2 
 280      94
 281 05d6 3A5CB825 		.ascii	":\\\270%/\270\213JKj\260\221\226\264\346\245%\261+S"
 281      2FB88B4A 
 281      4B6AB091 
 281      96B4E6A5 
 281      25B12B53 
 282 05ea ED8E40B9 		.ascii	"\355\216@\271\013\331\0234(\225\015F\013\312\351Z{\256"
 282      0BD91334 
 282      28950D46 
 282      0BCAE95A 
 282      7BAE
 283 05fc 0BB9ED1C 		.ascii	"\013\271\355\034\011l\330wn\036\250\237\357\274q\005"
 283      096CD877 
 283      6E1EA89F 
 283      EFBC7105 
 284 060c 29857A8F 		.ascii	")\205z\217\006y\004N\346)}i\254\307\025\255i\276Z\347"
 284      0679044E 
 284      E6297D69 
 284      ACC715AD 
 284      69BE5AE7 
 285 0620 87BB69A1 		.ascii	"\207\273i\241\360\343\023\235C\001(xg\230{|\3054\235"
 285      F0E3139D 
 285      43012878 
 285      67987B7C 
 285      C5349D
 286 0633 15831F85 		.ascii	"\025\203\037\205D2X\205\355\211\232\231\267\004 \007"
 286      44325885 
 286      ED899A99 
 286      B7042007 
 287 0643 5C230B8B 		.ascii	"\\#\013\213)N\266r\243\221\356\372\323\032\302\016 "
 287      294EB672 
 287      A391EEFA 
 287      D31AC20E 
 287      20
 288 0654 9E6FD8B7 		.ascii	"\236o\330\267O^(\321\343~\232\012\373yZ\303\242^\246"
 288      4F5E28D1 
 288      E37E9A0A 
 288      FB795AC3 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 22


 288      A25EA6
 289 0667 AA365183 		.ascii	"\2526Q\203\262\301i&\353\242\212xx\216*W\320,\310\320"
 289      B2C16926 
 289      EBA28A78 
 289      788E2A57 
 289      D02CC8D0 
 290 067b 5BB610A5 		.ascii	"[\266\020\245}\243\252_\2534d\037V\214\273\311j\346"
 290      7DA3AA5F 
 290      AB34641F 
 290      568CBBC9 
 290      6AE6
 291 068d E8ACCAE3 		.ascii	"\350\254\312\343\242\347\000J\271*\271\254x\321a\004"
 291      A2E7004A 
 291      B92AB9AC 
 291      78D16104 
 292 069d F4B3BEB1 		.ascii	"\364\263\276\261R\316#\200\267\0122\276\312W\362\300"
 292      52CE2380 
 292      B70A32BE 
 292      CA57F2C0 
 293 06ad 31A0722F 		.ascii	"1\240r/_\236\317\362\241|v+\371\2136\333`G\036\351\221"
 293      5F9ECFF2 
 293      A17C762B 
 293      F98B36DB 
 293      60471EE9 
 294 06c2 8EAAA457 		.ascii	"\216\252\244W \245W@\323\273S\332\223\343\271\031\362"
 294      20A55740 
 294      D3BB53DA 
 294      93E3B919 
 294      F2
 295 06d3 5F59417F 		.ascii	"_YA\177\300\352d\216\341\225\331r\320\260\367\340o\016"
 295      C0EA648E 
 295      E195D972 
 295      D0B0F7E0 
 295      6F0E
 296 06e5 444547EE 		.ascii	"DEG\356\217\336\035\375\272\341\200\372\265\267\016"
 296      8FDE1DFD 
 296      BAE180FA 
 296      B5B70E
 297 06f4 8646302F 		.ascii	"\206F0/\276\306'\361\246\0303\037\027mH>b\212\345\017"
 297      BEC627F1 
 297      A618331F 
 297      176D483E 
 297      628AE50F 
 298 0708 ED372447 		.ascii	"\3557$G\374\362\220\014\347\215\211)\246\227c=\354\177"
 298      FCF2900C 
 298      E78D8929 
 298      A697633D 
 298      EC7F
 299 071a 4EECDD27 		.ascii	"N\354\335'~A&\202\344\011\303\276\337\022\375\007\262"
 299      7E412682 
 299      E409C3BE 
 299      DF12FD07 
 299      B2
 300 072b BEF7A021 		.ascii	"\276\367\240!\372@\244!2\212\314n\223g\017\360\257'"
 300      FA40A421 
 300      328ACC6E 
 300      93670FF0 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 23


 300      AF27
 301 073d 259A2392 		.ascii	"%\232#\222\377lLN\342\223\314?\371\216<\214\1771\277"
 301      FF6C4C4E 
 301      E293CC3F 
 301      F98E3C8C 
 301      7F31BF
 302 0750 7C98F13B 		.ascii	"|\230\361;\222\230d~\345\307>\260\261\357\233\3377\362"
 302      9298647E 
 302      E5C73EB0 
 302      B1EF9BDF 
 302      37F2
 303 0762 298053C7 		.ascii	")\200S\307\230\315\246\304w\270\030cb\244\321`\006\250"
 303      98CDA6C4 
 303      77B81863 
 303      62A4D160 
 303      06A8
 304 0774 F6F05FA5 		.ascii	"\366\360_\2457\015o\214JNHx\227W\305\304\305\231\324"
 304      370D6F8C 
 304      4A4E4878 
 304      9757C5C4 
 304      C599D4
 305 0787 BCF10FC9 		.ascii	"\274\361\017\311q\274\2328\336\375+\356\235#\361\361"
 305      71BC9A38 
 305      DEFD2BEE 
 305      9D23F1F1 
 306 0797 FBE2E353 		.ascii	"\373\342\343Sx3}\345M\206\304\277\361ZX\343M\3611\261"
 306      78337DE5 
 306      4D86C4BF 
 306      F15A58E3 
 306      4DF131B1 
 307 07ab BCAFC852 		.ascii	"\274\257\310R\226\0209$*\332\215\230\210\2507\243\367"
 307      96103924 
 307      2ADA8D98 
 307      88A837A3 
 307      F7
 308 07bc BEB92FE2 		.ascii	"\276\271/\342\015N\231T\231\370\204W\\\344\244$\362"
 308      0D4E9954 
 308      99F88457 
 308      5CE4A424 
 308      F2
 309 07cd C07174   		.ascii	"\300qt"
 310 07d0 8AD97424 		.ascii	"\212\331t$\326\014\311D$\231\303\305a\267\037\014\246"
 310      D60CC944 
 310      2499C3C5 
 310      61B71F0C 
 310      A6
 311 07e1 709C1063 		.ascii	"p\234\020c\364\003T\2441\304\323&E2\372\017\370<\225"
 311      F40354A4 
 311      31C4D326 
 311      4532FA0F 
 311      F83C95
 312 07f4 97       		.ascii	"\227"
 313              		.text
 314              		.section	.gnu.lto_.symtab.24c054e9,"",%progbits
 315 0000 55534255 		.ascii	"USBUART_EP_1_ISR\000\000\000\000\000\000\000\000\000"
 315      4152545F 
 315      45505F31 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 24


 315      5F495352 
 315      00000000 
 316 0019 000000AC 		.ascii	"\000\000\000\254\000\000\000USBUART_EP_2_ISR\000\000"
 316      00000055 
 316      53425541 
 316      52545F45 
 316      505F325F 
 317 0032 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\256\000\000"
 317      00000000 
 317      0000AE00 
 317      00
 318 003f 00555342 		.ascii	"\000USBUART_EP_3_ISR\000\000\000\000\000\000\000\000"
 318      55415254 
 318      5F45505F 
 318      335F4953 
 318      52000000 
 319 0058 00000000 		.ascii	"\000\000\000\000\260\000\000\000USBUART_SOF_ISR\000"
 319      B0000000 
 319      55534255 
 319      4152545F 
 319      534F465F 
 320 0070 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\262\000"
 320      00000000 
 320      000000B2 
 320      00
 321 007d 00005553 		.ascii	"\000\000USBUART_BUS_RESET_ISR\000\000\000\000\000\000"
 321      42554152 
 321      545F4255 
 321      535F5245 
 321      5345545F 
 322 009a 00000000 		.ascii	"\000\000\000\000\000\000\264\000\000\000USBUART_EP\000"
 322      0000B400 
 322      00005553 
 322      42554152 
 322      545F4550 
 323 00af 00020000 		.ascii	"\000\002\000\000\000\000\000\000\000\000\000\347\000"
 323      00000000 
 323      000000E7 
 323      00
 324 00bc 00005553 		.ascii	"\000\000USBUART_ReInitComponent\000\000\002\000\000"
 324      42554152 
 324      545F5265 
 324      496E6974 
 324      436F6D70 
 325 00da 00000000 		.ascii	"\000\000\000\000\000\000\000\266\000\000\000"
 325      000000B6 
 325      000000
 326              		.text
 327              		.section	.gnu.lto_.opts,"",%progbits
 328 0000 272D666E 		.ascii	"'-fno-trapv' '-mcpu=cortex-m3' '-mthumb' '-g' '-O3'"
 328      6F2D7472 
 328      61707627 
 328      20272D6D 
 328      6370753D 
 329 0033 20272D66 		.ascii	" '-ffunction-sections' '-finline-functions' '-flto'"
 329      66756E63 
 329      74696F6E 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 25


 329      2D736563 
 329      74696F6E 
 330 0066 20272D66 		.ascii	" '-ffat-lto-objects'\000"
 330      6661742D 
 330      6C746F2D 
 330      6F626A65 
 330      63747327 
 331              		.text
 332              		.cfi_sections	.debug_frame
 333              		.section	.text.USBUART_EP_1_ISR,"ax",%progbits
 334              		.align	2
 335              		.global	USBUART_EP_1_ISR
 336              		.thumb
 337              		.thumb_func
 338              		.type	USBUART_EP_1_ISR, %function
 339              	USBUART_EP_1_ISR:
 340              	.LFB0:
 341              		.file 1 "Generated_Source\\PSoC5\\USBUART_episr.c"
   1:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART_episr.c **** * \file USBUART_episr.c
   3:Generated_Source\PSoC5/USBUART_episr.c **** * \version 3.0
   4:Generated_Source\PSoC5/USBUART_episr.c **** *
   5:Generated_Source\PSoC5/USBUART_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBUART_episr.c **** *
   8:Generated_Source\PSoC5/USBUART_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBUART_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBUART_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBUART_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBUART_episr.c **** 
  16:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:Generated_Source\PSoC5/USBUART_episr.c **** 
  19:Generated_Source\PSoC5/USBUART_episr.c **** 
  20:Generated_Source\PSoC5/USBUART_episr.c **** 
  21:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBUART_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBUART_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBUART_episr.c **** 
  26:Generated_Source\PSoC5/USBUART_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBUART_episr.c **** 
  28:Generated_Source\PSoC5/USBUART_episr.c **** 
  29:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBUART_episr.c ****     /******************************************************************************
  31:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
  32:Generated_Source\PSoC5/USBUART_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBUART_episr.c ****     *
  34:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBUART_episr.c ****     *
  36:Generated_Source\PSoC5/USBUART_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:Generated_Source\PSoC5/USBUART_episr.c ****     {
 342              		.loc 1 38 0
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 26


 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBUART_episr.c **** 
  40:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBUART_episr.c **** 
  44:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBUART_episr.c **** 
  46:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBUART_episr.c **** 
  48:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBUART_episr.c ****         {
  51:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBUART_episr.c ****     
  55:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
 347              		.loc 1 55 0
 348 0000 0949     		ldr	r1, .L7
  56:Generated_Source\PSoC5/USBUART_episr.c ****             
  57:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBUART_episr.c ****         */
  61:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBUART_episr.c ****         {
  65:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
 349              		.loc 1 66 0
 350 0002 0A48     		ldr	r0, .L7+4
  55:Generated_Source\PSoC5/USBUART_episr.c ****             
 351              		.loc 1 55 0
 352 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBUART_episr.c ****             
  68:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
 353              		.loc 1 69 0
 354 0006 0A4B     		ldr	r3, .L7+8
  55:Generated_Source\PSoC5/USBUART_episr.c ****             
 355              		.loc 1 55 0
 356 0008 02F0FE02 		and	r2, r2, #254
 357 000c 0A70     		strb	r2, [r1]
  66:Generated_Source\PSoC5/USBUART_episr.c ****             
 358              		.loc 1 66 0
 359 000e 827C     		ldrb	r2, [r0, #18]	@ zero_extendqisi2
 360              		.loc 1 69 0
 361 0010 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 362 0012 02F00302 		and	r2, r2, #3
 363 0016 012A     		cmp	r2, #1
 364 0018 03D0     		beq	.L2
  70:Generated_Source\PSoC5/USBUART_episr.c ****             {
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 27


  71:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 365              		.loc 1 71 0
 366 001a DA7B     		ldrb	r2, [r3, #15]	@ zero_extendqisi2
 367 001c 82F08002 		eor	r2, r2, #128
 368 0020 DA73     		strb	r2, [r3, #15]
 369              	.L2:
  72:Generated_Source\PSoC5/USBUART_episr.c ****             }
  73:Generated_Source\PSoC5/USBUART_episr.c **** 
  74:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBUART_episr.c ****             */
  80:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
 370              		.loc 1 80 0
 371 0022 0122     		movs	r2, #1
 372 0024 5A73     		strb	r2, [r3, #13]
 373 0026 7047     		bx	lr
 374              	.L8:
 375              		.align	2
 376              	.L7:
 377 0028 0B600040 		.word	1073766411
 378 002c FC5F0040 		.word	1073766396
 379 0030 00000000 		.word	USBUART_EP
 380              		.cfi_endproc
 381              	.LFE0:
 382              		.size	USBUART_EP_1_ISR, .-USBUART_EP_1_ISR
 383              		.section	.text.USBUART_EP_2_ISR,"ax",%progbits
 384              		.align	2
 385              		.global	USBUART_EP_2_ISR
 386              		.thumb
 387              		.thumb_func
 388              		.type	USBUART_EP_2_ISR, %function
 389              	USBUART_EP_2_ISR:
 390              	.LFB1:
  81:Generated_Source\PSoC5/USBUART_episr.c ****         }
  82:Generated_Source\PSoC5/USBUART_episr.c **** 
  83:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:Generated_Source\PSoC5/USBUART_episr.c ****             {
  88:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBUART_episr.c ****             }
  90:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBUART_episr.c ****     
  93:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBUART_episr.c **** 
  95:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBUART_episr.c **** 
  97:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBUART_episr.c **** 
 101:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 28


 102:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBUART_episr.c ****         
 104:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBUART_episr.c ****         }
 106:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBUART_episr.c ****     }
 108:Generated_Source\PSoC5/USBUART_episr.c **** 
 109:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBUART_episr.c **** 
 111:Generated_Source\PSoC5/USBUART_episr.c **** 
 112:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBUART_episr.c ****     *
 117:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBUART_episr.c ****     *
 119:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:Generated_Source\PSoC5/USBUART_episr.c ****     {
 391              		.loc 1 121 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 122:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBUART_episr.c **** 
 126:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBUART_episr.c **** 
 128:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBUART_episr.c **** 
 130:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBUART_episr.c ****         {
 133:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBUART_episr.c **** 
 137:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
 396              		.loc 1 137 0
 397 0000 0A49     		ldr	r1, .L14
 138:Generated_Source\PSoC5/USBUART_episr.c **** 
 139:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBUART_episr.c ****         */
 143:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
 145:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 147:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
 398              		.loc 1 148 0
 399 0002 0B48     		ldr	r0, .L14+4
 137:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 29


 400              		.loc 1 137 0
 401 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/USBUART_episr.c ****             
 150:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
 402              		.loc 1 151 0
 403 0006 0B4B     		ldr	r3, .L14+8
 137:Generated_Source\PSoC5/USBUART_episr.c **** 
 404              		.loc 1 137 0
 405 0008 02F0FD02 		and	r2, r2, #253
 406 000c 0A70     		strb	r2, [r1]
 148:Generated_Source\PSoC5/USBUART_episr.c ****             
 407              		.loc 1 148 0
 408 000e 90F82220 		ldrb	r2, [r0, #34]	@ zero_extendqisi2
 409              		.loc 1 151 0
 410 0012 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
 411 0014 02F00302 		and	r2, r2, #3
 412 0018 012A     		cmp	r2, #1
 413 001a 03D0     		beq	.L10
 152:Generated_Source\PSoC5/USBUART_episr.c ****             {
 153:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 414              		.loc 1 153 0
 415 001c DA7E     		ldrb	r2, [r3, #27]	@ zero_extendqisi2
 416 001e 82F08002 		eor	r2, r2, #128
 417 0022 DA76     		strb	r2, [r3, #27]
 418              	.L10:
 154:Generated_Source\PSoC5/USBUART_episr.c ****             }
 155:Generated_Source\PSoC5/USBUART_episr.c **** 
 156:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBUART_episr.c ****             */
 162:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
 419              		.loc 1 162 0
 420 0024 0122     		movs	r2, #1
 421 0026 5A76     		strb	r2, [r3, #25]
 422 0028 7047     		bx	lr
 423              	.L15:
 424 002a 00BF     		.align	2
 425              	.L14:
 426 002c 0B600040 		.word	1073766411
 427 0030 FC5F0040 		.word	1073766396
 428 0034 00000000 		.word	USBUART_EP
 429              		.cfi_endproc
 430              	.LFE1:
 431              		.size	USBUART_EP_2_ISR, .-USBUART_EP_2_ISR
 432              		.section	.text.USBUART_EP_3_ISR,"ax",%progbits
 433              		.align	2
 434              		.global	USBUART_EP_3_ISR
 435              		.thumb
 436              		.thumb_func
 437              		.type	USBUART_EP_3_ISR, %function
 438              	USBUART_EP_3_ISR:
 439              	.LFB2:
 163:Generated_Source\PSoC5/USBUART_episr.c ****         }
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 30


 164:Generated_Source\PSoC5/USBUART_episr.c **** 
 165:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
 169:Generated_Source\PSoC5/USBUART_episr.c ****             {
 170:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBUART_episr.c ****             }
 172:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBUART_episr.c ****     
 175:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBUART_episr.c **** 
 177:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBUART_episr.c **** 
 179:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBUART_episr.c **** 
 183:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBUART_episr.c ****         
 186:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBUART_episr.c ****         }
 188:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBUART_episr.c ****     }
 190:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBUART_episr.c **** 
 192:Generated_Source\PSoC5/USBUART_episr.c **** 
 193:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBUART_episr.c ****     *
 198:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBUART_episr.c ****     *
 200:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:Generated_Source\PSoC5/USBUART_episr.c ****     {
 440              		.loc 1 202 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 203:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBUART_episr.c **** 
 207:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBUART_episr.c **** 
 209:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBUART_episr.c **** 
 211:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBUART_episr.c ****         {
 214:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 31


 216:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBUART_episr.c **** 
 218:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
 445              		.loc 1 218 0
 446 0000 0C49     		ldr	r1, .L21
 219:Generated_Source\PSoC5/USBUART_episr.c **** 
 220:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBUART_episr.c ****         */
 224:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
 226:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 228:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
 447              		.loc 1 229 0
 448 0002 0D48     		ldr	r0, .L21+4
 218:Generated_Source\PSoC5/USBUART_episr.c **** 
 449              		.loc 1 218 0
 450 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 230:Generated_Source\PSoC5/USBUART_episr.c **** 
 231:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
 451              		.loc 1 232 0
 452 0006 0D4B     		ldr	r3, .L21+8
 218:Generated_Source\PSoC5/USBUART_episr.c **** 
 453              		.loc 1 218 0
 454 0008 02F0FB02 		and	r2, r2, #251
 455 000c 0A70     		strb	r2, [r1]
 229:Generated_Source\PSoC5/USBUART_episr.c **** 
 456              		.loc 1 229 0
 457 000e 90F83220 		ldrb	r2, [r0, #50]	@ zero_extendqisi2
 458              		.loc 1 232 0
 459 0012 93F82420 		ldrb	r2, [r3, #36]	@ zero_extendqisi2
 460 0016 02F00302 		and	r2, r2, #3
 461 001a 012A     		cmp	r2, #1
 462 001c 05D0     		beq	.L17
 233:Generated_Source\PSoC5/USBUART_episr.c ****             {
 234:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 463              		.loc 1 234 0
 464 001e 93F82720 		ldrb	r2, [r3, #39]	@ zero_extendqisi2
 465 0022 82F08002 		eor	r2, r2, #128
 466 0026 83F82720 		strb	r2, [r3, #39]
 467              	.L17:
 235:Generated_Source\PSoC5/USBUART_episr.c ****             }
 236:Generated_Source\PSoC5/USBUART_episr.c **** 
 237:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBUART_episr.c ****             */
 243:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
 468              		.loc 1 243 0
 469 002a 0122     		movs	r2, #1
 470 002c 83F82520 		strb	r2, [r3, #37]
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 32


 471 0030 7047     		bx	lr
 472              	.L22:
 473 0032 00BF     		.align	2
 474              	.L21:
 475 0034 0B600040 		.word	1073766411
 476 0038 FC5F0040 		.word	1073766396
 477 003c 00000000 		.word	USBUART_EP
 478              		.cfi_endproc
 479              	.LFE2:
 480              		.size	USBUART_EP_3_ISR, .-USBUART_EP_3_ISR
 481              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 482              		.align	2
 483              		.global	USBUART_SOF_ISR
 484              		.thumb
 485              		.thumb_func
 486              		.type	USBUART_SOF_ISR, %function
 487              	USBUART_SOF_ISR:
 488              	.LFB3:
 244:Generated_Source\PSoC5/USBUART_episr.c ****         }
 245:Generated_Source\PSoC5/USBUART_episr.c **** 
 246:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:Generated_Source\PSoC5/USBUART_episr.c ****             {
 251:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBUART_episr.c ****             }
 253:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBUART_episr.c **** 
 256:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBUART_episr.c **** 
 258:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBUART_episr.c **** 
 260:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBUART_episr.c **** 
 264:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBUART_episr.c ****         
 267:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBUART_episr.c ****         }
 269:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBUART_episr.c ****     }
 271:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBUART_episr.c **** 
 273:Generated_Source\PSoC5/USBUART_episr.c **** 
 274:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBUART_episr.c ****     *
 279:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBUART_episr.c ****     *
 281:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 33


 283:Generated_Source\PSoC5/USBUART_episr.c ****     {
 284:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBUART_episr.c **** 
 288:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBUART_episr.c **** 
 290:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBUART_episr.c **** 
 292:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBUART_episr.c ****         {
 295:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBUART_episr.c **** 
 299:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBUART_episr.c ****         
 301:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBUART_episr.c ****         */
 305:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBUART_episr.c ****         {
 309:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 311:Generated_Source\PSoC5/USBUART_episr.c **** 
 312:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBUART_episr.c ****             {
 315:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBUART_episr.c ****             }
 317:Generated_Source\PSoC5/USBUART_episr.c **** 
 318:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBUART_episr.c ****             */
 324:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBUART_episr.c ****         }
 326:Generated_Source\PSoC5/USBUART_episr.c **** 
 327:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:Generated_Source\PSoC5/USBUART_episr.c ****             {
 332:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBUART_episr.c ****             }
 334:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBUART_episr.c **** 
 337:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBUART_episr.c **** 
 339:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 34


 340:Generated_Source\PSoC5/USBUART_episr.c **** 
 341:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBUART_episr.c **** 
 345:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBUART_episr.c ****         
 348:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBUART_episr.c ****         }
 350:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBUART_episr.c ****     }
 352:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBUART_episr.c **** 
 354:Generated_Source\PSoC5/USBUART_episr.c **** 
 355:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBUART_episr.c ****     *
 360:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBUART_episr.c ****     *
 362:Generated_Source\PSoC5/USBUART_episr.c ****     *
 363:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:Generated_Source\PSoC5/USBUART_episr.c ****     {
 366:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBUART_episr.c **** 
 370:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBUART_episr.c **** 
 372:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBUART_episr.c **** 
 374:Generated_Source\PSoC5/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBUART_episr.c ****         {
 377:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBUART_episr.c **** 
 381:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBUART_episr.c ****     
 383:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBUART_episr.c ****         */
 387:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 391:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:Generated_Source\PSoC5/USBUART_episr.c **** 
 394:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBUART_episr.c ****             {
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 35


 397:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBUART_episr.c ****             }
 399:Generated_Source\PSoC5/USBUART_episr.c **** 
 400:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBUART_episr.c ****             */
 406:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBUART_episr.c ****         }
 408:Generated_Source\PSoC5/USBUART_episr.c **** 
 409:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:Generated_Source\PSoC5/USBUART_episr.c ****             {
 414:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBUART_episr.c ****             }
 416:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBUART_episr.c **** 
 419:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBUART_episr.c **** 
 421:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBUART_episr.c **** 
 423:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBUART_episr.c **** 
 427:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBUART_episr.c ****         
 430:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBUART_episr.c ****         }
 432:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBUART_episr.c ****     }
 434:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBUART_episr.c **** 
 436:Generated_Source\PSoC5/USBUART_episr.c **** 
 437:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
 440:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBUART_episr.c ****     *
 442:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBUART_episr.c ****     *
 444:Generated_Source\PSoC5/USBUART_episr.c ****     *
 445:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:Generated_Source\PSoC5/USBUART_episr.c ****     {
 448:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBUART_episr.c **** 
 452:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 36


 454:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBUART_episr.c **** 
 456:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBUART_episr.c ****         {
 459:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBUART_episr.c **** 
 463:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBUART_episr.c ****         
 465:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBUART_episr.c ****         */
 469:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBUART_episr.c ****         {
 473:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
 475:Generated_Source\PSoC5/USBUART_episr.c **** 
 476:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBUART_episr.c ****             {
 479:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBUART_episr.c ****             }
 481:Generated_Source\PSoC5/USBUART_episr.c ****             
 482:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBUART_episr.c ****             */
 488:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBUART_episr.c ****         }
 490:Generated_Source\PSoC5/USBUART_episr.c **** 
 491:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:Generated_Source\PSoC5/USBUART_episr.c ****             {
 496:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBUART_episr.c ****             }
 498:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBUART_episr.c **** 
 501:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBUART_episr.c **** 
 503:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBUART_episr.c **** 
 505:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBUART_episr.c **** 
 509:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 37


 511:Generated_Source\PSoC5/USBUART_episr.c ****         
 512:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBUART_episr.c ****         }
 514:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBUART_episr.c ****     }
 516:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBUART_episr.c **** 
 518:Generated_Source\PSoC5/USBUART_episr.c **** 
 519:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBUART_episr.c ****     *
 524:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBUART_episr.c ****     *
 526:Generated_Source\PSoC5/USBUART_episr.c ****     *
 527:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:Generated_Source\PSoC5/USBUART_episr.c ****     {
 530:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBUART_episr.c **** 
 534:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBUART_episr.c **** 
 536:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBUART_episr.c **** 
 538:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBUART_episr.c ****         {
 541:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBUART_episr.c ****     
 545:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBUART_episr.c ****         
 547:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBUART_episr.c ****         */
 551:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBUART_episr.c ****         {           
 555:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:Generated_Source\PSoC5/USBUART_episr.c **** 
 558:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBUART_episr.c ****             {
 561:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBUART_episr.c ****             }
 563:Generated_Source\PSoC5/USBUART_episr.c ****             
 564:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 38


 568:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBUART_episr.c ****             */
 570:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBUART_episr.c ****         }
 572:Generated_Source\PSoC5/USBUART_episr.c **** 
 573:Generated_Source\PSoC5/USBUART_episr.c **** 
 574:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:Generated_Source\PSoC5/USBUART_episr.c ****             {
 579:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBUART_episr.c ****             }
 581:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBUART_episr.c **** 
 584:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBUART_episr.c **** 
 586:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBUART_episr.c **** 
 588:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBUART_episr.c **** 
 592:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBUART_episr.c ****         
 595:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBUART_episr.c ****         }
 597:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBUART_episr.c ****     }
 599:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBUART_episr.c **** 
 601:Generated_Source\PSoC5/USBUART_episr.c **** 
 602:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBUART_episr.c ****     *
 607:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBUART_episr.c ****     *
 609:Generated_Source\PSoC5/USBUART_episr.c ****     *
 610:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:Generated_Source\PSoC5/USBUART_episr.c ****     {
 613:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBUART_episr.c **** 
 617:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBUART_episr.c **** 
 619:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBUART_episr.c **** 
 621:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBUART_episr.c ****         {
 624:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 39


 625:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBUART_episr.c **** 
 628:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBUART_episr.c ****         
 630:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBUART_episr.c ****         */
 634:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBUART_episr.c ****         {
 638:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:Generated_Source\PSoC5/USBUART_episr.c **** 
 641:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBUART_episr.c ****             {
 644:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBUART_episr.c ****             }
 646:Generated_Source\PSoC5/USBUART_episr.c **** 
 647:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBUART_episr.c ****             */
 653:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBUART_episr.c ****         }
 655:Generated_Source\PSoC5/USBUART_episr.c **** 
 656:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:Generated_Source\PSoC5/USBUART_episr.c ****             {
 661:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBUART_episr.c ****             }
 663:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBUART_episr.c **** 
 666:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBUART_episr.c **** 
 668:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBUART_episr.c **** 
 670:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBUART_episr.c **** 
 674:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBUART_episr.c ****         
 677:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBUART_episr.c ****         }
 679:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBUART_episr.c ****     }
 681:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 40


 682:Generated_Source\PSoC5/USBUART_episr.c **** 
 683:Generated_Source\PSoC5/USBUART_episr.c **** 
 684:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBUART_episr.c ****     *
 689:Generated_Source\PSoC5/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBUART_episr.c ****     *
 691:Generated_Source\PSoC5/USBUART_episr.c ****     *
 692:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
 694:Generated_Source\PSoC5/USBUART_episr.c ****     {
 489              		.loc 1 694 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494 0000 7047     		bx	lr
 495              		.cfi_endproc
 496              	.LFE3:
 497              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 498 0002 00BF     		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 499              		.align	2
 500              		.global	USBUART_BUS_RESET_ISR
 501              		.thumb
 502              		.thumb_func
 503              		.type	USBUART_BUS_RESET_ISR, %function
 504              	USBUART_BUS_RESET_ISR:
 505              	.LFB4:
 695:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBUART_episr.c **** 
 699:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBUART_episr.c **** 
 701:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBUART_episr.c **** 
 703:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBUART_episr.c **** 
 705:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBUART_episr.c ****     }
 709:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBUART_episr.c **** 
 711:Generated_Source\PSoC5/USBUART_episr.c **** 
 712:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBUART_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBUART_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBUART_episr.c **** *
 717:Generated_Source\PSoC5/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBUART_episr.c **** *
 720:Generated_Source\PSoC5/USBUART_episr.c **** *
 721:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 41


 722:Generated_Source\PSoC5/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBUART_episr.c **** {
 506              		.loc 1 723 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 724:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBUART_episr.c **** 
 728:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBUART_episr.c **** 
 730:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBUART_episr.c **** 
 732:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBUART_episr.c **** 
 734:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ReInitComponent();
 511              		.loc 1 734 0
 512 0000 FFF7FEBF 		b	USBUART_ReInitComponent
 513              	.LVL0:
 514              		.cfi_endproc
 515              	.LFE4:
 516              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 517              		.text
 518              	.Letext0:
 519              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 520              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 521              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 522              		.section	.debug_info,"",%progbits
 523              	.Ldebug_info0:
 524 0000 40020000 		.4byte	0x240
 525 0004 0400     		.2byte	0x4
 526 0006 00000000 		.4byte	.Ldebug_abbrev0
 527 000a 04       		.byte	0x4
 528 000b 01       		.uleb128 0x1
 529 000c 86010000 		.4byte	.LASF36
 530 0010 01       		.byte	0x1
 531 0011 D2000000 		.4byte	.LASF37
 532 0015 8D020000 		.4byte	.LASF38
 533 0019 00000000 		.4byte	.Ldebug_ranges0+0
 534 001d 00000000 		.4byte	0
 535 0021 00000000 		.4byte	.Ldebug_line0
 536 0025 02       		.uleb128 0x2
 537 0026 01       		.byte	0x1
 538 0027 06       		.byte	0x6
 539 0028 F2020000 		.4byte	.LASF0
 540 002c 02       		.uleb128 0x2
 541 002d 01       		.byte	0x1
 542 002e 08       		.byte	0x8
 543 002f C4000000 		.4byte	.LASF1
 544 0033 02       		.uleb128 0x2
 545 0034 02       		.byte	0x2
 546 0035 05       		.byte	0x5
 547 0036 3D020000 		.4byte	.LASF2
 548 003a 02       		.uleb128 0x2
 549 003b 02       		.byte	0x2
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 42


 550 003c 07       		.byte	0x7
 551 003d 35000000 		.4byte	.LASF3
 552 0041 02       		.uleb128 0x2
 553 0042 04       		.byte	0x4
 554 0043 05       		.byte	0x5
 555 0044 6D020000 		.4byte	.LASF4
 556 0048 02       		.uleb128 0x2
 557 0049 04       		.byte	0x4
 558 004a 07       		.byte	0x7
 559 004b 90000000 		.4byte	.LASF5
 560 004f 02       		.uleb128 0x2
 561 0050 08       		.byte	0x8
 562 0051 05       		.byte	0x5
 563 0052 78010000 		.4byte	.LASF6
 564 0056 02       		.uleb128 0x2
 565 0057 08       		.byte	0x8
 566 0058 07       		.byte	0x7
 567 0059 31010000 		.4byte	.LASF7
 568 005d 03       		.uleb128 0x3
 569 005e 04       		.byte	0x4
 570 005f 05       		.byte	0x5
 571 0060 696E7400 		.ascii	"int\000"
 572 0064 02       		.uleb128 0x2
 573 0065 04       		.byte	0x4
 574 0066 07       		.byte	0x7
 575 0067 24010000 		.4byte	.LASF8
 576 006b 04       		.uleb128 0x4
 577 006c 5D020000 		.4byte	.LASF9
 578 0070 02       		.byte	0x2
 579 0071 3801     		.2byte	0x138
 580 0073 2C000000 		.4byte	0x2c
 581 0077 04       		.uleb128 0x4
 582 0078 12010000 		.4byte	.LASF10
 583 007c 02       		.byte	0x2
 584 007d 3901     		.2byte	0x139
 585 007f 3A000000 		.4byte	0x3a
 586 0083 02       		.uleb128 0x2
 587 0084 04       		.byte	0x4
 588 0085 04       		.byte	0x4
 589 0086 2F000000 		.4byte	.LASF11
 590 008a 02       		.uleb128 0x2
 591 008b 08       		.byte	0x8
 592 008c 04       		.byte	0x4
 593 008d F9000000 		.4byte	.LASF12
 594 0091 02       		.uleb128 0x2
 595 0092 01       		.byte	0x1
 596 0093 08       		.byte	0x8
 597 0094 2D020000 		.4byte	.LASF13
 598 0098 04       		.uleb128 0x4
 599 0099 8B000000 		.4byte	.LASF14
 600 009d 02       		.byte	0x2
 601 009e E201     		.2byte	0x1e2
 602 00a0 A4000000 		.4byte	0xa4
 603 00a4 05       		.uleb128 0x5
 604 00a5 6B000000 		.4byte	0x6b
 605 00a9 02       		.uleb128 0x2
 606 00aa 04       		.byte	0x4
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 43


 607 00ab 07       		.byte	0x7
 608 00ac 68010000 		.4byte	.LASF15
 609 00b0 06       		.uleb128 0x6
 610 00b1 0C       		.byte	0xc
 611 00b2 03       		.byte	0x3
 612 00b3 8E       		.byte	0x8e
 613 00b4 25010000 		.4byte	0x125
 614 00b8 07       		.uleb128 0x7
 615 00b9 00010000 		.4byte	.LASF16
 616 00bd 03       		.byte	0x3
 617 00be 90       		.byte	0x90
 618 00bf 6B000000 		.4byte	0x6b
 619 00c3 00       		.byte	0
 620 00c4 07       		.uleb128 0x7
 621 00c5 19010000 		.4byte	.LASF17
 622 00c9 03       		.byte	0x3
 623 00ca 91       		.byte	0x91
 624 00cb 6B000000 		.4byte	0x6b
 625 00cf 01       		.byte	0x1
 626 00d0 07       		.uleb128 0x7
 627 00d1 48010000 		.4byte	.LASF18
 628 00d5 03       		.byte	0x3
 629 00d6 92       		.byte	0x92
 630 00d7 6B000000 		.4byte	0x6b
 631 00db 02       		.byte	0x2
 632 00dc 07       		.uleb128 0x7
 633 00dd 77000000 		.4byte	.LASF19
 634 00e1 03       		.byte	0x3
 635 00e2 93       		.byte	0x93
 636 00e3 6B000000 		.4byte	0x6b
 637 00e7 03       		.byte	0x3
 638 00e8 07       		.uleb128 0x7
 639 00e9 A2000000 		.4byte	.LASF20
 640 00ed 03       		.byte	0x3
 641 00ee 94       		.byte	0x94
 642 00ef 6B000000 		.4byte	0x6b
 643 00f3 04       		.byte	0x4
 644 00f4 07       		.uleb128 0x7
 645 00f5 71010000 		.4byte	.LASF21
 646 00f9 03       		.byte	0x3
 647 00fa 95       		.byte	0x95
 648 00fb 6B000000 		.4byte	0x6b
 649 00ff 05       		.byte	0x5
 650 0100 07       		.uleb128 0x7
 651 0101 07010000 		.4byte	.LASF22
 652 0105 03       		.byte	0x3
 653 0106 96       		.byte	0x96
 654 0107 77000000 		.4byte	0x77
 655 010b 06       		.byte	0x6
 656 010c 07       		.uleb128 0x7
 657 010d 32020000 		.4byte	.LASF23
 658 0111 03       		.byte	0x3
 659 0112 97       		.byte	0x97
 660 0113 77000000 		.4byte	0x77
 661 0117 08       		.byte	0x8
 662 0118 07       		.uleb128 0x7
 663 0119 63020000 		.4byte	.LASF24
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 44


 664 011d 03       		.byte	0x3
 665 011e 98       		.byte	0x98
 666 011f 6B000000 		.4byte	0x6b
 667 0123 0A       		.byte	0xa
 668 0124 00       		.byte	0
 669 0125 08       		.uleb128 0x8
 670 0126 76020000 		.4byte	.LASF25
 671 012a 03       		.byte	0x3
 672 012b 99       		.byte	0x99
 673 012c B0000000 		.4byte	0xb0
 674 0130 06       		.uleb128 0x6
 675 0131 10       		.byte	0x10
 676 0132 03       		.byte	0x3
 677 0133 D5       		.byte	0xd5
 678 0134 69010000 		.4byte	0x169
 679 0138 07       		.uleb128 0x7
 680 0139 69000000 		.4byte	.LASF26
 681 013d 03       		.byte	0x3
 682 013e D7       		.byte	0xd7
 683 013f 6B000000 		.4byte	0x6b
 684 0143 00       		.byte	0
 685 0144 07       		.uleb128 0x7
 686 0145 70000000 		.4byte	.LASF27
 687 0149 03       		.byte	0x3
 688 014a D8       		.byte	0xd8
 689 014b 6B000000 		.4byte	0x6b
 690 014f 01       		.byte	0x1
 691 0150 07       		.uleb128 0x7
 692 0151 29000000 		.4byte	.LASF28
 693 0155 03       		.byte	0x3
 694 0156 D9       		.byte	0xd9
 695 0157 6B000000 		.4byte	0x6b
 696 015b 02       		.byte	0x2
 697 015c 09       		.uleb128 0x9
 698 015d 67617000 		.ascii	"gap\000"
 699 0161 03       		.byte	0x3
 700 0162 DA       		.byte	0xda
 701 0163 69010000 		.4byte	0x169
 702 0167 03       		.byte	0x3
 703 0168 00       		.byte	0
 704 0169 0A       		.uleb128 0xa
 705 016a 6B000000 		.4byte	0x6b
 706 016e 79010000 		.4byte	0x179
 707 0172 0B       		.uleb128 0xb
 708 0173 A9000000 		.4byte	0xa9
 709 0177 0C       		.byte	0xc
 710 0178 00       		.byte	0
 711 0179 08       		.uleb128 0x8
 712 017a 52010000 		.4byte	.LASF29
 713 017e 03       		.byte	0x3
 714 017f DB       		.byte	0xdb
 715 0180 30010000 		.4byte	0x130
 716 0184 0C       		.uleb128 0xc
 717 0185 90       		.byte	0x90
 718 0186 03       		.byte	0x3
 719 0187 0F01     		.2byte	0x10f
 720 0189 9B010000 		.4byte	0x19b
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 45


 721 018d 0D       		.uleb128 0xd
 722 018e A7000000 		.4byte	.LASF30
 723 0192 03       		.byte	0x3
 724 0193 1101     		.2byte	0x111
 725 0195 9B010000 		.4byte	0x19b
 726 0199 00       		.byte	0
 727 019a 00       		.byte	0
 728 019b 0A       		.uleb128 0xa
 729 019c 79010000 		.4byte	0x179
 730 01a0 AB010000 		.4byte	0x1ab
 731 01a4 0B       		.uleb128 0xb
 732 01a5 A9000000 		.4byte	0xa9
 733 01a9 08       		.byte	0x8
 734 01aa 00       		.byte	0
 735 01ab 04       		.uleb128 0x4
 736 01ac AD000000 		.4byte	.LASF31
 737 01b0 03       		.byte	0x3
 738 01b1 1201     		.2byte	0x112
 739 01b3 84010000 		.4byte	0x184
 740 01b7 0E       		.uleb128 0xe
 741 01b8 FE020000 		.4byte	.LASF32
 742 01bc 01       		.byte	0x1
 743 01bd 25       		.byte	0x25
 744 01be 00000000 		.4byte	.LFB0
 745 01c2 34000000 		.4byte	.LFE0-.LFB0
 746 01c6 01       		.uleb128 0x1
 747 01c7 9C       		.byte	0x9c
 748 01c8 0E       		.uleb128 0xe
 749 01c9 48000000 		.4byte	.LASF33
 750 01cd 01       		.byte	0x1
 751 01ce 78       		.byte	0x78
 752 01cf 00000000 		.4byte	.LFB1
 753 01d3 38000000 		.4byte	.LFE1-.LFB1
 754 01d7 01       		.uleb128 0x1
 755 01d8 9C       		.byte	0x9c
 756 01d9 0E       		.uleb128 0xe
 757 01da 00000000 		.4byte	.LASF34
 758 01de 01       		.byte	0x1
 759 01df C9       		.byte	0xc9
 760 01e0 00000000 		.4byte	.LFB2
 761 01e4 40000000 		.4byte	.LFE2-.LFB2
 762 01e8 01       		.uleb128 0x1
 763 01e9 9C       		.byte	0x9c
 764 01ea 0F       		.uleb128 0xf
 765 01eb 59000000 		.4byte	.LASF35
 766 01ef 01       		.byte	0x1
 767 01f0 B502     		.2byte	0x2b5
 768 01f2 00000000 		.4byte	.LFB3
 769 01f6 02000000 		.4byte	.LFE3-.LFB3
 770 01fa 01       		.uleb128 0x1
 771 01fb 9C       		.byte	0x9c
 772 01fc 10       		.uleb128 0x10
 773 01fd 47020000 		.4byte	.LASF39
 774 0201 01       		.byte	0x1
 775 0202 D202     		.2byte	0x2d2
 776 0204 00000000 		.4byte	.LFB4
 777 0208 04000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 46


 778 020c 01       		.uleb128 0x1
 779 020d 9C       		.byte	0x9c
 780 020e 1C020000 		.4byte	0x21c
 781 0212 11       		.uleb128 0x11
 782 0213 04000000 		.4byte	.LVL0
 783 0217 3C020000 		.4byte	0x23c
 784 021b 00       		.byte	0
 785 021c 0A       		.uleb128 0xa
 786 021d 25010000 		.4byte	0x125
 787 0221 2C020000 		.4byte	0x22c
 788 0225 0B       		.uleb128 0xb
 789 0226 A9000000 		.4byte	0xa9
 790 022a 08       		.byte	0x8
 791 022b 00       		.byte	0
 792 022c 12       		.uleb128 0x12
 793 022d 80000000 		.4byte	.LASF40
 794 0231 04       		.byte	0x4
 795 0232 79       		.byte	0x79
 796 0233 37020000 		.4byte	0x237
 797 0237 05       		.uleb128 0x5
 798 0238 1C020000 		.4byte	0x21c
 799 023c 13       		.uleb128 0x13
 800 023d 11000000 		.4byte	.LASF41
 801 0241 04       		.byte	0x4
 802 0242 A4       		.byte	0xa4
 803 0243 00       		.byte	0
 804              		.section	.debug_abbrev,"",%progbits
 805              	.Ldebug_abbrev0:
 806 0000 01       		.uleb128 0x1
 807 0001 11       		.uleb128 0x11
 808 0002 01       		.byte	0x1
 809 0003 25       		.uleb128 0x25
 810 0004 0E       		.uleb128 0xe
 811 0005 13       		.uleb128 0x13
 812 0006 0B       		.uleb128 0xb
 813 0007 03       		.uleb128 0x3
 814 0008 0E       		.uleb128 0xe
 815 0009 1B       		.uleb128 0x1b
 816 000a 0E       		.uleb128 0xe
 817 000b 55       		.uleb128 0x55
 818 000c 17       		.uleb128 0x17
 819 000d 11       		.uleb128 0x11
 820 000e 01       		.uleb128 0x1
 821 000f 10       		.uleb128 0x10
 822 0010 17       		.uleb128 0x17
 823 0011 00       		.byte	0
 824 0012 00       		.byte	0
 825 0013 02       		.uleb128 0x2
 826 0014 24       		.uleb128 0x24
 827 0015 00       		.byte	0
 828 0016 0B       		.uleb128 0xb
 829 0017 0B       		.uleb128 0xb
 830 0018 3E       		.uleb128 0x3e
 831 0019 0B       		.uleb128 0xb
 832 001a 03       		.uleb128 0x3
 833 001b 0E       		.uleb128 0xe
 834 001c 00       		.byte	0
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 47


 835 001d 00       		.byte	0
 836 001e 03       		.uleb128 0x3
 837 001f 24       		.uleb128 0x24
 838 0020 00       		.byte	0
 839 0021 0B       		.uleb128 0xb
 840 0022 0B       		.uleb128 0xb
 841 0023 3E       		.uleb128 0x3e
 842 0024 0B       		.uleb128 0xb
 843 0025 03       		.uleb128 0x3
 844 0026 08       		.uleb128 0x8
 845 0027 00       		.byte	0
 846 0028 00       		.byte	0
 847 0029 04       		.uleb128 0x4
 848 002a 16       		.uleb128 0x16
 849 002b 00       		.byte	0
 850 002c 03       		.uleb128 0x3
 851 002d 0E       		.uleb128 0xe
 852 002e 3A       		.uleb128 0x3a
 853 002f 0B       		.uleb128 0xb
 854 0030 3B       		.uleb128 0x3b
 855 0031 05       		.uleb128 0x5
 856 0032 49       		.uleb128 0x49
 857 0033 13       		.uleb128 0x13
 858 0034 00       		.byte	0
 859 0035 00       		.byte	0
 860 0036 05       		.uleb128 0x5
 861 0037 35       		.uleb128 0x35
 862 0038 00       		.byte	0
 863 0039 49       		.uleb128 0x49
 864 003a 13       		.uleb128 0x13
 865 003b 00       		.byte	0
 866 003c 00       		.byte	0
 867 003d 06       		.uleb128 0x6
 868 003e 13       		.uleb128 0x13
 869 003f 01       		.byte	0x1
 870 0040 0B       		.uleb128 0xb
 871 0041 0B       		.uleb128 0xb
 872 0042 3A       		.uleb128 0x3a
 873 0043 0B       		.uleb128 0xb
 874 0044 3B       		.uleb128 0x3b
 875 0045 0B       		.uleb128 0xb
 876 0046 01       		.uleb128 0x1
 877 0047 13       		.uleb128 0x13
 878 0048 00       		.byte	0
 879 0049 00       		.byte	0
 880 004a 07       		.uleb128 0x7
 881 004b 0D       		.uleb128 0xd
 882 004c 00       		.byte	0
 883 004d 03       		.uleb128 0x3
 884 004e 0E       		.uleb128 0xe
 885 004f 3A       		.uleb128 0x3a
 886 0050 0B       		.uleb128 0xb
 887 0051 3B       		.uleb128 0x3b
 888 0052 0B       		.uleb128 0xb
 889 0053 49       		.uleb128 0x49
 890 0054 13       		.uleb128 0x13
 891 0055 38       		.uleb128 0x38
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 48


 892 0056 0B       		.uleb128 0xb
 893 0057 00       		.byte	0
 894 0058 00       		.byte	0
 895 0059 08       		.uleb128 0x8
 896 005a 16       		.uleb128 0x16
 897 005b 00       		.byte	0
 898 005c 03       		.uleb128 0x3
 899 005d 0E       		.uleb128 0xe
 900 005e 3A       		.uleb128 0x3a
 901 005f 0B       		.uleb128 0xb
 902 0060 3B       		.uleb128 0x3b
 903 0061 0B       		.uleb128 0xb
 904 0062 49       		.uleb128 0x49
 905 0063 13       		.uleb128 0x13
 906 0064 00       		.byte	0
 907 0065 00       		.byte	0
 908 0066 09       		.uleb128 0x9
 909 0067 0D       		.uleb128 0xd
 910 0068 00       		.byte	0
 911 0069 03       		.uleb128 0x3
 912 006a 08       		.uleb128 0x8
 913 006b 3A       		.uleb128 0x3a
 914 006c 0B       		.uleb128 0xb
 915 006d 3B       		.uleb128 0x3b
 916 006e 0B       		.uleb128 0xb
 917 006f 49       		.uleb128 0x49
 918 0070 13       		.uleb128 0x13
 919 0071 38       		.uleb128 0x38
 920 0072 0B       		.uleb128 0xb
 921 0073 00       		.byte	0
 922 0074 00       		.byte	0
 923 0075 0A       		.uleb128 0xa
 924 0076 01       		.uleb128 0x1
 925 0077 01       		.byte	0x1
 926 0078 49       		.uleb128 0x49
 927 0079 13       		.uleb128 0x13
 928 007a 01       		.uleb128 0x1
 929 007b 13       		.uleb128 0x13
 930 007c 00       		.byte	0
 931 007d 00       		.byte	0
 932 007e 0B       		.uleb128 0xb
 933 007f 21       		.uleb128 0x21
 934 0080 00       		.byte	0
 935 0081 49       		.uleb128 0x49
 936 0082 13       		.uleb128 0x13
 937 0083 2F       		.uleb128 0x2f
 938 0084 0B       		.uleb128 0xb
 939 0085 00       		.byte	0
 940 0086 00       		.byte	0
 941 0087 0C       		.uleb128 0xc
 942 0088 13       		.uleb128 0x13
 943 0089 01       		.byte	0x1
 944 008a 0B       		.uleb128 0xb
 945 008b 0B       		.uleb128 0xb
 946 008c 3A       		.uleb128 0x3a
 947 008d 0B       		.uleb128 0xb
 948 008e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 49


 949 008f 05       		.uleb128 0x5
 950 0090 01       		.uleb128 0x1
 951 0091 13       		.uleb128 0x13
 952 0092 00       		.byte	0
 953 0093 00       		.byte	0
 954 0094 0D       		.uleb128 0xd
 955 0095 0D       		.uleb128 0xd
 956 0096 00       		.byte	0
 957 0097 03       		.uleb128 0x3
 958 0098 0E       		.uleb128 0xe
 959 0099 3A       		.uleb128 0x3a
 960 009a 0B       		.uleb128 0xb
 961 009b 3B       		.uleb128 0x3b
 962 009c 05       		.uleb128 0x5
 963 009d 49       		.uleb128 0x49
 964 009e 13       		.uleb128 0x13
 965 009f 38       		.uleb128 0x38
 966 00a0 0B       		.uleb128 0xb
 967 00a1 00       		.byte	0
 968 00a2 00       		.byte	0
 969 00a3 0E       		.uleb128 0xe
 970 00a4 2E       		.uleb128 0x2e
 971 00a5 00       		.byte	0
 972 00a6 3F       		.uleb128 0x3f
 973 00a7 19       		.uleb128 0x19
 974 00a8 03       		.uleb128 0x3
 975 00a9 0E       		.uleb128 0xe
 976 00aa 3A       		.uleb128 0x3a
 977 00ab 0B       		.uleb128 0xb
 978 00ac 3B       		.uleb128 0x3b
 979 00ad 0B       		.uleb128 0xb
 980 00ae 27       		.uleb128 0x27
 981 00af 19       		.uleb128 0x19
 982 00b0 11       		.uleb128 0x11
 983 00b1 01       		.uleb128 0x1
 984 00b2 12       		.uleb128 0x12
 985 00b3 06       		.uleb128 0x6
 986 00b4 40       		.uleb128 0x40
 987 00b5 18       		.uleb128 0x18
 988 00b6 9742     		.uleb128 0x2117
 989 00b8 19       		.uleb128 0x19
 990 00b9 00       		.byte	0
 991 00ba 00       		.byte	0
 992 00bb 0F       		.uleb128 0xf
 993 00bc 2E       		.uleb128 0x2e
 994 00bd 00       		.byte	0
 995 00be 3F       		.uleb128 0x3f
 996 00bf 19       		.uleb128 0x19
 997 00c0 03       		.uleb128 0x3
 998 00c1 0E       		.uleb128 0xe
 999 00c2 3A       		.uleb128 0x3a
 1000 00c3 0B       		.uleb128 0xb
 1001 00c4 3B       		.uleb128 0x3b
 1002 00c5 05       		.uleb128 0x5
 1003 00c6 27       		.uleb128 0x27
 1004 00c7 19       		.uleb128 0x19
 1005 00c8 11       		.uleb128 0x11
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 50


 1006 00c9 01       		.uleb128 0x1
 1007 00ca 12       		.uleb128 0x12
 1008 00cb 06       		.uleb128 0x6
 1009 00cc 40       		.uleb128 0x40
 1010 00cd 18       		.uleb128 0x18
 1011 00ce 9742     		.uleb128 0x2117
 1012 00d0 19       		.uleb128 0x19
 1013 00d1 00       		.byte	0
 1014 00d2 00       		.byte	0
 1015 00d3 10       		.uleb128 0x10
 1016 00d4 2E       		.uleb128 0x2e
 1017 00d5 01       		.byte	0x1
 1018 00d6 3F       		.uleb128 0x3f
 1019 00d7 19       		.uleb128 0x19
 1020 00d8 03       		.uleb128 0x3
 1021 00d9 0E       		.uleb128 0xe
 1022 00da 3A       		.uleb128 0x3a
 1023 00db 0B       		.uleb128 0xb
 1024 00dc 3B       		.uleb128 0x3b
 1025 00dd 05       		.uleb128 0x5
 1026 00de 27       		.uleb128 0x27
 1027 00df 19       		.uleb128 0x19
 1028 00e0 11       		.uleb128 0x11
 1029 00e1 01       		.uleb128 0x1
 1030 00e2 12       		.uleb128 0x12
 1031 00e3 06       		.uleb128 0x6
 1032 00e4 40       		.uleb128 0x40
 1033 00e5 18       		.uleb128 0x18
 1034 00e6 9742     		.uleb128 0x2117
 1035 00e8 19       		.uleb128 0x19
 1036 00e9 01       		.uleb128 0x1
 1037 00ea 13       		.uleb128 0x13
 1038 00eb 00       		.byte	0
 1039 00ec 00       		.byte	0
 1040 00ed 11       		.uleb128 0x11
 1041 00ee 898201   		.uleb128 0x4109
 1042 00f1 00       		.byte	0
 1043 00f2 11       		.uleb128 0x11
 1044 00f3 01       		.uleb128 0x1
 1045 00f4 9542     		.uleb128 0x2115
 1046 00f6 19       		.uleb128 0x19
 1047 00f7 31       		.uleb128 0x31
 1048 00f8 13       		.uleb128 0x13
 1049 00f9 00       		.byte	0
 1050 00fa 00       		.byte	0
 1051 00fb 12       		.uleb128 0x12
 1052 00fc 34       		.uleb128 0x34
 1053 00fd 00       		.byte	0
 1054 00fe 03       		.uleb128 0x3
 1055 00ff 0E       		.uleb128 0xe
 1056 0100 3A       		.uleb128 0x3a
 1057 0101 0B       		.uleb128 0xb
 1058 0102 3B       		.uleb128 0x3b
 1059 0103 0B       		.uleb128 0xb
 1060 0104 49       		.uleb128 0x49
 1061 0105 13       		.uleb128 0x13
 1062 0106 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 51


 1063 0107 19       		.uleb128 0x19
 1064 0108 3C       		.uleb128 0x3c
 1065 0109 19       		.uleb128 0x19
 1066 010a 00       		.byte	0
 1067 010b 00       		.byte	0
 1068 010c 13       		.uleb128 0x13
 1069 010d 2E       		.uleb128 0x2e
 1070 010e 00       		.byte	0
 1071 010f 3F       		.uleb128 0x3f
 1072 0110 19       		.uleb128 0x19
 1073 0111 03       		.uleb128 0x3
 1074 0112 0E       		.uleb128 0xe
 1075 0113 3A       		.uleb128 0x3a
 1076 0114 0B       		.uleb128 0xb
 1077 0115 3B       		.uleb128 0x3b
 1078 0116 0B       		.uleb128 0xb
 1079 0117 27       		.uleb128 0x27
 1080 0118 19       		.uleb128 0x19
 1081 0119 3C       		.uleb128 0x3c
 1082 011a 19       		.uleb128 0x19
 1083 011b 00       		.byte	0
 1084 011c 00       		.byte	0
 1085 011d 00       		.byte	0
 1086              		.section	.debug_aranges,"",%progbits
 1087 0000 3C000000 		.4byte	0x3c
 1088 0004 0200     		.2byte	0x2
 1089 0006 00000000 		.4byte	.Ldebug_info0
 1090 000a 04       		.byte	0x4
 1091 000b 00       		.byte	0
 1092 000c 0000     		.2byte	0
 1093 000e 0000     		.2byte	0
 1094 0010 00000000 		.4byte	.LFB0
 1095 0014 34000000 		.4byte	.LFE0-.LFB0
 1096 0018 00000000 		.4byte	.LFB1
 1097 001c 38000000 		.4byte	.LFE1-.LFB1
 1098 0020 00000000 		.4byte	.LFB2
 1099 0024 40000000 		.4byte	.LFE2-.LFB2
 1100 0028 00000000 		.4byte	.LFB3
 1101 002c 02000000 		.4byte	.LFE3-.LFB3
 1102 0030 00000000 		.4byte	.LFB4
 1103 0034 04000000 		.4byte	.LFE4-.LFB4
 1104 0038 00000000 		.4byte	0
 1105 003c 00000000 		.4byte	0
 1106              		.section	.debug_ranges,"",%progbits
 1107              	.Ldebug_ranges0:
 1108 0000 00000000 		.4byte	.LFB0
 1109 0004 34000000 		.4byte	.LFE0
 1110 0008 00000000 		.4byte	.LFB1
 1111 000c 38000000 		.4byte	.LFE1
 1112 0010 00000000 		.4byte	.LFB2
 1113 0014 40000000 		.4byte	.LFE2
 1114 0018 00000000 		.4byte	.LFB3
 1115 001c 02000000 		.4byte	.LFE3
 1116 0020 00000000 		.4byte	.LFB4
 1117 0024 04000000 		.4byte	.LFE4
 1118 0028 00000000 		.4byte	0
 1119 002c 00000000 		.4byte	0
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 52


 1120              		.section	.debug_line,"",%progbits
 1121              	.Ldebug_line0:
 1122 0000 05010000 		.section	.debug_str,"MS",%progbits,1
 1122      02006800 
 1122      00000201 
 1122      FB0E0D00 
 1122      01010101 
 1123              	.LASF34:
 1124 0000 55534255 		.ascii	"USBUART_EP_3_ISR\000"
 1124      4152545F 
 1124      45505F33 
 1124      5F495352 
 1124      00
 1125              	.LASF41:
 1126 0011 55534255 		.ascii	"USBUART_ReInitComponent\000"
 1126      4152545F 
 1126      5265496E 
 1126      6974436F 
 1126      6D706F6E 
 1127              	.LASF28:
 1128 0029 65704372 		.ascii	"epCr0\000"
 1128      3000
 1129              	.LASF11:
 1130 002f 666C6F61 		.ascii	"float\000"
 1130      7400
 1131              	.LASF3:
 1132 0035 73686F72 		.ascii	"short unsigned int\000"
 1132      7420756E 
 1132      7369676E 
 1132      65642069 
 1132      6E7400
 1133              	.LASF33:
 1134 0048 55534255 		.ascii	"USBUART_EP_2_ISR\000"
 1134      4152545F 
 1134      45505F32 
 1134      5F495352 
 1134      00
 1135              	.LASF35:
 1136 0059 55534255 		.ascii	"USBUART_SOF_ISR\000"
 1136      4152545F 
 1136      534F465F 
 1136      49535200 
 1137              	.LASF26:
 1138 0069 6570436E 		.ascii	"epCnt0\000"
 1138      743000
 1139              	.LASF27:
 1140 0070 6570436E 		.ascii	"epCnt1\000"
 1140      743100
 1141              	.LASF19:
 1142 0077 6570546F 		.ascii	"epToggle\000"
 1142      67676C65 
 1142      00
 1143              	.LASF40:
 1144 0080 55534255 		.ascii	"USBUART_EP\000"
 1144      4152545F 
 1144      455000
 1145              	.LASF14:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 53


 1146 008b 72656738 		.ascii	"reg8\000"
 1146      00
 1147              	.LASF5:
 1148 0090 6C6F6E67 		.ascii	"long unsigned int\000"
 1148      20756E73 
 1148      69676E65 
 1148      6420696E 
 1148      7400
 1149              	.LASF20:
 1150 00a2 61646472 		.ascii	"addr\000"
 1150      00
 1151              	.LASF30:
 1152 00a7 73696545 		.ascii	"sieEp\000"
 1152      7000
 1153              	.LASF31:
 1154 00ad 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 1154      4152545F 
 1154      7369655F 
 1154      6570735F 
 1154      73747275 
 1155              	.LASF1:
 1156 00c4 756E7369 		.ascii	"unsigned char\000"
 1156      676E6564 
 1156      20636861 
 1156      7200
 1157              	.LASF37:
 1158 00d2 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART_episr.c\000"
 1158      72617465 
 1158      645F536F 
 1158      75726365 
 1158      5C50536F 
 1159              	.LASF12:
 1160 00f9 646F7562 		.ascii	"double\000"
 1160      6C6500
 1161              	.LASF16:
 1162 0100 61747472 		.ascii	"attrib\000"
 1162      696200
 1163              	.LASF22:
 1164 0107 62756666 		.ascii	"buffOffset\000"
 1164      4F666673 
 1164      657400
 1165              	.LASF10:
 1166 0112 75696E74 		.ascii	"uint16\000"
 1166      313600
 1167              	.LASF17:
 1168 0119 61706945 		.ascii	"apiEpState\000"
 1168      70537461 
 1168      746500
 1169              	.LASF8:
 1170 0124 756E7369 		.ascii	"unsigned int\000"
 1170      676E6564 
 1170      20696E74 
 1170      00
 1171              	.LASF7:
 1172 0131 6C6F6E67 		.ascii	"long long unsigned int\000"
 1172      206C6F6E 
 1172      6720756E 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 54


 1172      7369676E 
 1172      65642069 
 1173              	.LASF18:
 1174 0148 68774570 		.ascii	"hwEpState\000"
 1174      53746174 
 1174      6500
 1175              	.LASF29:
 1176 0152 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 1176      4152545F 
 1176      7369655F 
 1176      65705F73 
 1176      74727563 
 1177              	.LASF15:
 1178 0168 73697A65 		.ascii	"sizetype\000"
 1178      74797065 
 1178      00
 1179              	.LASF21:
 1180 0171 65704D6F 		.ascii	"epMode\000"
 1180      646500
 1181              	.LASF6:
 1182 0178 6C6F6E67 		.ascii	"long long int\000"
 1182      206C6F6E 
 1182      6720696E 
 1182      7400
 1183              	.LASF36:
 1184 0186 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1184      4320342E 
 1184      392E3320 
 1184      32303135 
 1184      30333033 
 1185 01b9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1185      20726576 
 1185      6973696F 
 1185      6E203232 
 1185      31323230 
 1186 01ec 33202D66 		.ascii	"3 -ffunction-sections -finline-functions -flto -ffa"
 1186      66756E63 
 1186      74696F6E 
 1186      2D736563 
 1186      74696F6E 
 1187 021f 742D6C74 		.ascii	"t-lto-objects\000"
 1187      6F2D6F62 
 1187      6A656374 
 1187      7300
 1188              	.LASF13:
 1189 022d 63686172 		.ascii	"char\000"
 1189      00
 1190              	.LASF23:
 1191 0232 62756666 		.ascii	"bufferSize\000"
 1191      65725369 
 1191      7A6500
 1192              	.LASF2:
 1193 023d 73686F72 		.ascii	"short int\000"
 1193      7420696E 
 1193      7400
 1194              	.LASF39:
 1195 0247 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccKxWlbg.s 			page 55


 1195      4152545F 
 1195      4255535F 
 1195      52455345 
 1195      545F4953 
 1196              	.LASF9:
 1197 025d 75696E74 		.ascii	"uint8\000"
 1197      3800
 1198              	.LASF24:
 1199 0263 696E7465 		.ascii	"interface\000"
 1199      72666163 
 1199      6500
 1200              	.LASF4:
 1201 026d 6C6F6E67 		.ascii	"long int\000"
 1201      20696E74 
 1201      00
 1202              	.LASF25:
 1203 0276 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 1203      42554152 
 1203      545F4550 
 1203      5F43544C 
 1203      5F424C4F 
 1204              	.LASF38:
 1205 028d 433A5C55 		.ascii	"C:\\Users\\Bruger\\OneDrive\\Skrivebord\\CODE\\PSOC"
 1205      73657273 
 1205      5C427275 
 1205      6765725C 
 1205      4F6E6544 
 1206 02ba 355C4359 		.ascii	"5\\CY8CKIT-59-Arduino\\CY8CKIT59_Ardudino-Speeduino"
 1206      38434B49 
 1206      542D3539 
 1206      2D417264 
 1206      75696E6F 
 1207 02eb 2E637964 		.ascii	".cydsn\000"
 1207      736E00
 1208              	.LASF0:
 1209 02f2 7369676E 		.ascii	"signed char\000"
 1209      65642063 
 1209      68617200 
 1210              	.LASF32:
 1211 02fe 55534255 		.ascii	"USBUART_EP_1_ISR\000"
 1211      4152545F 
 1211      45505F31 
 1211      5F495352 
 1211      00
 1212              		.comm	__gnu_lto_v1,1,1
 1213              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
