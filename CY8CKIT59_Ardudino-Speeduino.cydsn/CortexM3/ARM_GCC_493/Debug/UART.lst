ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	UART_initVar
  19              		.bss
  20              		.type	UART_initVar, %object
  21              		.size	UART_initVar, 1
  22              	UART_initVar:
  23 0000 00       		.space	1
  24              		.comm	UART_txBuffer,64,4
  25              		.global	UART_txBufferRead
  26              		.type	UART_txBufferRead, %object
  27              		.size	UART_txBufferRead, 1
  28              	UART_txBufferRead:
  29 0001 00       		.space	1
  30              		.global	UART_txBufferWrite
  31              		.type	UART_txBufferWrite, %object
  32              		.size	UART_txBufferWrite, 1
  33              	UART_txBufferWrite:
  34 0002 00       		.space	1
  35              		.global	UART_errorStatus
  36              		.type	UART_errorStatus, %object
  37              		.size	UART_errorStatus, 1
  38              	UART_errorStatus:
  39 0003 00       		.space	1
  40              		.comm	UART_rxBuffer,64,4
  41              		.global	UART_rxBufferRead
  42              		.type	UART_rxBufferRead, %object
  43              		.size	UART_rxBufferRead, 1
  44              	UART_rxBufferRead:
  45 0004 00       		.space	1
  46              		.global	UART_rxBufferWrite
  47              		.type	UART_rxBufferWrite, %object
  48              		.size	UART_rxBufferWrite, 1
  49              	UART_rxBufferWrite:
  50 0005 00       		.space	1
  51              		.global	UART_rxBufferLoopDetect
  52              		.type	UART_rxBufferLoopDetect, %object
  53              		.size	UART_rxBufferLoopDetect, 1
  54              	UART_rxBufferLoopDetect:
  55 0006 00       		.space	1
  56              		.global	UART_rxBufferOverflow
  57              		.type	UART_rxBufferOverflow, %object
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 2


  58              		.size	UART_rxBufferOverflow, 1
  59              	UART_rxBufferOverflow:
  60 0007 00       		.space	1
  61              		.section	.text.UART_Start,"ax",%progbits
  62              		.align	2
  63              		.global	UART_Start
  64              		.thumb
  65              		.thumb_func
  66              		.type	UART_Start, %function
  67              	UART_Start:
  68              	.LFB0:
  69              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 3


  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  70              		.loc 1 77 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 00AF     		add	r7, sp, #0
  79              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80              		.loc 1 79 0
  81 0004 054B     		ldr	r3, .L3
  82 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  83 0008 002B     		cmp	r3, #0
  84 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  85              		.loc 1 81 0
  86 000c FFF7FEFF 		bl	UART_Init
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  87              		.loc 1 82 0
  88 0010 024B     		ldr	r3, .L3
  89 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 4


  90 0014 1A70     		strb	r2, [r3]
  91              	.L2:
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  92              		.loc 1 85 0
  93 0016 FFF7FEFF 		bl	UART_Enable
  86:Generated_Source\PSoC5/UART.c **** }
  94              		.loc 1 86 0
  95 001a 80BD     		pop	{r7, pc}
  96              	.L4:
  97              		.align	2
  98              	.L3:
  99 001c 00000000 		.word	UART_initVar
 100              		.cfi_endproc
 101              	.LFE0:
 102              		.size	UART_Start, .-UART_Start
 103              		.section	.text.UART_Init,"ax",%progbits
 104              		.align	2
 105              		.global	UART_Init
 106              		.thumb
 107              		.thumb_func
 108              		.type	UART_Init, %function
 109              	UART_Init:
 110              	.LFB1:
  87:Generated_Source\PSoC5/UART.c **** 
  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
 111              		.loc 1 107 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0000 80B5     		push	{r7, lr}
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 7, -8
 118              		.cfi_offset 14, -4
 119 0002 00AF     		add	r7, sp, #0
 120              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 5


 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 121              		.loc 1 112 0
 122 0004 0420     		movs	r0, #4
 123 0006 1149     		ldr	r1, .L6
 124 0008 FFF7FEFF 		bl	CyIntSetVector
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 125              		.loc 1 113 0
 126 000c 0420     		movs	r0, #4
 127 000e 0721     		movs	r1, #7
 128 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 129              		.loc 1 114 0
 130 0014 0E4B     		ldr	r3, .L6+4
 131 0016 0022     		movs	r2, #0
 132 0018 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
 133              		.loc 1 124 0
 134 001a 0E4B     		ldr	r3, .L6+8
 135 001c 7222     		movs	r2, #114
 136 001e 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
 137              		.loc 1 126 0
 138 0020 0D4B     		ldr	r3, .L6+12
 139 0022 2022     		movs	r2, #32
 140 0024 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 141              		.loc 1 132 0
 142 0026 0520     		movs	r0, #5
 143 0028 0C49     		ldr	r1, .L6+16
 144 002a FFF7FEFF 		bl	CyIntSetVector
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 145              		.loc 1 133 0
 146 002e 0520     		movs	r0, #5
 147 0030 0721     		movs	r1, #7
 148 0032 FFF7FEFF 		bl	CyIntSetPriority
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 6


 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
 149              		.loc 1 138 0
 150 0036 0A4B     		ldr	r3, .L6+20
 151 0038 0622     		movs	r2, #6
 152 003a 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 153              		.loc 1 139 0
 154 003c 094B     		ldr	r3, .L6+24
 155 003e 4722     		movs	r2, #71
 156 0040 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 157              		.loc 1 148 0
 158 0042 094B     		ldr	r3, .L6+28
 159 0044 0222     		movs	r2, #2
 160 0046 1A70     		strb	r2, [r3]
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161              		.loc 1 160 0
 162 0048 80BD     		pop	{r7, pc}
 163              	.L7:
 164 004a 00BF     		.align	2
 165              	.L6:
 166 004c 00000000 		.word	UART_RXISR
 167 0050 00000000 		.word	UART_errorStatus
 168 0054 84650040 		.word	1073767812
 169 0058 86640040 		.word	1073767558
 170 005c 00000000 		.word	UART_TXISR
 171 0060 24650040 		.word	1073767716
 172 0064 34650040 		.word	1073767732
 173 0068 8B640040 		.word	1073767563
 174              		.cfi_endproc
 175              	.LFE1:
 176              		.size	UART_Init, .-UART_Init
 177              		.section	.text.UART_Enable,"ax",%progbits
 178              		.align	2
 179              		.global	UART_Enable
 180              		.thumb
 181              		.thumb_func
 182              		.type	UART_Enable, %function
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 7


 183              	UART_Enable:
 184              	.LFB2:
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
 185              		.loc 1 184 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 8
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189 0000 80B5     		push	{r7, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 82B0     		sub	sp, sp, #8
 194              		.cfi_def_cfa_offset 16
 195 0004 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 197              		.loc 1 186 0
 198 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 199 000a 0346     		mov	r3, r0
 200 000c FB71     		strb	r3, [r7, #7]
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 201              		.loc 1 190 0
 202 000e 144A     		ldr	r2, .L9
 203 0010 134B     		ldr	r3, .L9
 204 0012 1B78     		ldrb	r3, [r3]
 205 0014 DBB2     		uxtb	r3, r3
 206 0016 43F02003 		orr	r3, r3, #32
 207 001a DBB2     		uxtb	r3, r3
 208 001c 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 8


 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 209              		.loc 1 193 0
 210 001e 114A     		ldr	r2, .L9+4
 211 0020 104B     		ldr	r3, .L9+4
 212 0022 1B78     		ldrb	r3, [r3]
 213 0024 DBB2     		uxtb	r3, r3
 214 0026 43F01003 		orr	r3, r3, #16
 215 002a DBB2     		uxtb	r3, r3
 216 002c 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 217              		.loc 1 196 0
 218 002e 0E4B     		ldr	r3, .L9+8
 219 0030 1022     		movs	r2, #16
 220 0032 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 221              		.loc 1 211 0
 222 0034 0D4A     		ldr	r2, .L9+12
 223 0036 0D4B     		ldr	r3, .L9+12
 224 0038 1B78     		ldrb	r3, [r3]
 225 003a DBB2     		uxtb	r3, r3
 226 003c 43F01003 		orr	r3, r3, #16
 227 0040 DBB2     		uxtb	r3, r3
 228 0042 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 229              		.loc 1 213 0
 230 0044 0A4B     		ldr	r3, .L9+16
 231 0046 2022     		movs	r2, #32
 232 0048 1A60     		str	r2, [r3]
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 233              		.loc 1 214 0
 234 004a 074B     		ldr	r3, .L9+8
 235 004c 2022     		movs	r2, #32
 236 004e 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 9


 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 237              		.loc 1 222 0
 238 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 239 0052 1846     		mov	r0, r3
 240 0054 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC5/UART.c **** }
 241              		.loc 1 223 0
 242 0058 0837     		adds	r7, r7, #8
 243              		.cfi_def_cfa_offset 8
 244 005a BD46     		mov	sp, r7
 245              		.cfi_def_cfa_register 13
 246              		@ sp needed
 247 005c 80BD     		pop	{r7, pc}
 248              	.L10:
 249 005e 00BF     		.align	2
 250              	.L9:
 251 0060 94650040 		.word	1073767828
 252 0064 96640040 		.word	1073767574
 253 0068 00E100E0 		.word	-536813312
 254 006c 9B640040 		.word	1073767579
 255 0070 80E200E0 		.word	-536812928
 256              		.cfi_endproc
 257              	.LFE2:
 258              		.size	UART_Enable, .-UART_Enable
 259              		.section	.text.UART_Stop,"ax",%progbits
 260              		.align	2
 261              		.global	UART_Stop
 262              		.thumb
 263              		.thumb_func
 264              		.type	UART_Stop, %function
 265              	UART_Stop:
 266              	.LFB3:
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
 267              		.loc 1 241 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 8
 270              		@ frame_needed = 1, uses_anonymous_args = 0
 271 0000 80B5     		push	{r7, lr}
 272              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 10


 273              		.cfi_offset 7, -8
 274              		.cfi_offset 14, -4
 275 0002 82B0     		sub	sp, sp, #8
 276              		.cfi_def_cfa_offset 16
 277 0004 00AF     		add	r7, sp, #0
 278              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 279              		.loc 1 243 0
 280 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 281 000a 0346     		mov	r3, r0
 282 000c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 283              		.loc 1 247 0
 284 000e 124A     		ldr	r2, .L12
 285 0010 114B     		ldr	r3, .L12
 286 0012 1B78     		ldrb	r3, [r3]
 287 0014 DBB2     		uxtb	r3, r3
 288 0016 23F02003 		bic	r3, r3, #32
 289 001a DBB2     		uxtb	r3, r3
 290 001c 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 291              		.loc 1 262 0
 292 001e 0F4A     		ldr	r2, .L12+4
 293 0020 0E4B     		ldr	r3, .L12+4
 294 0022 1B78     		ldrb	r3, [r3]
 295 0024 DBB2     		uxtb	r3, r3
 296 0026 23F01003 		bic	r3, r3, #16
 297 002a DBB2     		uxtb	r3, r3
 298 002c 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 299              		.loc 1 265 0
 300 002e 0C4B     		ldr	r3, .L12+8
 301 0030 1022     		movs	r2, #16
 302 0032 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 11


 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 303              		.loc 1 270 0
 304 0034 0B4A     		ldr	r2, .L12+12
 305 0036 0B4B     		ldr	r3, .L12+12
 306 0038 1B78     		ldrb	r3, [r3]
 307 003a DBB2     		uxtb	r3, r3
 308 003c 23F01003 		bic	r3, r3, #16
 309 0040 DBB2     		uxtb	r3, r3
 310 0042 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 311              		.loc 1 273 0
 312 0044 064B     		ldr	r3, .L12+8
 313 0046 2022     		movs	r2, #32
 314 0048 1A60     		str	r2, [r3]
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 315              		.loc 1 277 0
 316 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 317 004c 1846     		mov	r0, r3
 318 004e FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC5/UART.c **** }
 319              		.loc 1 278 0
 320 0052 0837     		adds	r7, r7, #8
 321              		.cfi_def_cfa_offset 8
 322 0054 BD46     		mov	sp, r7
 323              		.cfi_def_cfa_register 13
 324              		@ sp needed
 325 0056 80BD     		pop	{r7, pc}
 326              	.L13:
 327              		.align	2
 328              	.L12:
 329 0058 94650040 		.word	1073767828
 330 005c 96640040 		.word	1073767574
 331 0060 80E100E0 		.word	-536813184
 332 0064 9B640040 		.word	1073767579
 333              		.cfi_endproc
 334              	.LFE3:
 335              		.size	UART_Stop, .-UART_Stop
 336              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 337              		.align	2
 338              		.global	UART_ReadControlRegister
 339              		.thumb
 340              		.thumb_func
 341              		.type	UART_ReadControlRegister, %function
 342              	UART_ReadControlRegister:
 343              	.LFB4:
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 12


 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 344              		.loc 1 296 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0000 80B4     		push	{r7}
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 7, -4
 352 0002 00AF     		add	r7, sp, #0
 353              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 354              		.loc 1 298 0
 355 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 356              		.loc 1 302 0
 357 0006 1846     		mov	r0, r3
 358 0008 BD46     		mov	sp, r7
 359              		.cfi_def_cfa_register 13
 360              		@ sp needed
 361 000a 5DF8047B 		ldr	r7, [sp], #4
 362              		.cfi_restore 7
 363              		.cfi_def_cfa_offset 0
 364 000e 7047     		bx	lr
 365              		.cfi_endproc
 366              	.LFE4:
 367              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 368              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 369              		.align	2
 370              		.global	UART_WriteControlRegister
 371              		.thumb
 372              		.thumb_func
 373              		.type	UART_WriteControlRegister, %function
 374              	UART_WriteControlRegister:
 375              	.LFB5:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 13


 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 376              		.loc 1 320 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 8
 379              		@ frame_needed = 1, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 381 0000 80B4     		push	{r7}
 382              		.cfi_def_cfa_offset 4
 383              		.cfi_offset 7, -4
 384 0002 83B0     		sub	sp, sp, #12
 385              		.cfi_def_cfa_offset 16
 386 0004 00AF     		add	r7, sp, #0
 387              		.cfi_def_cfa_register 7
 388 0006 0346     		mov	r3, r0
 389 0008 FB71     		strb	r3, [r7, #7]
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 390              		.loc 1 329 0
 391 000a 0C37     		adds	r7, r7, #12
 392              		.cfi_def_cfa_offset 4
 393 000c BD46     		mov	sp, r7
 394              		.cfi_def_cfa_register 13
 395              		@ sp needed
 396 000e 5DF8047B 		ldr	r7, [sp], #4
 397              		.cfi_restore 7
 398              		.cfi_def_cfa_offset 0
 399 0012 7047     		bx	lr
 400              		.cfi_endproc
 401              	.LFE5:
 402              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 403              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 404              		.align	2
 405              		.global	UART_SetRxInterruptMode
 406              		.thumb
 407              		.thumb_func
 408              		.type	UART_SetRxInterruptMode, %function
 409              	UART_SetRxInterruptMode:
 410              	.LFB6:
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 14


 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 411              		.loc 1 360 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 8
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416 0000 80B4     		push	{r7}
 417              		.cfi_def_cfa_offset 4
 418              		.cfi_offset 7, -4
 419 0002 83B0     		sub	sp, sp, #12
 420              		.cfi_def_cfa_offset 16
 421 0004 00AF     		add	r7, sp, #0
 422              		.cfi_def_cfa_register 7
 423 0006 0346     		mov	r3, r0
 424 0008 FB71     		strb	r3, [r7, #7]
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 425              		.loc 1 361 0
 426 000a 044A     		ldr	r2, .L18
 427 000c FB79     		ldrb	r3, [r7, #7]
 428 000e 1370     		strb	r3, [r2]
 362:Generated_Source\PSoC5/UART.c ****     }
 429              		.loc 1 362 0
 430 0010 0C37     		adds	r7, r7, #12
 431              		.cfi_def_cfa_offset 4
 432 0012 BD46     		mov	sp, r7
 433              		.cfi_def_cfa_register 13
 434              		@ sp needed
 435 0014 5DF8047B 		ldr	r7, [sp], #4
 436              		.cfi_restore 7
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 15


 437              		.cfi_def_cfa_offset 0
 438 0018 7047     		bx	lr
 439              	.L19:
 440 001a 00BF     		.align	2
 441              	.L18:
 442 001c 86640040 		.word	1073767558
 443              		.cfi_endproc
 444              	.LFE6:
 445              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 446              		.section	.text.UART_ReadRxData,"ax",%progbits
 447              		.align	2
 448              		.global	UART_ReadRxData
 449              		.thumb
 450              		.thumb_func
 451              		.type	UART_ReadRxData, %function
 452              	UART_ReadRxData:
 453              	.LFB7:
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 454              		.loc 1 393 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 8
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459 0000 80B4     		push	{r7}
 460              		.cfi_def_cfa_offset 4
 461              		.cfi_offset 7, -4
 462 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 16


 463              		.cfi_def_cfa_offset 16
 464 0004 00AF     		add	r7, sp, #0
 465              		.cfi_def_cfa_register 7
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 466              		.loc 1 402 0
 467 0006 1C4B     		ldr	r3, .L27
 468 0008 1022     		movs	r2, #16
 469 000a 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 470              		.loc 1 404 0
 471 000c 1B4B     		ldr	r3, .L27+4
 472 000e 1B78     		ldrb	r3, [r3]
 473 0010 BB71     		strb	r3, [r7, #6]
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 474              		.loc 1 405 0
 475 0012 1B4B     		ldr	r3, .L27+8
 476 0014 1B78     		ldrb	r3, [r3]
 477 0016 7B71     		strb	r3, [r7, #5]
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 478              		.loc 1 407 0
 479 0018 1A4B     		ldr	r3, .L27+12
 480 001a 1B78     		ldrb	r3, [r3]
 481 001c DBB2     		uxtb	r3, r3
 482 001e 002B     		cmp	r3, #0
 483 0020 03D1     		bne	.L21
 484              		.loc 1 407 0 is_stmt 0 discriminator 1
 485 0022 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 486 0024 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 487 0026 9A42     		cmp	r2, r3
 488 0028 18D0     		beq	.L22
 489              	.L21:
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 490              		.loc 1 409 0 is_stmt 1
 491 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 492 002c 164A     		ldr	r2, .L27+16
 493 002e D35C     		ldrb	r3, [r2, r3]
 494 0030 FB71     		strb	r3, [r7, #7]
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 495              		.loc 1 410 0
 496 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 497 0034 0133     		adds	r3, r3, #1
 498 0036 BB71     		strb	r3, [r7, #6]
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 499              		.loc 1 412 0
 500 0038 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 17


 501 003a 3F2B     		cmp	r3, #63
 502 003c 01D9     		bls	.L23
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 503              		.loc 1 414 0
 504 003e 0023     		movs	r3, #0
 505 0040 BB71     		strb	r3, [r7, #6]
 506              	.L23:
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 507              		.loc 1 417 0
 508 0042 0E4A     		ldr	r2, .L27+4
 509 0044 BB79     		ldrb	r3, [r7, #6]
 510 0046 1370     		strb	r3, [r2]
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 511              		.loc 1 419 0
 512 0048 0E4B     		ldr	r3, .L27+12
 513 004a 1B78     		ldrb	r3, [r3]
 514 004c DBB2     		uxtb	r3, r3
 515 004e 002B     		cmp	r3, #0
 516 0050 03D0     		beq	.L24
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 517              		.loc 1 421 0
 518 0052 0C4B     		ldr	r3, .L27+12
 519 0054 0022     		movs	r2, #0
 520 0056 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC5/UART.c ****             {
 521              		.loc 1 419 0
 522 0058 03E0     		b	.L25
 523              	.L24:
 524 005a 02E0     		b	.L25
 525              	.L22:
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 526              		.loc 1 440 0
 527 005c 0B4B     		ldr	r3, .L27+20
 528 005e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 18


 529 0060 FB71     		strb	r3, [r7, #7]
 530              	.L25:
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 531              		.loc 1 443 0
 532 0062 0B4B     		ldr	r3, .L27+24
 533 0064 1022     		movs	r2, #16
 534 0066 1A60     		str	r2, [r3]
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 535              		.loc 1 452 0
 536 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:Generated_Source\PSoC5/UART.c ****     }
 537              		.loc 1 453 0
 538 006a 1846     		mov	r0, r3
 539 006c 0C37     		adds	r7, r7, #12
 540              		.cfi_def_cfa_offset 4
 541 006e BD46     		mov	sp, r7
 542              		.cfi_def_cfa_register 13
 543              		@ sp needed
 544 0070 5DF8047B 		ldr	r7, [sp], #4
 545              		.cfi_restore 7
 546              		.cfi_def_cfa_offset 0
 547 0074 7047     		bx	lr
 548              	.L28:
 549 0076 00BF     		.align	2
 550              	.L27:
 551 0078 80E100E0 		.word	-536813184
 552 007c 00000000 		.word	UART_rxBufferRead
 553 0080 00000000 		.word	UART_rxBufferWrite
 554 0084 00000000 		.word	UART_rxBufferLoopDetect
 555 0088 00000000 		.word	UART_rxBuffer
 556 008c 45650040 		.word	1073767749
 557 0090 00E100E0 		.word	-536813312
 558              		.cfi_endproc
 559              	.LFE7:
 560              		.size	UART_ReadRxData, .-UART_ReadRxData
 561              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 562              		.align	2
 563              		.global	UART_ReadRxStatus
 564              		.thumb
 565              		.thumb_func
 566              		.type	UART_ReadRxStatus, %function
 567              	UART_ReadRxStatus:
 568              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 19


 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 569              		.loc 1 486 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 8
 572              		@ frame_needed = 1, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 574 0000 80B4     		push	{r7}
 575              		.cfi_def_cfa_offset 4
 576              		.cfi_offset 7, -4
 577 0002 83B0     		sub	sp, sp, #12
 578              		.cfi_def_cfa_offset 16
 579 0004 00AF     		add	r7, sp, #0
 580              		.cfi_def_cfa_register 7
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 581              		.loc 1 489 0
 582 0006 0C4B     		ldr	r3, .L32
 583 0008 1B78     		ldrb	r3, [r3]
 584 000a DBB2     		uxtb	r3, r3
 585 000c 03F07F03 		and	r3, r3, #127
 586 0010 FB71     		strb	r3, [r7, #7]
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 587              		.loc 1 492 0
 588 0012 0A4B     		ldr	r3, .L32+4
 589 0014 1B78     		ldrb	r3, [r3]
 590 0016 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 20


 591 0018 002B     		cmp	r3, #0
 592 001a 06D0     		beq	.L30
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 593              		.loc 1 494 0
 594 001c FB79     		ldrb	r3, [r7, #7]
 595 001e 63F07F03 		orn	r3, r3, #127
 596 0022 FB71     		strb	r3, [r7, #7]
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 597              		.loc 1 495 0
 598 0024 054B     		ldr	r3, .L32+4
 599 0026 0022     		movs	r2, #0
 600 0028 1A70     		strb	r2, [r3]
 601              	.L30:
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 602              		.loc 1 499 0
 603 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:Generated_Source\PSoC5/UART.c ****     }
 604              		.loc 1 500 0
 605 002c 1846     		mov	r0, r3
 606 002e 0C37     		adds	r7, r7, #12
 607              		.cfi_def_cfa_offset 4
 608 0030 BD46     		mov	sp, r7
 609              		.cfi_def_cfa_register 13
 610              		@ sp needed
 611 0032 5DF8047B 		ldr	r7, [sp], #4
 612              		.cfi_restore 7
 613              		.cfi_def_cfa_offset 0
 614 0036 7047     		bx	lr
 615              	.L33:
 616              		.align	2
 617              	.L32:
 618 0038 66640040 		.word	1073767526
 619 003c 00000000 		.word	UART_rxBufferOverflow
 620              		.cfi_endproc
 621              	.LFE8:
 622              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 623              		.section	.text.UART_GetChar,"ax",%progbits
 624              		.align	2
 625              		.global	UART_GetChar
 626              		.thumb
 627              		.thumb_func
 628              		.type	UART_GetChar, %function
 629              	UART_GetChar:
 630              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 21


 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 631              		.loc 1 533 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 8
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635              		@ link register save eliminated.
 636 0000 80B4     		push	{r7}
 637              		.cfi_def_cfa_offset 4
 638              		.cfi_offset 7, -4
 639 0002 83B0     		sub	sp, sp, #12
 640              		.cfi_def_cfa_offset 16
 641 0004 00AF     		add	r7, sp, #0
 642              		.cfi_def_cfa_register 7
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 643              		.loc 1 534 0
 644 0006 0023     		movs	r3, #0
 645 0008 FB71     		strb	r3, [r7, #7]
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 646              		.loc 1 542 0
 647 000a 234B     		ldr	r3, .L41
 648 000c 1022     		movs	r2, #16
 649 000e 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 650              		.loc 1 544 0
 651 0010 224B     		ldr	r3, .L41+4
 652 0012 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 22


 653 0014 BB71     		strb	r3, [r7, #6]
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 654              		.loc 1 545 0
 655 0016 224B     		ldr	r3, .L41+8
 656 0018 1B78     		ldrb	r3, [r3]
 657 001a 7B71     		strb	r3, [r7, #5]
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 658              		.loc 1 547 0
 659 001c 214B     		ldr	r3, .L41+12
 660 001e 1B78     		ldrb	r3, [r3]
 661 0020 DBB2     		uxtb	r3, r3
 662 0022 002B     		cmp	r3, #0
 663 0024 03D1     		bne	.L35
 664              		.loc 1 547 0 is_stmt 0 discriminator 1
 665 0026 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 666 0028 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 667 002a 9A42     		cmp	r2, r3
 668 002c 18D0     		beq	.L36
 669              	.L35:
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 670              		.loc 1 549 0 is_stmt 1
 671 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 672 0030 1D4A     		ldr	r2, .L41+16
 673 0032 D35C     		ldrb	r3, [r2, r3]
 674 0034 FB71     		strb	r3, [r7, #7]
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 675              		.loc 1 550 0
 676 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 677 0038 0133     		adds	r3, r3, #1
 678 003a BB71     		strb	r3, [r7, #6]
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 679              		.loc 1 551 0
 680 003c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 681 003e 3F2B     		cmp	r3, #63
 682 0040 01D9     		bls	.L37
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 683              		.loc 1 553 0
 684 0042 0023     		movs	r3, #0
 685 0044 BB71     		strb	r3, [r7, #6]
 686              	.L37:
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 687              		.loc 1 556 0
 688 0046 154A     		ldr	r2, .L41+4
 689 0048 BB79     		ldrb	r3, [r7, #6]
 690 004a 1370     		strb	r3, [r2]
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 691              		.loc 1 558 0
 692 004c 154B     		ldr	r3, .L41+12
 693 004e 1B78     		ldrb	r3, [r3]
 694 0050 DBB2     		uxtb	r3, r3
 695 0052 002B     		cmp	r3, #0
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 23


 696 0054 03D0     		beq	.L38
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 697              		.loc 1 560 0
 698 0056 134B     		ldr	r3, .L41+12
 699 0058 0022     		movs	r2, #0
 700 005a 1A70     		strb	r2, [r3]
 558:Generated_Source\PSoC5/UART.c ****             {
 701              		.loc 1 558 0
 702 005c 12E0     		b	.L39
 703              	.L38:
 704 005e 11E0     		b	.L39
 705              	.L36:
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 706              		.loc 1 579 0
 707 0060 124B     		ldr	r3, .L41+20
 708 0062 1B78     		ldrb	r3, [r3]
 709 0064 3B71     		strb	r3, [r7, #4]
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 710              		.loc 1 580 0
 711 0066 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 712 0068 03F02003 		and	r3, r3, #32
 713 006c 002B     		cmp	r3, #0
 714 006e 09D0     		beq	.L39
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 715              		.loc 1 582 0
 716 0070 0F4B     		ldr	r3, .L41+24
 717 0072 1B78     		ldrb	r3, [r3]
 718 0074 FB71     		strb	r3, [r7, #7]
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 719              		.loc 1 585 0
 720 0076 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 721 0078 03F01E03 		and	r3, r3, #30
 584:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 722              		.loc 1 584 0
 723 007c 002B     		cmp	r3, #0
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 24


 724 007e 01D0     		beq	.L39
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 725              		.loc 1 587 0
 726 0080 0023     		movs	r3, #0
 727 0082 FB71     		strb	r3, [r7, #7]
 728              	.L39:
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 729              		.loc 1 592 0
 730 0084 0B4B     		ldr	r3, .L41+28
 731 0086 1022     		movs	r2, #16
 732 0088 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 733              		.loc 1 611 0
 734 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:Generated_Source\PSoC5/UART.c ****     }
 735              		.loc 1 612 0
 736 008c 1846     		mov	r0, r3
 737 008e 0C37     		adds	r7, r7, #12
 738              		.cfi_def_cfa_offset 4
 739 0090 BD46     		mov	sp, r7
 740              		.cfi_def_cfa_register 13
 741              		@ sp needed
 742 0092 5DF8047B 		ldr	r7, [sp], #4
 743              		.cfi_restore 7
 744              		.cfi_def_cfa_offset 0
 745 0096 7047     		bx	lr
 746              	.L42:
 747              		.align	2
 748              	.L41:
 749 0098 80E100E0 		.word	-536813184
 750 009c 00000000 		.word	UART_rxBufferRead
 751 00a0 00000000 		.word	UART_rxBufferWrite
 752 00a4 00000000 		.word	UART_rxBufferLoopDetect
 753 00a8 00000000 		.word	UART_rxBuffer
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 25


 754 00ac 66640040 		.word	1073767526
 755 00b0 45650040 		.word	1073767749
 756 00b4 00E100E0 		.word	-536813312
 757              		.cfi_endproc
 758              	.LFE9:
 759              		.size	UART_GetChar, .-UART_GetChar
 760              		.section	.text.UART_GetByte,"ax",%progbits
 761              		.align	2
 762              		.global	UART_GetByte
 763              		.thumb
 764              		.thumb_func
 765              		.type	UART_GetByte, %function
 766              	UART_GetByte:
 767              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 768              		.loc 1 635 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 8
 771              		@ frame_needed = 1, uses_anonymous_args = 0
 772 0000 90B5     		push	{r4, r7, lr}
 773              		.cfi_def_cfa_offset 12
 774              		.cfi_offset 4, -12
 775              		.cfi_offset 7, -8
 776              		.cfi_offset 14, -4
 777 0002 83B0     		sub	sp, sp, #12
 778              		.cfi_def_cfa_offset 24
 779 0004 00AF     		add	r7, sp, #0
 780              		.cfi_def_cfa_register 7
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 781              		.loc 1 640 0
 782 0006 0C4B     		ldr	r3, .L45
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 26


 783 0008 1022     		movs	r2, #16
 784 000a 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 785              		.loc 1 641 0
 786 000c 0B4B     		ldr	r3, .L45+4
 787 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 788 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 789              		.loc 1 642 0
 790 0012 0A4B     		ldr	r3, .L45+4
 791 0014 0022     		movs	r2, #0
 792 0016 1A70     		strb	r2, [r3]
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 793              		.loc 1 643 0
 794 0018 094B     		ldr	r3, .L45+8
 795 001a 1022     		movs	r2, #16
 796 001c 1A60     		str	r2, [r3]
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 797              		.loc 1 644 0
 798 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 799 0020 1B02     		lsls	r3, r3, #8
 800 0022 9CB2     		uxth	r4, r3
 801 0024 FFF7FEFF 		bl	UART_ReadRxData
 802 0028 0346     		mov	r3, r0
 803 002a 9BB2     		uxth	r3, r3
 804 002c 2343     		orrs	r3, r3, r4
 805 002e 9BB2     		uxth	r3, r3
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 806              		.loc 1 649 0
 807 0030 1846     		mov	r0, r3
 808 0032 0C37     		adds	r7, r7, #12
 809              		.cfi_def_cfa_offset 12
 810 0034 BD46     		mov	sp, r7
 811              		.cfi_def_cfa_register 13
 812              		@ sp needed
 813 0036 90BD     		pop	{r4, r7, pc}
 814              	.L46:
 815              		.align	2
 816              	.L45:
 817 0038 80E100E0 		.word	-536813184
 818 003c 00000000 		.word	UART_errorStatus
 819 0040 00E100E0 		.word	-536813312
 820              		.cfi_endproc
 821              	.LFE10:
 822              		.size	UART_GetByte, .-UART_GetByte
 823              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 824              		.align	2
 825              		.global	UART_GetRxBufferSize
 826              		.thumb
 827              		.thumb_func
 828              		.type	UART_GetRxBufferSize, %function
 829              	UART_GetRxBufferSize:
 830              	.LFB11:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 27


 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 831              		.loc 1 685 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 8
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 836 0000 80B4     		push	{r7}
 837              		.cfi_def_cfa_offset 4
 838              		.cfi_offset 7, -4
 839 0002 83B0     		sub	sp, sp, #12
 840              		.cfi_def_cfa_offset 16
 841 0004 00AF     		add	r7, sp, #0
 842              		.cfi_def_cfa_register 7
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 843              		.loc 1 691 0
 844 0006 1D4B     		ldr	r3, .L54
 845 0008 1022     		movs	r2, #16
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 28


 846 000a 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 847              		.loc 1 693 0
 848 000c 1C4B     		ldr	r3, .L54+4
 849 000e 1B78     		ldrb	r3, [r3]
 850 0010 DAB2     		uxtb	r2, r3
 851 0012 1C4B     		ldr	r3, .L54+8
 852 0014 1B78     		ldrb	r3, [r3]
 853 0016 DBB2     		uxtb	r3, r3
 854 0018 9A42     		cmp	r2, r3
 855 001a 0AD1     		bne	.L48
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 856              		.loc 1 695 0
 857 001c 1A4B     		ldr	r3, .L54+12
 858 001e 1B78     		ldrb	r3, [r3]
 859 0020 DBB2     		uxtb	r3, r3
 860 0022 002B     		cmp	r3, #0
 861 0024 02D0     		beq	.L49
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 862              		.loc 1 697 0
 863 0026 4023     		movs	r3, #64
 864 0028 FB71     		strb	r3, [r7, #7]
 865 002a 1DE0     		b	.L51
 866              	.L49:
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 867              		.loc 1 701 0
 868 002c 0023     		movs	r3, #0
 869 002e FB71     		strb	r3, [r7, #7]
 870 0030 1AE0     		b	.L51
 871              	.L48:
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 872              		.loc 1 704 0
 873 0032 134B     		ldr	r3, .L54+4
 874 0034 1B78     		ldrb	r3, [r3]
 875 0036 DAB2     		uxtb	r2, r3
 876 0038 124B     		ldr	r3, .L54+8
 877 003a 1B78     		ldrb	r3, [r3]
 878 003c DBB2     		uxtb	r3, r3
 879 003e 9A42     		cmp	r2, r3
 880 0040 08D2     		bcs	.L52
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 881              		.loc 1 706 0
 882 0042 104B     		ldr	r3, .L54+8
 883 0044 1B78     		ldrb	r3, [r3]
 884 0046 DAB2     		uxtb	r2, r3
 885 0048 0D4B     		ldr	r3, .L54+4
 886 004a 1B78     		ldrb	r3, [r3]
 887 004c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 29


 888 004e D31A     		subs	r3, r2, r3
 889 0050 FB71     		strb	r3, [r7, #7]
 890 0052 09E0     		b	.L51
 891              	.L52:
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 892              		.loc 1 710 0
 893 0054 0B4B     		ldr	r3, .L54+8
 894 0056 1B78     		ldrb	r3, [r3]
 895 0058 DAB2     		uxtb	r2, r3
 896 005a 094B     		ldr	r3, .L54+4
 897 005c 1B78     		ldrb	r3, [r3]
 898 005e DBB2     		uxtb	r3, r3
 899 0060 D31A     		subs	r3, r2, r3
 900 0062 DBB2     		uxtb	r3, r3
 901 0064 4033     		adds	r3, r3, #64
 902 0066 FB71     		strb	r3, [r7, #7]
 903              	.L51:
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 904              		.loc 1 713 0
 905 0068 084B     		ldr	r3, .L54+16
 906 006a 1022     		movs	r2, #16
 907 006c 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 908              		.loc 1 722 0
 909 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723:Generated_Source\PSoC5/UART.c ****     }
 910              		.loc 1 723 0
 911 0070 1846     		mov	r0, r3
 912 0072 0C37     		adds	r7, r7, #12
 913              		.cfi_def_cfa_offset 4
 914 0074 BD46     		mov	sp, r7
 915              		.cfi_def_cfa_register 13
 916              		@ sp needed
 917 0076 5DF8047B 		ldr	r7, [sp], #4
 918              		.cfi_restore 7
 919              		.cfi_def_cfa_offset 0
 920 007a 7047     		bx	lr
 921              	.L55:
 922              		.align	2
 923              	.L54:
 924 007c 80E100E0 		.word	-536813184
 925 0080 00000000 		.word	UART_rxBufferRead
 926 0084 00000000 		.word	UART_rxBufferWrite
 927 0088 00000000 		.word	UART_rxBufferLoopDetect
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 30


 928 008c 00E100E0 		.word	-536813312
 929              		.cfi_endproc
 930              	.LFE11:
 931              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 932              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 933              		.align	2
 934              		.global	UART_ClearRxBuffer
 935              		.thumb
 936              		.thumb_func
 937              		.type	UART_ClearRxBuffer, %function
 938              	UART_ClearRxBuffer:
 939              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 940              		.loc 1 758 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 8
 943              		@ frame_needed = 1, uses_anonymous_args = 0
 944 0000 80B5     		push	{r7, lr}
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 7, -8
 947              		.cfi_offset 14, -4
 948 0002 82B0     		sub	sp, sp, #8
 949              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 31


 950 0004 00AF     		add	r7, sp, #0
 951              		.cfi_def_cfa_register 7
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 952              		.loc 1 762 0
 953 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 954 000a 0346     		mov	r3, r0
 955 000c FB71     		strb	r3, [r7, #7]
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 956              		.loc 1 763 0
 957 000e 144A     		ldr	r2, .L57
 958 0010 134B     		ldr	r3, .L57
 959 0012 1B78     		ldrb	r3, [r3]
 960 0014 DBB2     		uxtb	r3, r3
 961 0016 43F00103 		orr	r3, r3, #1
 962 001a DBB2     		uxtb	r3, r3
 963 001c 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 964              		.loc 1 764 0
 965 001e 104A     		ldr	r2, .L57
 966 0020 0F4B     		ldr	r3, .L57
 967 0022 1B78     		ldrb	r3, [r3]
 968 0024 DBB2     		uxtb	r3, r3
 969 0026 23F00103 		bic	r3, r3, #1
 970 002a DBB2     		uxtb	r3, r3
 971 002c 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 972              		.loc 1 765 0
 973 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 974 0030 1846     		mov	r0, r3
 975 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 976              		.loc 1 770 0
 977 0036 0B4B     		ldr	r3, .L57+4
 978 0038 1022     		movs	r2, #16
 979 003a 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 980              		.loc 1 772 0
 981 003c 0A4B     		ldr	r3, .L57+8
 982 003e 0022     		movs	r2, #0
 983 0040 1A70     		strb	r2, [r3]
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 984              		.loc 1 773 0
 985 0042 0A4B     		ldr	r3, .L57+12
 986 0044 0022     		movs	r2, #0
 987 0046 1A70     		strb	r2, [r3]
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 988              		.loc 1 774 0
 989 0048 094B     		ldr	r3, .L57+16
 990 004a 0022     		movs	r2, #0
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 32


 991 004c 1A70     		strb	r2, [r3]
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 992              		.loc 1 775 0
 993 004e 094B     		ldr	r3, .L57+20
 994 0050 0022     		movs	r2, #0
 995 0052 1A70     		strb	r2, [r3]
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 996              		.loc 1 777 0
 997 0054 084B     		ldr	r3, .L57+24
 998 0056 1022     		movs	r2, #16
 999 0058 1A60     		str	r2, [r3]
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 1000              		.loc 1 781 0
 1001 005a 0837     		adds	r7, r7, #8
 1002              		.cfi_def_cfa_offset 8
 1003 005c BD46     		mov	sp, r7
 1004              		.cfi_def_cfa_register 13
 1005              		@ sp needed
 1006 005e 80BD     		pop	{r7, pc}
 1007              	.L58:
 1008              		.align	2
 1009              	.L57:
 1010 0060 95650040 		.word	1073767829
 1011 0064 80E100E0 		.word	-536813184
 1012 0068 00000000 		.word	UART_rxBufferRead
 1013 006c 00000000 		.word	UART_rxBufferWrite
 1014 0070 00000000 		.word	UART_rxBufferLoopDetect
 1015 0074 00000000 		.word	UART_rxBufferOverflow
 1016 0078 00E100E0 		.word	-536813312
 1017              		.cfi_endproc
 1018              	.LFE12:
 1019              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 1020              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 1021              		.align	2
 1022              		.global	UART_SetRxAddressMode
 1023              		.thumb
 1024              		.thumb_func
 1025              		.type	UART_SetRxAddressMode, %function
 1026              	UART_SetRxAddressMode:
 1027              	.LFB13:
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 33


 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 1028              		.loc 1 815 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 8
 1031              		@ frame_needed = 1, uses_anonymous_args = 0
 1032              		@ link register save eliminated.
 1033 0000 80B4     		push	{r7}
 1034              		.cfi_def_cfa_offset 4
 1035              		.cfi_offset 7, -4
 1036 0002 83B0     		sub	sp, sp, #12
 1037              		.cfi_def_cfa_offset 16
 1038 0004 00AF     		add	r7, sp, #0
 1039              		.cfi_def_cfa_register 7
 1040 0006 0346     		mov	r3, r0
 1041 0008 FB71     		strb	r3, [r7, #7]
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 34


 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 1042              		.loc 1 840 0
 1043 000a 0C37     		adds	r7, r7, #12
 1044              		.cfi_def_cfa_offset 4
 1045 000c BD46     		mov	sp, r7
 1046              		.cfi_def_cfa_register 13
 1047              		@ sp needed
 1048 000e 5DF8047B 		ldr	r7, [sp], #4
 1049              		.cfi_restore 7
 1050              		.cfi_def_cfa_offset 0
 1051 0012 7047     		bx	lr
 1052              		.cfi_endproc
 1053              	.LFE13:
 1054              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 1055              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 1056              		.align	2
 1057              		.global	UART_SetRxAddress1
 1058              		.thumb
 1059              		.thumb_func
 1060              		.type	UART_SetRxAddress1, %function
 1061              	UART_SetRxAddress1:
 1062              	.LFB14:
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 1063              		.loc 1 858 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 8
 1066              		@ frame_needed = 1, uses_anonymous_args = 0
 1067              		@ link register save eliminated.
 1068 0000 80B4     		push	{r7}
 1069              		.cfi_def_cfa_offset 4
 1070              		.cfi_offset 7, -4
 1071 0002 83B0     		sub	sp, sp, #12
 1072              		.cfi_def_cfa_offset 16
 1073 0004 00AF     		add	r7, sp, #0
 1074              		.cfi_def_cfa_register 7
 1075 0006 0346     		mov	r3, r0
 1076 0008 FB71     		strb	r3, [r7, #7]
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 35


 1077              		.loc 1 859 0
 1078 000a 044A     		ldr	r2, .L61
 1079 000c FB79     		ldrb	r3, [r7, #7]
 1080 000e 1370     		strb	r3, [r2]
 860:Generated_Source\PSoC5/UART.c ****     }
 1081              		.loc 1 860 0
 1082 0010 0C37     		adds	r7, r7, #12
 1083              		.cfi_def_cfa_offset 4
 1084 0012 BD46     		mov	sp, r7
 1085              		.cfi_def_cfa_register 13
 1086              		@ sp needed
 1087 0014 5DF8047B 		ldr	r7, [sp], #4
 1088              		.cfi_restore 7
 1089              		.cfi_def_cfa_offset 0
 1090 0018 7047     		bx	lr
 1091              	.L62:
 1092 001a 00BF     		.align	2
 1093              	.L61:
 1094 001c 25650040 		.word	1073767717
 1095              		.cfi_endproc
 1096              	.LFE14:
 1097              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 1098              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 1099              		.align	2
 1100              		.global	UART_SetRxAddress2
 1101              		.thumb
 1102              		.thumb_func
 1103              		.type	UART_SetRxAddress2, %function
 1104              	UART_SetRxAddress2:
 1105              	.LFB15:
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 1106              		.loc 1 878 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 8
 1109              		@ frame_needed = 1, uses_anonymous_args = 0
 1110              		@ link register save eliminated.
 1111 0000 80B4     		push	{r7}
 1112              		.cfi_def_cfa_offset 4
 1113              		.cfi_offset 7, -4
 1114 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 36


 1115              		.cfi_def_cfa_offset 16
 1116 0004 00AF     		add	r7, sp, #0
 1117              		.cfi_def_cfa_register 7
 1118 0006 0346     		mov	r3, r0
 1119 0008 FB71     		strb	r3, [r7, #7]
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 1120              		.loc 1 879 0
 1121 000a 044A     		ldr	r2, .L64
 1122 000c FB79     		ldrb	r3, [r7, #7]
 1123 000e 1370     		strb	r3, [r2]
 880:Generated_Source\PSoC5/UART.c ****     }
 1124              		.loc 1 880 0
 1125 0010 0C37     		adds	r7, r7, #12
 1126              		.cfi_def_cfa_offset 4
 1127 0012 BD46     		mov	sp, r7
 1128              		.cfi_def_cfa_register 13
 1129              		@ sp needed
 1130 0014 5DF8047B 		ldr	r7, [sp], #4
 1131              		.cfi_restore 7
 1132              		.cfi_def_cfa_offset 0
 1133 0018 7047     		bx	lr
 1134              	.L65:
 1135 001a 00BF     		.align	2
 1136              	.L64:
 1137 001c 35650040 		.word	1073767733
 1138              		.cfi_endproc
 1139              	.LFE15:
 1140              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 1141              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 1142              		.align	2
 1143              		.global	UART_SetTxInterruptMode
 1144              		.thumb
 1145              		.thumb_func
 1146              		.type	UART_SetTxInterruptMode, %function
 1147              	UART_SetTxInterruptMode:
 1148              	.LFB16:
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 37


 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 1149              		.loc 1 909 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 8
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153              		@ link register save eliminated.
 1154 0000 80B4     		push	{r7}
 1155              		.cfi_def_cfa_offset 4
 1156              		.cfi_offset 7, -4
 1157 0002 83B0     		sub	sp, sp, #12
 1158              		.cfi_def_cfa_offset 16
 1159 0004 00AF     		add	r7, sp, #0
 1160              		.cfi_def_cfa_register 7
 1161 0006 0346     		mov	r3, r0
 1162 0008 FB71     		strb	r3, [r7, #7]
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 1163              		.loc 1 910 0
 1164 000a 044A     		ldr	r2, .L67
 1165 000c FB79     		ldrb	r3, [r7, #7]
 1166 000e 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC5/UART.c ****     }
 1167              		.loc 1 911 0
 1168 0010 0C37     		adds	r7, r7, #12
 1169              		.cfi_def_cfa_offset 4
 1170 0012 BD46     		mov	sp, r7
 1171              		.cfi_def_cfa_register 13
 1172              		@ sp needed
 1173 0014 5DF8047B 		ldr	r7, [sp], #4
 1174              		.cfi_restore 7
 1175              		.cfi_def_cfa_offset 0
 1176 0018 7047     		bx	lr
 1177              	.L68:
 1178 001a 00BF     		.align	2
 1179              	.L67:
 1180 001c 8B640040 		.word	1073767563
 1181              		.cfi_endproc
 1182              	.LFE16:
 1183              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 1184              		.section	.text.UART_WriteTxData,"ax",%progbits
 1185              		.align	2
 1186              		.global	UART_WriteTxData
 1187              		.thumb
 1188              		.thumb_func
 1189              		.type	UART_WriteTxData, %function
 1190              	UART_WriteTxData:
 1191              	.LFB17:
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 38


 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 1192              		.loc 1 943 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 8
 1195              		@ frame_needed = 1, uses_anonymous_args = 0
 1196              		@ link register save eliminated.
 1197 0000 80B4     		push	{r7}
 1198              		.cfi_def_cfa_offset 4
 1199              		.cfi_offset 7, -4
 1200 0002 83B0     		sub	sp, sp, #12
 1201              		.cfi_def_cfa_offset 16
 1202 0004 00AF     		add	r7, sp, #0
 1203              		.cfi_def_cfa_register 7
 1204 0006 0346     		mov	r3, r0
 1205 0008 FB71     		strb	r3, [r7, #7]
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1206              		.loc 1 945 0
 1207 000a 1A4B     		ldr	r3, .L74
 1208 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1209 000e 002B     		cmp	r3, #0
 1210 0010 2AD0     		beq	.L69
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 1211              		.loc 1 950 0
 1212 0012 194B     		ldr	r3, .L74+4
 1213 0014 2022     		movs	r2, #32
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 39


 1214 0016 1A60     		str	r2, [r3]
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 1215              		.loc 1 952 0
 1216 0018 184B     		ldr	r3, .L74+8
 1217 001a 1B78     		ldrb	r3, [r3]
 1218 001c DAB2     		uxtb	r2, r3
 1219 001e 184B     		ldr	r3, .L74+12
 1220 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1221 0022 9A42     		cmp	r2, r3
 1222 0024 0AD1     		bne	.L71
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1223              		.loc 1 953 0 discriminator 1
 1224 0026 174B     		ldr	r3, .L74+16
 1225 0028 1B78     		ldrb	r3, [r3]
 1226 002a DBB2     		uxtb	r3, r3
 1227 002c 03F00403 		and	r3, r3, #4
 952:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1228              		.loc 1 952 0 discriminator 1
 1229 0030 002B     		cmp	r3, #0
 1230 0032 03D1     		bne	.L71
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 1231              		.loc 1 956 0
 1232 0034 144A     		ldr	r2, .L74+20
 1233 0036 FB79     		ldrb	r3, [r7, #7]
 1234 0038 1370     		strb	r3, [r2]
 1235 003a 12E0     		b	.L72
 1236              	.L71:
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 1237              		.loc 1 960 0
 1238 003c 104B     		ldr	r3, .L74+12
 1239 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1240 0040 3F2B     		cmp	r3, #63
 1241 0042 02D9     		bls	.L73
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 1242              		.loc 1 962 0
 1243 0044 0E4B     		ldr	r3, .L74+12
 1244 0046 0022     		movs	r2, #0
 1245 0048 1A70     		strb	r2, [r3]
 1246              	.L73:
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 1247              		.loc 1 965 0
 1248 004a 0D4B     		ldr	r3, .L74+12
 1249 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1250 004e 1946     		mov	r1, r3
 1251 0050 0E4A     		ldr	r2, .L74+24
 1252 0052 FB79     		ldrb	r3, [r7, #7]
 1253 0054 5354     		strb	r3, [r2, r1]
 966:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 40


 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 1254              		.loc 1 968 0
 1255 0056 0A4B     		ldr	r3, .L74+12
 1256 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1257 005a 0133     		adds	r3, r3, #1
 1258 005c DAB2     		uxtb	r2, r3
 1259 005e 084B     		ldr	r3, .L74+12
 1260 0060 1A70     		strb	r2, [r3]
 1261              	.L72:
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 1262              		.loc 1 971 0
 1263 0062 0B4B     		ldr	r3, .L74+28
 1264 0064 2022     		movs	r2, #32
 1265 0066 1A60     		str	r2, [r3]
 1266              	.L69:
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 1267              		.loc 1 980 0
 1268 0068 0C37     		adds	r7, r7, #12
 1269              		.cfi_def_cfa_offset 4
 1270 006a BD46     		mov	sp, r7
 1271              		.cfi_def_cfa_register 13
 1272              		@ sp needed
 1273 006c 5DF8047B 		ldr	r7, [sp], #4
 1274              		.cfi_restore 7
 1275              		.cfi_def_cfa_offset 0
 1276 0070 7047     		bx	lr
 1277              	.L75:
 1278 0072 00BF     		.align	2
 1279              	.L74:
 1280 0074 00000000 		.word	UART_initVar
 1281 0078 80E100E0 		.word	-536813184
 1282 007c 00000000 		.word	UART_txBufferRead
 1283 0080 00000000 		.word	UART_txBufferWrite
 1284 0084 6B640040 		.word	1073767531
 1285 0088 4D640040 		.word	1073767501
 1286 008c 00000000 		.word	UART_txBuffer
 1287 0090 00E100E0 		.word	-536813312
 1288              		.cfi_endproc
 1289              	.LFE17:
 1290              		.size	UART_WriteTxData, .-UART_WriteTxData
 1291              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 1292              		.align	2
 1293              		.global	UART_ReadTxStatus
 1294              		.thumb
 1295              		.thumb_func
 1296              		.type	UART_ReadTxStatus, %function
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 41


 1297              	UART_ReadTxStatus:
 1298              	.LFB18:
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 1299              		.loc 1 1004 0
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 0
 1302              		@ frame_needed = 1, uses_anonymous_args = 0
 1303              		@ link register save eliminated.
 1304 0000 80B4     		push	{r7}
 1305              		.cfi_def_cfa_offset 4
 1306              		.cfi_offset 7, -4
 1307 0002 00AF     		add	r7, sp, #0
 1308              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 1309              		.loc 1 1005 0
 1310 0004 034B     		ldr	r3, .L78
 1311 0006 1B78     		ldrb	r3, [r3]
 1312 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC5/UART.c ****     }
 1313              		.loc 1 1006 0
 1314 000a 1846     		mov	r0, r3
 1315 000c BD46     		mov	sp, r7
 1316              		.cfi_def_cfa_register 13
 1317              		@ sp needed
 1318 000e 5DF8047B 		ldr	r7, [sp], #4
 1319              		.cfi_restore 7
 1320              		.cfi_def_cfa_offset 0
 1321 0012 7047     		bx	lr
 1322              	.L79:
 1323              		.align	2
 1324              	.L78:
 1325 0014 6B640040 		.word	1073767531
 1326              		.cfi_endproc
 1327              	.LFE18:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 42


 1328              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 1329              		.section	.text.UART_PutChar,"ax",%progbits
 1330              		.align	2
 1331              		.global	UART_PutChar
 1332              		.thumb
 1333              		.thumb_func
 1334              		.type	UART_PutChar, %function
 1335              	UART_PutChar:
 1336              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 1337              		.loc 1 1042 0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 16
 1340              		@ frame_needed = 1, uses_anonymous_args = 0
 1341              		@ link register save eliminated.
 1342 0000 80B4     		push	{r7}
 1343              		.cfi_def_cfa_offset 4
 1344              		.cfi_offset 7, -4
 1345 0002 85B0     		sub	sp, sp, #20
 1346              		.cfi_def_cfa_offset 24
 1347 0004 00AF     		add	r7, sp, #0
 1348              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 43


 1349 0006 0346     		mov	r3, r0
 1350 0008 FB71     		strb	r3, [r7, #7]
 1351              	.L83:
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
 1352              		.loc 1 1059 0
 1353 000a 254B     		ldr	r3, .L87
 1354 000c 1B78     		ldrb	r3, [r3]
 1355 000e FB73     		strb	r3, [r7, #15]
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
 1356              		.loc 1 1060 0
 1357 0010 244B     		ldr	r3, .L87+4
 1358 0012 1B78     		ldrb	r3, [r3]
 1359 0014 BB73     		strb	r3, [r7, #14]
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 1360              		.loc 1 1067 0
 1361 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1362 0018 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1363 001a 9A42     		cmp	r2, r3
 1364 001c 08D2     		bcs	.L81
 1365              		.loc 1 1067 0 is_stmt 0 discriminator 1
 1366 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1367 0020 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1368 0022 013B     		subs	r3, r3, #1
 1369 0024 9A42     		cmp	r2, r3
 1370 0026 0CBF     		ite	eq
 1371 0028 0123     		moveq	r3, #1
 1372 002a 0023     		movne	r3, #0
 1373 002c DBB2     		uxtb	r3, r3
 1374 002e 07E0     		b	.L82
 1375              	.L81:
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1376              		.loc 1 1068 0 is_stmt 1 discriminator 2
 1377 0030 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1378 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1379 0034 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 44


1067:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1380              		.loc 1 1067 0 discriminator 2
 1381 0036 3F2B     		cmp	r3, #63
 1382 0038 0CBF     		ite	eq
 1383 003a 0123     		moveq	r3, #1
 1384 003c 0023     		movne	r3, #0
 1385 003e DBB2     		uxtb	r3, r3
 1386              	.L82:
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
 1387              		.loc 1 1069 0
 1388 0040 002B     		cmp	r3, #0
 1389 0042 E2D1     		bne	.L83
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 1390              		.loc 1 1071 0
 1391 0044 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1392 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1393 0048 9A42     		cmp	r2, r3
 1394 004a 0AD1     		bne	.L84
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1395              		.loc 1 1072 0 discriminator 1
 1396 004c 164B     		ldr	r3, .L87+8
 1397 004e 1B78     		ldrb	r3, [r3]
 1398 0050 DBB2     		uxtb	r3, r3
 1399 0052 03F00403 		and	r3, r3, #4
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1400              		.loc 1 1071 0 discriminator 1
 1401 0056 002B     		cmp	r3, #0
 1402 0058 03D1     		bne	.L84
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 1403              		.loc 1 1075 0
 1404 005a 144A     		ldr	r2, .L87+12
 1405 005c FB79     		ldrb	r3, [r7, #7]
 1406 005e 1370     		strb	r3, [r2]
 1407 0060 18E0     		b	.L80
 1408              	.L84:
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
 1409              		.loc 1 1079 0
 1410 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1411 0064 3F2B     		cmp	r3, #63
 1412 0066 01D9     		bls	.L86
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
 1413              		.loc 1 1081 0
 1414 0068 0023     		movs	r3, #0
 1415 006a FB73     		strb	r3, [r7, #15]
 1416              	.L86:
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
 1417              		.loc 1 1084 0
 1418 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 45


 1419 006e 1049     		ldr	r1, .L87+16
 1420 0070 FA79     		ldrb	r2, [r7, #7]
 1421 0072 CA54     		strb	r2, [r1, r3]
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 1422              		.loc 1 1085 0
 1423 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1424 0076 0133     		adds	r3, r3, #1
 1425 0078 FB73     		strb	r3, [r7, #15]
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
 1426              		.loc 1 1092 0
 1427 007a 094A     		ldr	r2, .L87
 1428 007c FB7B     		ldrb	r3, [r7, #15]
 1429 007e 1370     		strb	r3, [r2]
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
 1430              		.loc 1 1098 0
 1431 0080 094B     		ldr	r3, .L87+8
 1432 0082 1B78     		ldrb	r3, [r3]
 1433 0084 DBB2     		uxtb	r3, r3
 1434 0086 03F00203 		and	r3, r3, #2
 1435 008a 002B     		cmp	r3, #0
 1436 008c 02D0     		beq	.L80
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
 1437              		.loc 1 1101 0
 1438 008e 094B     		ldr	r3, .L87+20
 1439 0090 2022     		movs	r2, #32
 1440 0092 1A60     		str	r2, [r3]
 1441              	.L80:
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
 1442              		.loc 1 1116 0
 1443 0094 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 46


 1444              		.cfi_def_cfa_offset 4
 1445 0096 BD46     		mov	sp, r7
 1446              		.cfi_def_cfa_register 13
 1447              		@ sp needed
 1448 0098 5DF8047B 		ldr	r7, [sp], #4
 1449              		.cfi_restore 7
 1450              		.cfi_def_cfa_offset 0
 1451 009c 7047     		bx	lr
 1452              	.L88:
 1453 009e 00BF     		.align	2
 1454              	.L87:
 1455 00a0 00000000 		.word	UART_txBufferWrite
 1456 00a4 00000000 		.word	UART_txBufferRead
 1457 00a8 6B640040 		.word	1073767531
 1458 00ac 4D640040 		.word	1073767501
 1459 00b0 00000000 		.word	UART_txBuffer
 1460 00b4 00E200E0 		.word	-536813056
 1461              		.cfi_endproc
 1462              	.LFE19:
 1463              		.size	UART_PutChar, .-UART_PutChar
 1464              		.section	.text.UART_PutString,"ax",%progbits
 1465              		.align	2
 1466              		.global	UART_PutString
 1467              		.thumb
 1468              		.thumb_func
 1469              		.type	UART_PutString, %function
 1470              	UART_PutString:
 1471              	.LFB20:
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 47


1146:Generated_Source\PSoC5/UART.c ****     {
 1472              		.loc 1 1146 0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 16
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476 0000 80B5     		push	{r7, lr}
 1477              		.cfi_def_cfa_offset 8
 1478              		.cfi_offset 7, -8
 1479              		.cfi_offset 14, -4
 1480 0002 84B0     		sub	sp, sp, #16
 1481              		.cfi_def_cfa_offset 24
 1482 0004 00AF     		add	r7, sp, #0
 1483              		.cfi_def_cfa_register 7
 1484 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
 1485              		.loc 1 1147 0
 1486 0008 0023     		movs	r3, #0
 1487 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1488              		.loc 1 1150 0
 1489 000c 0B4B     		ldr	r3, .L93
 1490 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1491 0010 002B     		cmp	r3, #0
 1492 0012 10D0     		beq	.L89
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
 1493              		.loc 1 1153 0
 1494 0014 09E0     		b	.L91
 1495              	.L92:
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 1496              		.loc 1 1155 0
 1497 0016 FB89     		ldrh	r3, [r7, #14]
 1498 0018 7A68     		ldr	r2, [r7, #4]
 1499 001a 1344     		add	r3, r3, r2
 1500 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1501 001e 1846     		mov	r0, r3
 1502 0020 FFF7FEFF 		bl	UART_PutChar
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 1503              		.loc 1 1156 0
 1504 0024 FB89     		ldrh	r3, [r7, #14]
 1505 0026 0133     		adds	r3, r3, #1
 1506 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1507              	.L91:
1153:Generated_Source\PSoC5/UART.c ****             {
 1508              		.loc 1 1153 0
 1509 002a FB89     		ldrh	r3, [r7, #14]
 1510 002c 7A68     		ldr	r2, [r7, #4]
 1511 002e 1344     		add	r3, r3, r2
 1512 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 0032 002B     		cmp	r3, #0
 1514 0034 EFD1     		bne	.L92
 1515              	.L89:
1157:Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 48


1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
 1516              		.loc 1 1159 0
 1517 0036 1037     		adds	r7, r7, #16
 1518              		.cfi_def_cfa_offset 8
 1519 0038 BD46     		mov	sp, r7
 1520              		.cfi_def_cfa_register 13
 1521              		@ sp needed
 1522 003a 80BD     		pop	{r7, pc}
 1523              	.L94:
 1524              		.align	2
 1525              	.L93:
 1526 003c 00000000 		.word	UART_initVar
 1527              		.cfi_endproc
 1528              	.LFE20:
 1529              		.size	UART_PutString, .-UART_PutString
 1530              		.section	.text.UART_PutArray,"ax",%progbits
 1531              		.align	2
 1532              		.global	UART_PutArray
 1533              		.thumb
 1534              		.thumb_func
 1535              		.type	UART_PutArray, %function
 1536              	UART_PutArray:
 1537              	.LFB21:
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 49


1193:Generated_Source\PSoC5/UART.c ****     {
 1538              		.loc 1 1193 0
 1539              		.cfi_startproc
 1540              		@ args = 0, pretend = 0, frame = 16
 1541              		@ frame_needed = 1, uses_anonymous_args = 0
 1542 0000 80B5     		push	{r7, lr}
 1543              		.cfi_def_cfa_offset 8
 1544              		.cfi_offset 7, -8
 1545              		.cfi_offset 14, -4
 1546 0002 84B0     		sub	sp, sp, #16
 1547              		.cfi_def_cfa_offset 24
 1548 0004 00AF     		add	r7, sp, #0
 1549              		.cfi_def_cfa_register 7
 1550 0006 7860     		str	r0, [r7, #4]
 1551 0008 0B46     		mov	r3, r1
 1552 000a FB70     		strb	r3, [r7, #3]
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
 1553              		.loc 1 1194 0
 1554 000c 0023     		movs	r3, #0
 1555 000e FB73     		strb	r3, [r7, #15]
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1556              		.loc 1 1197 0
 1557 0010 0A4B     		ldr	r3, .L99
 1558 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1559 0014 002B     		cmp	r3, #0
 1560 0016 0ED0     		beq	.L95
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
 1561              		.loc 1 1199 0
 1562 0018 09E0     		b	.L97
 1563              	.L98:
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 1564              		.loc 1 1201 0
 1565 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1566 001c 7A68     		ldr	r2, [r7, #4]
 1567 001e 1344     		add	r3, r3, r2
 1568 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1569 0022 1846     		mov	r0, r3
 1570 0024 FFF7FEFF 		bl	UART_PutChar
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 1571              		.loc 1 1202 0
 1572 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1573 002a 0133     		adds	r3, r3, #1
 1574 002c FB73     		strb	r3, [r7, #15]
 1575              	.L97:
1199:Generated_Source\PSoC5/UART.c ****             {
 1576              		.loc 1 1199 0
 1577 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1578 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1579 0032 9A42     		cmp	r2, r3
 1580 0034 F1D3     		bcc	.L98
 1581              	.L95:
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 50


1205:Generated_Source\PSoC5/UART.c ****     }
 1582              		.loc 1 1205 0
 1583 0036 1037     		adds	r7, r7, #16
 1584              		.cfi_def_cfa_offset 8
 1585 0038 BD46     		mov	sp, r7
 1586              		.cfi_def_cfa_register 13
 1587              		@ sp needed
 1588 003a 80BD     		pop	{r7, pc}
 1589              	.L100:
 1590              		.align	2
 1591              	.L99:
 1592 003c 00000000 		.word	UART_initVar
 1593              		.cfi_endproc
 1594              	.LFE21:
 1595              		.size	UART_PutArray, .-UART_PutArray
 1596              		.section	.text.UART_PutCRLF,"ax",%progbits
 1597              		.align	2
 1598              		.global	UART_PutCRLF
 1599              		.thumb
 1600              		.thumb_func
 1601              		.type	UART_PutCRLF, %function
 1602              	UART_PutCRLF:
 1603              	.LFB22:
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 1604              		.loc 1 1231 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 8
 1607              		@ frame_needed = 1, uses_anonymous_args = 0
 1608 0000 80B5     		push	{r7, lr}
 1609              		.cfi_def_cfa_offset 8
 1610              		.cfi_offset 7, -8
 1611              		.cfi_offset 14, -4
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 51


 1612 0002 82B0     		sub	sp, sp, #8
 1613              		.cfi_def_cfa_offset 16
 1614 0004 00AF     		add	r7, sp, #0
 1615              		.cfi_def_cfa_register 7
 1616 0006 0346     		mov	r3, r0
 1617 0008 FB71     		strb	r3, [r7, #7]
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1618              		.loc 1 1233 0
 1619 000a 084B     		ldr	r3, .L103
 1620 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1621 000e 002B     		cmp	r3, #0
 1622 0010 09D0     		beq	.L101
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 1623              		.loc 1 1235 0
 1624 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1625 0014 1846     		mov	r0, r3
 1626 0016 FFF7FEFF 		bl	UART_PutChar
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 1627              		.loc 1 1236 0
 1628 001a 0D20     		movs	r0, #13
 1629 001c FFF7FEFF 		bl	UART_PutChar
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 1630              		.loc 1 1237 0
 1631 0020 0A20     		movs	r0, #10
 1632 0022 FFF7FEFF 		bl	UART_PutChar
 1633              	.L101:
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
 1634              		.loc 1 1239 0
 1635 0026 0837     		adds	r7, r7, #8
 1636              		.cfi_def_cfa_offset 8
 1637 0028 BD46     		mov	sp, r7
 1638              		.cfi_def_cfa_register 13
 1639              		@ sp needed
 1640 002a 80BD     		pop	{r7, pc}
 1641              	.L104:
 1642              		.align	2
 1643              	.L103:
 1644 002c 00000000 		.word	UART_initVar
 1645              		.cfi_endproc
 1646              	.LFE22:
 1647              		.size	UART_PutCRLF, .-UART_PutCRLF
 1648              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 1649              		.align	2
 1650              		.global	UART_GetTxBufferSize
 1651              		.thumb
 1652              		.thumb_func
 1653              		.type	UART_GetTxBufferSize, %function
 1654              	UART_GetTxBufferSize:
 1655              	.LFB23:
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 52


1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 1656              		.loc 1 1275 0
 1657              		.cfi_startproc
 1658              		@ args = 0, pretend = 0, frame = 8
 1659              		@ frame_needed = 1, uses_anonymous_args = 0
 1660              		@ link register save eliminated.
 1661 0000 80B4     		push	{r7}
 1662              		.cfi_def_cfa_offset 4
 1663              		.cfi_offset 7, -4
 1664 0002 83B0     		sub	sp, sp, #12
 1665              		.cfi_def_cfa_offset 16
 1666 0004 00AF     		add	r7, sp, #0
 1667              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 1668              		.loc 1 1281 0
 1669 0006 174B     		ldr	r3, .L110
 1670 0008 2022     		movs	r2, #32
 1671 000a 1A60     		str	r2, [r3]
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
 1672              		.loc 1 1283 0
 1673 000c 164B     		ldr	r3, .L110+4
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 53


 1674 000e 1B78     		ldrb	r3, [r3]
 1675 0010 DAB2     		uxtb	r2, r3
 1676 0012 164B     		ldr	r3, .L110+8
 1677 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1678 0016 9A42     		cmp	r2, r3
 1679 0018 02D1     		bne	.L106
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
 1680              		.loc 1 1285 0
 1681 001a 0023     		movs	r3, #0
 1682 001c FB71     		strb	r3, [r7, #7]
 1683 001e 17E0     		b	.L107
 1684              	.L106:
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
 1685              		.loc 1 1287 0
 1686 0020 114B     		ldr	r3, .L110+4
 1687 0022 1B78     		ldrb	r3, [r3]
 1688 0024 DAB2     		uxtb	r2, r3
 1689 0026 114B     		ldr	r3, .L110+8
 1690 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1691 002a 9A42     		cmp	r2, r3
 1692 002c 07D2     		bcs	.L108
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
 1693              		.loc 1 1289 0
 1694 002e 0F4B     		ldr	r3, .L110+8
 1695 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1696 0032 0D4B     		ldr	r3, .L110+4
 1697 0034 1B78     		ldrb	r3, [r3]
 1698 0036 DBB2     		uxtb	r3, r3
 1699 0038 D31A     		subs	r3, r2, r3
 1700 003a FB71     		strb	r3, [r7, #7]
 1701 003c 08E0     		b	.L107
 1702              	.L108:
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
 1703              		.loc 1 1293 0
 1704 003e 0B4B     		ldr	r3, .L110+8
 1705 0040 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1706 0042 094B     		ldr	r3, .L110+4
 1707 0044 1B78     		ldrb	r3, [r3]
 1708 0046 DBB2     		uxtb	r3, r3
 1709 0048 D31A     		subs	r3, r2, r3
 1710 004a DBB2     		uxtb	r3, r3
 1711 004c 4033     		adds	r3, r3, #64
 1712 004e FB71     		strb	r3, [r7, #7]
 1713              	.L107:
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1714              		.loc 1 1297 0
 1715 0050 074B     		ldr	r3, .L110+12
 1716 0052 2022     		movs	r2, #32
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 54


 1717 0054 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
 1718              		.loc 1 1320 0
 1719 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:Generated_Source\PSoC5/UART.c ****     }
 1720              		.loc 1 1321 0
 1721 0058 1846     		mov	r0, r3
 1722 005a 0C37     		adds	r7, r7, #12
 1723              		.cfi_def_cfa_offset 4
 1724 005c BD46     		mov	sp, r7
 1725              		.cfi_def_cfa_register 13
 1726              		@ sp needed
 1727 005e 5DF8047B 		ldr	r7, [sp], #4
 1728              		.cfi_restore 7
 1729              		.cfi_def_cfa_offset 0
 1730 0062 7047     		bx	lr
 1731              	.L111:
 1732              		.align	2
 1733              	.L110:
 1734 0064 80E100E0 		.word	-536813184
 1735 0068 00000000 		.word	UART_txBufferRead
 1736 006c 00000000 		.word	UART_txBufferWrite
 1737 0070 00E100E0 		.word	-536813312
 1738              		.cfi_endproc
 1739              	.LFE23:
 1740              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 1741              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1742              		.align	2
 1743              		.global	UART_ClearTxBuffer
 1744              		.thumb
 1745              		.thumb_func
 1746              		.type	UART_ClearTxBuffer, %function
 1747              	UART_ClearTxBuffer:
 1748              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 55


1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 1749              		.loc 1 1355 0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 8
 1752              		@ frame_needed = 1, uses_anonymous_args = 0
 1753 0000 80B5     		push	{r7, lr}
 1754              		.cfi_def_cfa_offset 8
 1755              		.cfi_offset 7, -8
 1756              		.cfi_offset 14, -4
 1757 0002 82B0     		sub	sp, sp, #8
 1758              		.cfi_def_cfa_offset 16
 1759 0004 00AF     		add	r7, sp, #0
 1760              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1761              		.loc 1 1358 0
 1762 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1763 000a 0346     		mov	r3, r0
 1764 000c FB71     		strb	r3, [r7, #7]
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 1765              		.loc 1 1360 0
 1766 000e 114A     		ldr	r2, .L113
 1767 0010 104B     		ldr	r3, .L113
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 56


 1768 0012 1B78     		ldrb	r3, [r3]
 1769 0014 DBB2     		uxtb	r3, r3
 1770 0016 43F00103 		orr	r3, r3, #1
 1771 001a DBB2     		uxtb	r3, r3
 1772 001c 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1773              		.loc 1 1361 0
 1774 001e 0D4A     		ldr	r2, .L113
 1775 0020 0C4B     		ldr	r3, .L113
 1776 0022 1B78     		ldrb	r3, [r3]
 1777 0024 DBB2     		uxtb	r3, r3
 1778 0026 23F00103 		bic	r3, r3, #1
 1779 002a DBB2     		uxtb	r3, r3
 1780 002c 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 1781              		.loc 1 1362 0
 1782 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1783 0030 1846     		mov	r0, r3
 1784 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 1785              		.loc 1 1367 0
 1786 0036 084B     		ldr	r3, .L113+4
 1787 0038 2022     		movs	r2, #32
 1788 003a 1A60     		str	r2, [r3]
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
 1789              		.loc 1 1369 0
 1790 003c 074B     		ldr	r3, .L113+8
 1791 003e 0022     		movs	r2, #0
 1792 0040 1A70     		strb	r2, [r3]
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
 1793              		.loc 1 1370 0
 1794 0042 074B     		ldr	r3, .L113+12
 1795 0044 0022     		movs	r2, #0
 1796 0046 1A70     		strb	r2, [r3]
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1797              		.loc 1 1373 0
 1798 0048 064B     		ldr	r3, .L113+16
 1799 004a 2022     		movs	r2, #32
 1800 004c 1A60     		str	r2, [r3]
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
 1801              		.loc 1 1376 0
 1802 004e 0837     		adds	r7, r7, #8
 1803              		.cfi_def_cfa_offset 8
 1804 0050 BD46     		mov	sp, r7
 1805              		.cfi_def_cfa_register 13
 1806              		@ sp needed
 1807 0052 80BD     		pop	{r7, pc}
 1808              	.L114:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 57


 1809              		.align	2
 1810              	.L113:
 1811 0054 9D640040 		.word	1073767581
 1812 0058 80E100E0 		.word	-536813184
 1813 005c 00000000 		.word	UART_txBufferRead
 1814 0060 00000000 		.word	UART_txBufferWrite
 1815 0064 00E100E0 		.word	-536813312
 1816              		.cfi_endproc
 1817              	.LFE24:
 1818              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1819              		.section	.text.UART_SendBreak,"ax",%progbits
 1820              		.align	2
 1821              		.global	UART_SendBreak
 1822              		.thumb
 1823              		.thumb_func
 1824              		.type	UART_SendBreak, %function
 1825              	UART_SendBreak:
 1826              	.LFB25:
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 58


1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 1827              		.loc 1 1441 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 16
 1830              		@ frame_needed = 1, uses_anonymous_args = 0
 1831              		@ link register save eliminated.
 1832 0000 80B4     		push	{r7}
 1833              		.cfi_def_cfa_offset 4
 1834              		.cfi_offset 7, -4
 1835 0002 85B0     		sub	sp, sp, #20
 1836              		.cfi_def_cfa_offset 24
 1837 0004 00AF     		add	r7, sp, #0
 1838              		.cfi_def_cfa_register 7
 1839 0006 0346     		mov	r3, r0
 1840 0008 FB71     		strb	r3, [r7, #7]
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1841              		.loc 1 1444 0
 1842 000a 1F4B     		ldr	r3, .L123
 1843 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1844 000e 002B     		cmp	r3, #0
 1845 0010 35D0     		beq	.L115
 1846              	.LBB2:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 59


1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 1847              		.loc 1 1490 0
 1848 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1849 0014 002B     		cmp	r3, #0
 1850 0016 02D0     		beq	.L117
 1851              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1852 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1853 001a 032B     		cmp	r3, #3
 1854 001c 12D1     		bne	.L118
 1855              	.L117:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 60


1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 1856              		.loc 1 1501 0 is_stmt 1
 1857 001e 1B4B     		ldr	r3, .L123+4
 1858 0020 1B78     		ldrb	r3, [r3]
 1859 0022 DAB2     		uxtb	r2, r3
 1860 0024 1A4B     		ldr	r3, .L123+8
 1861 0026 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1862              		.loc 1 1502 0
 1863 0028 184B     		ldr	r3, .L123+4
 1864 002a 6722     		movs	r2, #103
 1865 002c 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 1866              		.loc 1 1509 0
 1867 002e 194B     		ldr	r3, .L123+12
 1868 0030 0022     		movs	r2, #0
 1869 0032 1A70     		strb	r2, [r3]
 1870              	.L119:
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1871              		.loc 1 1513 0 discriminator 1
 1872 0034 184B     		ldr	r3, .L123+16
 1873 0036 1B78     		ldrb	r3, [r3]
 1874 0038 FB73     		strb	r3, [r7, #15]
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1875              		.loc 1 1515 0 discriminator 1
 1876 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1877 003c 03F00203 		and	r3, r3, #2
 1878 0040 002B     		cmp	r3, #0
 1879 0042 F7D1     		bne	.L119
 1880              	.L118:
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1881              		.loc 1 1518 0
 1882 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1883 0046 012B     		cmp	r3, #1
 1884 0048 02D0     		beq	.L120
 1885              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1886 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1887 004c 032B     		cmp	r3, #3
 1888 004e 09D1     		bne	.L121
 1889              	.L120:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 61


 1890              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1891 0050 114B     		ldr	r3, .L123+16
 1892 0052 1B78     		ldrb	r3, [r3]
 1893 0054 FB73     		strb	r3, [r7, #15]
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 1894              		.loc 1 1525 0 discriminator 1
 1895 0056 FB7B     		ldrb	r3, [r7, #15]
 1896 0058 DB43     		mvns	r3, r3
 1897 005a DBB2     		uxtb	r3, r3
 1898 005c 03F00103 		and	r3, r3, #1
 1899 0060 002B     		cmp	r3, #0
 1900 0062 F5D1     		bne	.L120
 1901              	.L121:
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1902              		.loc 1 1528 0
 1903 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1904 0066 012B     		cmp	r3, #1
 1905 0068 05D0     		beq	.L122
 1906              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1907 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1908 006c 022B     		cmp	r3, #2
 1909 006e 02D0     		beq	.L122
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1910              		.loc 1 1529 0 is_stmt 1
 1911 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1912 0072 032B     		cmp	r3, #3
 1913 0074 03D1     		bne	.L115
 1914              	.L122:
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1915              		.loc 1 1534 0
 1916 0076 054B     		ldr	r3, .L123+4
 1917 0078 054A     		ldr	r2, .L123+8
 1918 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1919 007c 1A70     		strb	r2, [r3]
 1920              	.L115:
 1921              	.LBE2:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
 1922              		.loc 1 1547 0
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 62


 1923 007e 1437     		adds	r7, r7, #20
 1924              		.cfi_def_cfa_offset 4
 1925 0080 BD46     		mov	sp, r7
 1926              		.cfi_def_cfa_register 13
 1927              		@ sp needed
 1928 0082 5DF8047B 		ldr	r7, [sp], #4
 1929              		.cfi_restore 7
 1930              		.cfi_def_cfa_offset 0
 1931 0086 7047     		bx	lr
 1932              	.L124:
 1933              		.align	2
 1934              	.L123:
 1935 0088 00000000 		.word	UART_initVar
 1936 008c 34650040 		.word	1073767732
 1937 0090 08000000 		.word	txPeriod.4998
 1938 0094 4D640040 		.word	1073767501
 1939 0098 6B640040 		.word	1073767531
 1940              		.cfi_endproc
 1941              	.LFE25:
 1942              		.size	UART_SendBreak, .-UART_SendBreak
 1943              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1944              		.align	2
 1945              		.global	UART_SetTxAddressMode
 1946              		.thumb
 1947              		.thumb_func
 1948              		.type	UART_SetTxAddressMode, %function
 1949              	UART_SetTxAddressMode:
 1950              	.LFB26:
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1951              		.loc 1 1573 0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 63


 1954              		@ frame_needed = 1, uses_anonymous_args = 0
 1955              		@ link register save eliminated.
 1956 0000 80B4     		push	{r7}
 1957              		.cfi_def_cfa_offset 4
 1958              		.cfi_offset 7, -4
 1959 0002 83B0     		sub	sp, sp, #12
 1960              		.cfi_def_cfa_offset 16
 1961 0004 00AF     		add	r7, sp, #0
 1962              		.cfi_def_cfa_register 7
 1963 0006 0346     		mov	r3, r0
 1964 0008 FB71     		strb	r3, [r7, #7]
1574:Generated_Source\PSoC5/UART.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC5/UART.c ****         {
1577:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() |
1579:Generated_Source\PSoC5/UART.c ****                                                   UART_CTRL_MARK);
1580:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART.c ****         }
1582:Generated_Source\PSoC5/UART.c ****         else
1583:Generated_Source\PSoC5/UART.c ****         {
1584:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() &
1586:Generated_Source\PSoC5/UART.c ****                                                   (uint8) ~UART_CTRL_MARK);
1587:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC5/UART.c ****         }
1589:Generated_Source\PSoC5/UART.c ****     }
 1965              		.loc 1 1589 0
 1966 000a 0C37     		adds	r7, r7, #12
 1967              		.cfi_def_cfa_offset 4
 1968 000c BD46     		mov	sp, r7
 1969              		.cfi_def_cfa_register 13
 1970              		@ sp needed
 1971 000e 5DF8047B 		ldr	r7, [sp], #4
 1972              		.cfi_restore 7
 1973              		.cfi_def_cfa_offset 0
 1974 0012 7047     		bx	lr
 1975              		.cfi_endproc
 1976              	.LFE26:
 1977              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1978              		.bss
 1979              	txPeriod.4998:
 1980 0008 00       		.space	1
 1981              		.text
 1982              	.Letext0:
 1983              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1984              		.section	.debug_info,"",%progbits
 1985              	.Ldebug_info0:
 1986 0000 3D060000 		.4byte	0x63d
 1987 0004 0400     		.2byte	0x4
 1988 0006 00000000 		.4byte	.Ldebug_abbrev0
 1989 000a 04       		.byte	0x4
 1990 000b 01       		.uleb128 0x1
 1991 000c A5020000 		.4byte	.LASF77
 1992 0010 01       		.byte	0x1
 1993 0011 4D030000 		.4byte	.LASF78
 1994 0015 C4030000 		.4byte	.LASF79
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 64


 1995 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1996 001d 00000000 		.4byte	0
 1997 0021 00000000 		.4byte	.Ldebug_line0
 1998 0025 02       		.uleb128 0x2
 1999 0026 01       		.byte	0x1
 2000 0027 06       		.byte	0x6
 2001 0028 9C000000 		.4byte	.LASF0
 2002 002c 02       		.uleb128 0x2
 2003 002d 01       		.byte	0x1
 2004 002e 08       		.byte	0x8
 2005 002f 9B030000 		.4byte	.LASF1
 2006 0033 02       		.uleb128 0x2
 2007 0034 02       		.byte	0x2
 2008 0035 05       		.byte	0x5
 2009 0036 BA030000 		.4byte	.LASF2
 2010 003a 02       		.uleb128 0x2
 2011 003b 02       		.byte	0x2
 2012 003c 07       		.byte	0x7
 2013 003d F2010000 		.4byte	.LASF3
 2014 0041 02       		.uleb128 0x2
 2015 0042 04       		.byte	0x4
 2016 0043 05       		.byte	0x5
 2017 0044 B1000000 		.4byte	.LASF4
 2018 0048 02       		.uleb128 0x2
 2019 0049 04       		.byte	0x4
 2020 004a 07       		.byte	0x7
 2021 004b A4010000 		.4byte	.LASF5
 2022 004f 02       		.uleb128 0x2
 2023 0050 08       		.byte	0x8
 2024 0051 05       		.byte	0x5
 2025 0052 8E000000 		.4byte	.LASF6
 2026 0056 02       		.uleb128 0x2
 2027 0057 08       		.byte	0x8
 2028 0058 07       		.byte	0x7
 2029 0059 2C000000 		.4byte	.LASF7
 2030 005d 03       		.uleb128 0x3
 2031 005e 04       		.byte	0x4
 2032 005f 05       		.byte	0x5
 2033 0060 696E7400 		.ascii	"int\000"
 2034 0064 02       		.uleb128 0x2
 2035 0065 04       		.byte	0x4
 2036 0066 07       		.byte	0x7
 2037 0067 68010000 		.4byte	.LASF8
 2038 006b 04       		.uleb128 0x4
 2039 006c D7000000 		.4byte	.LASF9
 2040 0070 02       		.byte	0x2
 2041 0071 3801     		.2byte	0x138
 2042 0073 2C000000 		.4byte	0x2c
 2043 0077 04       		.uleb128 0x4
 2044 0078 00000000 		.4byte	.LASF10
 2045 007c 02       		.byte	0x2
 2046 007d 3901     		.2byte	0x139
 2047 007f 3A000000 		.4byte	0x3a
 2048 0083 04       		.uleb128 0x4
 2049 0084 1C010000 		.4byte	.LASF11
 2050 0088 02       		.byte	0x2
 2051 0089 3A01     		.2byte	0x13a
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 65


 2052 008b 48000000 		.4byte	0x48
 2053 008f 02       		.uleb128 0x2
 2054 0090 04       		.byte	0x4
 2055 0091 04       		.byte	0x4
 2056 0092 ED040000 		.4byte	.LASF12
 2057 0096 02       		.uleb128 0x2
 2058 0097 08       		.byte	0x8
 2059 0098 04       		.byte	0x4
 2060 0099 F6000000 		.4byte	.LASF13
 2061 009d 04       		.uleb128 0x4
 2062 009e 60040000 		.4byte	.LASF14
 2063 00a2 02       		.byte	0x2
 2064 00a3 4901     		.2byte	0x149
 2065 00a5 A9000000 		.4byte	0xa9
 2066 00a9 02       		.uleb128 0x2
 2067 00aa 01       		.byte	0x1
 2068 00ab 08       		.byte	0x8
 2069 00ac 5B040000 		.4byte	.LASF15
 2070 00b0 04       		.uleb128 0x4
 2071 00b1 80030000 		.4byte	.LASF16
 2072 00b5 02       		.byte	0x2
 2073 00b6 E201     		.2byte	0x1e2
 2074 00b8 BC000000 		.4byte	0xbc
 2075 00bc 05       		.uleb128 0x5
 2076 00bd 6B000000 		.4byte	0x6b
 2077 00c1 04       		.uleb128 0x4
 2078 00c2 60020000 		.4byte	.LASF17
 2079 00c6 02       		.byte	0x2
 2080 00c7 E401     		.2byte	0x1e4
 2081 00c9 CD000000 		.4byte	0xcd
 2082 00cd 05       		.uleb128 0x5
 2083 00ce 83000000 		.4byte	0x83
 2084 00d2 02       		.uleb128 0x2
 2085 00d3 04       		.byte	0x4
 2086 00d4 07       		.byte	0x7
 2087 00d5 6E020000 		.4byte	.LASF18
 2088 00d9 06       		.uleb128 0x6
 2089 00da 43000000 		.4byte	.LASF19
 2090 00de 01       		.byte	0x1
 2091 00df 4C       		.byte	0x4c
 2092 00e0 00000000 		.4byte	.LFB0
 2093 00e4 20000000 		.4byte	.LFE0-.LFB0
 2094 00e8 01       		.uleb128 0x1
 2095 00e9 9C       		.byte	0x9c
 2096 00ea 06       		.uleb128 0x6
 2097 00eb 3B010000 		.4byte	.LASF20
 2098 00ef 01       		.byte	0x1
 2099 00f0 6A       		.byte	0x6a
 2100 00f1 00000000 		.4byte	.LFB1
 2101 00f5 6C000000 		.4byte	.LFE1-.LFB1
 2102 00f9 01       		.uleb128 0x1
 2103 00fa 9C       		.byte	0x9c
 2104 00fb 07       		.uleb128 0x7
 2105 00fc 3D040000 		.4byte	.LASF21
 2106 0100 01       		.byte	0x1
 2107 0101 B7       		.byte	0xb7
 2108 0102 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 66


 2109 0106 74000000 		.4byte	.LFE2-.LFB2
 2110 010a 01       		.uleb128 0x1
 2111 010b 9C       		.byte	0x9c
 2112 010c 1F010000 		.4byte	0x11f
 2113 0110 08       		.uleb128 0x8
 2114 0111 9B040000 		.4byte	.LASF23
 2115 0115 01       		.byte	0x1
 2116 0116 B9       		.byte	0xb9
 2117 0117 6B000000 		.4byte	0x6b
 2118 011b 02       		.uleb128 0x2
 2119 011c 91       		.byte	0x91
 2120 011d 77       		.sleb128 -9
 2121 011e 00       		.byte	0
 2122 011f 07       		.uleb128 0x7
 2123 0120 D5040000 		.4byte	.LASF22
 2124 0124 01       		.byte	0x1
 2125 0125 F0       		.byte	0xf0
 2126 0126 00000000 		.4byte	.LFB3
 2127 012a 68000000 		.4byte	.LFE3-.LFB3
 2128 012e 01       		.uleb128 0x1
 2129 012f 9C       		.byte	0x9c
 2130 0130 43010000 		.4byte	0x143
 2131 0134 08       		.uleb128 0x8
 2132 0135 9B040000 		.4byte	.LASF23
 2133 0139 01       		.byte	0x1
 2134 013a F2       		.byte	0xf2
 2135 013b 6B000000 		.4byte	0x6b
 2136 013f 02       		.uleb128 0x2
 2137 0140 91       		.byte	0x91
 2138 0141 77       		.sleb128 -9
 2139 0142 00       		.byte	0
 2140 0143 09       		.uleb128 0x9
 2141 0144 DD000000 		.4byte	.LASF49
 2142 0148 01       		.byte	0x1
 2143 0149 2701     		.2byte	0x127
 2144 014b 6B000000 		.4byte	0x6b
 2145 014f 00000000 		.4byte	.LFB4
 2146 0153 10000000 		.4byte	.LFE4-.LFB4
 2147 0157 01       		.uleb128 0x1
 2148 0158 9C       		.byte	0x9c
 2149 0159 0A       		.uleb128 0xa
 2150 015a 02050000 		.4byte	.LASF24
 2151 015e 01       		.byte	0x1
 2152 015f 3F01     		.2byte	0x13f
 2153 0161 00000000 		.4byte	.LFB5
 2154 0165 14000000 		.4byte	.LFE5-.LFB5
 2155 0169 01       		.uleb128 0x1
 2156 016a 9C       		.byte	0x9c
 2157 016b 7F010000 		.4byte	0x17f
 2158 016f 0B       		.uleb128 0xb
 2159 0170 23010000 		.4byte	.LASF26
 2160 0174 01       		.byte	0x1
 2161 0175 3F01     		.2byte	0x13f
 2162 0177 6B000000 		.4byte	0x6b
 2163 017b 02       		.uleb128 0x2
 2164 017c 91       		.byte	0x91
 2165 017d 77       		.sleb128 -9
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 67


 2166 017e 00       		.byte	0
 2167 017f 0A       		.uleb128 0xa
 2168 0180 66040000 		.4byte	.LASF25
 2169 0184 01       		.byte	0x1
 2170 0185 6701     		.2byte	0x167
 2171 0187 00000000 		.4byte	.LFB6
 2172 018b 20000000 		.4byte	.LFE6-.LFB6
 2173 018f 01       		.uleb128 0x1
 2174 0190 9C       		.byte	0x9c
 2175 0191 A5010000 		.4byte	0x1a5
 2176 0195 0B       		.uleb128 0xb
 2177 0196 20020000 		.4byte	.LASF27
 2178 019a 01       		.byte	0x1
 2179 019b 6701     		.2byte	0x167
 2180 019d 6B000000 		.4byte	0x6b
 2181 01a1 02       		.uleb128 0x2
 2182 01a2 91       		.byte	0x91
 2183 01a3 77       		.sleb128 -9
 2184 01a4 00       		.byte	0
 2185 01a5 0C       		.uleb128 0xc
 2186 01a6 C7000000 		.4byte	.LASF31
 2187 01aa 01       		.byte	0x1
 2188 01ab 8801     		.2byte	0x188
 2189 01ad 6B000000 		.4byte	0x6b
 2190 01b1 00000000 		.4byte	.LFB7
 2191 01b5 94000000 		.4byte	.LFE7-.LFB7
 2192 01b9 01       		.uleb128 0x1
 2193 01ba 9C       		.byte	0x9c
 2194 01bb ED010000 		.4byte	0x1ed
 2195 01bf 0D       		.uleb128 0xd
 2196 01c0 36040000 		.4byte	.LASF28
 2197 01c4 01       		.byte	0x1
 2198 01c5 8A01     		.2byte	0x18a
 2199 01c7 6B000000 		.4byte	0x6b
 2200 01cb 02       		.uleb128 0x2
 2201 01cc 91       		.byte	0x91
 2202 01cd 77       		.sleb128 -9
 2203 01ce 0D       		.uleb128 0xd
 2204 01cf 8B040000 		.4byte	.LASF29
 2205 01d3 01       		.byte	0x1
 2206 01d4 8E01     		.2byte	0x18e
 2207 01d6 6B000000 		.4byte	0x6b
 2208 01da 02       		.uleb128 0x2
 2209 01db 91       		.byte	0x91
 2210 01dc 76       		.sleb128 -10
 2211 01dd 0D       		.uleb128 0xd
 2212 01de 4F020000 		.4byte	.LASF30
 2213 01e2 01       		.byte	0x1
 2214 01e3 8F01     		.2byte	0x18f
 2215 01e5 6B000000 		.4byte	0x6b
 2216 01e9 02       		.uleb128 0x2
 2217 01ea 91       		.byte	0x91
 2218 01eb 75       		.sleb128 -11
 2219 01ec 00       		.byte	0
 2220 01ed 0C       		.uleb128 0xc
 2221 01ee 49040000 		.4byte	.LASF32
 2222 01f2 01       		.byte	0x1
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 68


 2223 01f3 E501     		.2byte	0x1e5
 2224 01f5 6B000000 		.4byte	0x6b
 2225 01f9 00000000 		.4byte	.LFB8
 2226 01fd 40000000 		.4byte	.LFE8-.LFB8
 2227 0201 01       		.uleb128 0x1
 2228 0202 9C       		.byte	0x9c
 2229 0203 17020000 		.4byte	0x217
 2230 0207 0D       		.uleb128 0xd
 2231 0208 CE040000 		.4byte	.LASF33
 2232 020c 01       		.byte	0x1
 2233 020d E701     		.2byte	0x1e7
 2234 020f 6B000000 		.4byte	0x6b
 2235 0213 02       		.uleb128 0x2
 2236 0214 91       		.byte	0x91
 2237 0215 77       		.sleb128 -9
 2238 0216 00       		.byte	0
 2239 0217 0C       		.uleb128 0xc
 2240 0218 7E040000 		.4byte	.LASF34
 2241 021c 01       		.byte	0x1
 2242 021d 1402     		.2byte	0x214
 2243 021f 6B000000 		.4byte	0x6b
 2244 0223 00000000 		.4byte	.LFB9
 2245 0227 B8000000 		.4byte	.LFE9-.LFB9
 2246 022b 01       		.uleb128 0x1
 2247 022c 9C       		.byte	0x9c
 2248 022d 6E020000 		.4byte	0x26e
 2249 0231 0D       		.uleb128 0xd
 2250 0232 36040000 		.4byte	.LASF28
 2251 0236 01       		.byte	0x1
 2252 0237 1602     		.2byte	0x216
 2253 0239 6B000000 		.4byte	0x6b
 2254 023d 02       		.uleb128 0x2
 2255 023e 91       		.byte	0x91
 2256 023f 77       		.sleb128 -9
 2257 0240 0D       		.uleb128 0xd
 2258 0241 33030000 		.4byte	.LASF35
 2259 0245 01       		.byte	0x1
 2260 0246 1702     		.2byte	0x217
 2261 0248 6B000000 		.4byte	0x6b
 2262 024c 02       		.uleb128 0x2
 2263 024d 91       		.byte	0x91
 2264 024e 74       		.sleb128 -12
 2265 024f 0D       		.uleb128 0xd
 2266 0250 8B040000 		.4byte	.LASF29
 2267 0254 01       		.byte	0x1
 2268 0255 1A02     		.2byte	0x21a
 2269 0257 6B000000 		.4byte	0x6b
 2270 025b 02       		.uleb128 0x2
 2271 025c 91       		.byte	0x91
 2272 025d 76       		.sleb128 -10
 2273 025e 0D       		.uleb128 0xd
 2274 025f 4F020000 		.4byte	.LASF30
 2275 0263 01       		.byte	0x1
 2276 0264 1B02     		.2byte	0x21b
 2277 0266 6B000000 		.4byte	0x6b
 2278 026a 02       		.uleb128 0x2
 2279 026b 91       		.byte	0x91
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 69


 2280 026c 75       		.sleb128 -11
 2281 026d 00       		.byte	0
 2282 026e 0E       		.uleb128 0xe
 2283 026f 5B010000 		.4byte	.LASF36
 2284 0273 01       		.byte	0x1
 2285 0274 7A02     		.2byte	0x27a
 2286 0276 77000000 		.4byte	0x77
 2287 027a 00000000 		.4byte	.LFB10
 2288 027e 44000000 		.4byte	.LFE10-.LFB10
 2289 0282 01       		.uleb128 0x1
 2290 0283 9C       		.byte	0x9c
 2291 0284 98020000 		.4byte	0x298
 2292 0288 0D       		.uleb128 0xd
 2293 0289 95010000 		.4byte	.LASF37
 2294 028d 01       		.byte	0x1
 2295 028e 7E02     		.2byte	0x27e
 2296 0290 77000000 		.4byte	0x77
 2297 0294 02       		.uleb128 0x2
 2298 0295 91       		.byte	0x91
 2299 0296 6E       		.sleb128 -18
 2300 0297 00       		.byte	0
 2301 0298 0C       		.uleb128 0xc
 2302 0299 B9040000 		.4byte	.LASF38
 2303 029d 01       		.byte	0x1
 2304 029e AB02     		.2byte	0x2ab
 2305 02a0 6B000000 		.4byte	0x6b
 2306 02a4 00000000 		.4byte	.LFB11
 2307 02a8 90000000 		.4byte	.LFE11-.LFB11
 2308 02ac 01       		.uleb128 0x1
 2309 02ad 9C       		.byte	0x9c
 2310 02ae C2020000 		.4byte	0x2c2
 2311 02b2 0D       		.uleb128 0xd
 2312 02b3 ED010000 		.4byte	.LASF39
 2313 02b7 01       		.byte	0x1
 2314 02b8 AE02     		.2byte	0x2ae
 2315 02ba 6B000000 		.4byte	0x6b
 2316 02be 02       		.uleb128 0x2
 2317 02bf 91       		.byte	0x91
 2318 02c0 77       		.sleb128 -9
 2319 02c1 00       		.byte	0
 2320 02c2 0F       		.uleb128 0xf
 2321 02c3 1C050000 		.4byte	.LASF40
 2322 02c7 01       		.byte	0x1
 2323 02c8 F502     		.2byte	0x2f5
 2324 02ca 00000000 		.4byte	.LFB12
 2325 02ce 7C000000 		.4byte	.LFE12-.LFB12
 2326 02d2 01       		.uleb128 0x1
 2327 02d3 9C       		.byte	0x9c
 2328 02d4 E8020000 		.4byte	0x2e8
 2329 02d8 0D       		.uleb128 0xd
 2330 02d9 9B040000 		.4byte	.LASF23
 2331 02dd 01       		.byte	0x1
 2332 02de F702     		.2byte	0x2f7
 2333 02e0 6B000000 		.4byte	0x6b
 2334 02e4 02       		.uleb128 0x2
 2335 02e5 91       		.byte	0x91
 2336 02e6 77       		.sleb128 -9
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 70


 2337 02e7 00       		.byte	0
 2338 02e8 0A       		.uleb128 0xa
 2339 02e9 85030000 		.4byte	.LASF41
 2340 02ed 01       		.byte	0x1
 2341 02ee 2D03     		.2byte	0x32d
 2342 02f0 00000000 		.4byte	.LFB13
 2343 02f4 14000000 		.4byte	.LFE13-.LFB13
 2344 02f8 01       		.uleb128 0x1
 2345 02f9 9C       		.byte	0x9c
 2346 02fa 0E030000 		.4byte	0x30e
 2347 02fe 0B       		.uleb128 0xb
 2348 02ff FD000000 		.4byte	.LASF42
 2349 0303 01       		.byte	0x1
 2350 0304 2D03     		.2byte	0x32d
 2351 0306 6B000000 		.4byte	0x6b
 2352 030a 02       		.uleb128 0x2
 2353 030b 91       		.byte	0x91
 2354 030c 77       		.sleb128 -9
 2355 030d 00       		.byte	0
 2356 030e 0A       		.uleb128 0xa
 2357 030f 7F020000 		.4byte	.LASF43
 2358 0313 01       		.byte	0x1
 2359 0314 5903     		.2byte	0x359
 2360 0316 00000000 		.4byte	.LFB14
 2361 031a 20000000 		.4byte	.LFE14-.LFB14
 2362 031e 01       		.uleb128 0x1
 2363 031f 9C       		.byte	0x9c
 2364 0320 34030000 		.4byte	0x334
 2365 0324 0B       		.uleb128 0xb
 2366 0325 77020000 		.4byte	.LASF44
 2367 0329 01       		.byte	0x1
 2368 032a 5903     		.2byte	0x359
 2369 032c 6B000000 		.4byte	0x6b
 2370 0330 02       		.uleb128 0x2
 2371 0331 91       		.byte	0x91
 2372 0332 77       		.sleb128 -9
 2373 0333 00       		.byte	0
 2374 0334 0A       		.uleb128 0xa
 2375 0335 92020000 		.4byte	.LASF45
 2376 0339 01       		.byte	0x1
 2377 033a 6D03     		.2byte	0x36d
 2378 033c 00000000 		.4byte	.LFB15
 2379 0340 20000000 		.4byte	.LFE15-.LFB15
 2380 0344 01       		.uleb128 0x1
 2381 0345 9C       		.byte	0x9c
 2382 0346 5A030000 		.4byte	0x35a
 2383 034a 0B       		.uleb128 0xb
 2384 034b 77020000 		.4byte	.LASF44
 2385 034f 01       		.byte	0x1
 2386 0350 6D03     		.2byte	0x36d
 2387 0352 6B000000 		.4byte	0x6b
 2388 0356 02       		.uleb128 0x2
 2389 0357 91       		.byte	0x91
 2390 0358 77       		.sleb128 -9
 2391 0359 00       		.byte	0
 2392 035a 0A       		.uleb128 0xa
 2393 035b 4E000000 		.4byte	.LASF46
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 71


 2394 035f 01       		.byte	0x1
 2395 0360 8C03     		.2byte	0x38c
 2396 0362 00000000 		.4byte	.LFB16
 2397 0366 20000000 		.4byte	.LFE16-.LFB16
 2398 036a 01       		.uleb128 0x1
 2399 036b 9C       		.byte	0x9c
 2400 036c 80030000 		.4byte	0x380
 2401 0370 0B       		.uleb128 0xb
 2402 0371 20020000 		.4byte	.LASF27
 2403 0375 01       		.byte	0x1
 2404 0376 8C03     		.2byte	0x38c
 2405 0378 6B000000 		.4byte	0x6b
 2406 037c 02       		.uleb128 0x2
 2407 037d 91       		.byte	0x91
 2408 037e 77       		.sleb128 -9
 2409 037f 00       		.byte	0
 2410 0380 0A       		.uleb128 0xa
 2411 0381 A9030000 		.4byte	.LASF47
 2412 0385 01       		.byte	0x1
 2413 0386 AE03     		.2byte	0x3ae
 2414 0388 00000000 		.4byte	.LFB17
 2415 038c 94000000 		.4byte	.LFE17-.LFB17
 2416 0390 01       		.uleb128 0x1
 2417 0391 9C       		.byte	0x9c
 2418 0392 A6030000 		.4byte	0x3a6
 2419 0396 0B       		.uleb128 0xb
 2420 0397 07000000 		.4byte	.LASF48
 2421 039b 01       		.byte	0x1
 2422 039c AE03     		.2byte	0x3ae
 2423 039e 6B000000 		.4byte	0x6b
 2424 03a2 02       		.uleb128 0x2
 2425 03a3 91       		.byte	0x91
 2426 03a4 77       		.sleb128 -9
 2427 03a5 00       		.byte	0
 2428 03a6 09       		.uleb128 0x9
 2429 03a7 3D020000 		.4byte	.LASF50
 2430 03ab 01       		.byte	0x1
 2431 03ac EB03     		.2byte	0x3eb
 2432 03ae 6B000000 		.4byte	0x6b
 2433 03b2 00000000 		.4byte	.LFB18
 2434 03b6 18000000 		.4byte	.LFE18-.LFB18
 2435 03ba 01       		.uleb128 0x1
 2436 03bb 9C       		.byte	0x9c
 2437 03bc 0A       		.uleb128 0xa
 2438 03bd BA000000 		.4byte	.LASF51
 2439 03c1 01       		.byte	0x1
 2440 03c2 1104     		.2byte	0x411
 2441 03c4 00000000 		.4byte	.LFB19
 2442 03c8 B8000000 		.4byte	.LFE19-.LFB19
 2443 03cc 01       		.uleb128 0x1
 2444 03cd 9C       		.byte	0x9c
 2445 03ce 00040000 		.4byte	0x400
 2446 03d2 0B       		.uleb128 0xb
 2447 03d3 07000000 		.4byte	.LASF48
 2448 03d7 01       		.byte	0x1
 2449 03d8 1104     		.2byte	0x411
 2450 03da 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 72


 2451 03de 02       		.uleb128 0x2
 2452 03df 91       		.byte	0x91
 2453 03e0 6F       		.sleb128 -17
 2454 03e1 0D       		.uleb128 0xd
 2455 03e2 B6010000 		.4byte	.LASF52
 2456 03e6 01       		.byte	0x1
 2457 03e7 1804     		.2byte	0x418
 2458 03e9 6B000000 		.4byte	0x6b
 2459 03ed 02       		.uleb128 0x2
 2460 03ee 91       		.byte	0x91
 2461 03ef 77       		.sleb128 -9
 2462 03f0 0D       		.uleb128 0xd
 2463 03f1 2B010000 		.4byte	.LASF53
 2464 03f5 01       		.byte	0x1
 2465 03f6 1904     		.2byte	0x419
 2466 03f8 6B000000 		.4byte	0x6b
 2467 03fc 02       		.uleb128 0x2
 2468 03fd 91       		.byte	0x91
 2469 03fe 76       		.sleb128 -10
 2470 03ff 00       		.byte	0
 2471 0400 0F       		.uleb128 0xf
 2472 0401 F3040000 		.4byte	.LASF54
 2473 0405 01       		.byte	0x1
 2474 0406 7904     		.2byte	0x479
 2475 0408 00000000 		.4byte	.LFB20
 2476 040c 40000000 		.4byte	.LFE20-.LFB20
 2477 0410 01       		.uleb128 0x1
 2478 0411 9C       		.byte	0x9c
 2479 0412 35040000 		.4byte	0x435
 2480 0416 0B       		.uleb128 0xb
 2481 0417 25000000 		.4byte	.LASF55
 2482 041b 01       		.byte	0x1
 2483 041c 7904     		.2byte	0x479
 2484 041e 35040000 		.4byte	0x435
 2485 0422 02       		.uleb128 0x2
 2486 0423 91       		.byte	0x91
 2487 0424 6C       		.sleb128 -20
 2488 0425 0D       		.uleb128 0xd
 2489 0426 17020000 		.4byte	.LASF56
 2490 042a 01       		.byte	0x1
 2491 042b 7B04     		.2byte	0x47b
 2492 042d 77000000 		.4byte	0x77
 2493 0431 02       		.uleb128 0x2
 2494 0432 91       		.byte	0x91
 2495 0433 76       		.sleb128 -10
 2496 0434 00       		.byte	0
 2497 0435 10       		.uleb128 0x10
 2498 0436 04       		.byte	0x4
 2499 0437 3B040000 		.4byte	0x43b
 2500 043b 11       		.uleb128 0x11
 2501 043c 9D000000 		.4byte	0x9d
 2502 0440 0F       		.uleb128 0xf
 2503 0441 C7010000 		.4byte	.LASF57
 2504 0445 01       		.byte	0x1
 2505 0446 A704     		.2byte	0x4a7
 2506 0448 00000000 		.4byte	.LFB21
 2507 044c 40000000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 73


 2508 0450 01       		.uleb128 0x1
 2509 0451 9C       		.byte	0x9c
 2510 0452 84040000 		.4byte	0x484
 2511 0456 0B       		.uleb128 0xb
 2512 0457 25000000 		.4byte	.LASF55
 2513 045b 01       		.byte	0x1
 2514 045c A704     		.2byte	0x4a7
 2515 045e 84040000 		.4byte	0x484
 2516 0462 02       		.uleb128 0x2
 2517 0463 91       		.byte	0x91
 2518 0464 6C       		.sleb128 -20
 2519 0465 0B       		.uleb128 0xb
 2520 0466 2C040000 		.4byte	.LASF58
 2521 046a 01       		.byte	0x1
 2522 046b A704     		.2byte	0x4a7
 2523 046d 6B000000 		.4byte	0x6b
 2524 0471 02       		.uleb128 0x2
 2525 0472 91       		.byte	0x91
 2526 0473 6B       		.sleb128 -21
 2527 0474 0D       		.uleb128 0xd
 2528 0475 17020000 		.4byte	.LASF56
 2529 0479 01       		.byte	0x1
 2530 047a AA04     		.2byte	0x4aa
 2531 047c 6B000000 		.4byte	0x6b
 2532 0480 02       		.uleb128 0x2
 2533 0481 91       		.byte	0x91
 2534 0482 77       		.sleb128 -9
 2535 0483 00       		.byte	0
 2536 0484 10       		.uleb128 0x10
 2537 0485 04       		.byte	0x4
 2538 0486 8A040000 		.4byte	0x48a
 2539 048a 11       		.uleb128 0x11
 2540 048b 6B000000 		.4byte	0x6b
 2541 048f 0F       		.uleb128 0xf
 2542 0490 88010000 		.4byte	.LASF59
 2543 0494 01       		.byte	0x1
 2544 0495 CE04     		.2byte	0x4ce
 2545 0497 00000000 		.4byte	.LFB22
 2546 049b 30000000 		.4byte	.LFE22-.LFB22
 2547 049f 01       		.uleb128 0x1
 2548 04a0 9C       		.byte	0x9c
 2549 04a1 B5040000 		.4byte	0x4b5
 2550 04a5 0B       		.uleb128 0xb
 2551 04a6 07000000 		.4byte	.LASF48
 2552 04aa 01       		.byte	0x1
 2553 04ab CE04     		.2byte	0x4ce
 2554 04ad 6B000000 		.4byte	0x6b
 2555 04b1 02       		.uleb128 0x2
 2556 04b2 91       		.byte	0x91
 2557 04b3 77       		.sleb128 -9
 2558 04b4 00       		.byte	0
 2559 04b5 0C       		.uleb128 0xc
 2560 04b6 6B030000 		.4byte	.LASF60
 2561 04ba 01       		.byte	0x1
 2562 04bb F904     		.2byte	0x4f9
 2563 04bd 6B000000 		.4byte	0x6b
 2564 04c1 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 74


 2565 04c5 74000000 		.4byte	.LFE23-.LFB23
 2566 04c9 01       		.uleb128 0x1
 2567 04ca 9C       		.byte	0x9c
 2568 04cb DF040000 		.4byte	0x4df
 2569 04cf 0D       		.uleb128 0xd
 2570 04d0 ED010000 		.4byte	.LASF39
 2571 04d4 01       		.byte	0x1
 2572 04d5 FC04     		.2byte	0x4fc
 2573 04d7 6B000000 		.4byte	0x6b
 2574 04db 02       		.uleb128 0x2
 2575 04dc 91       		.byte	0x91
 2576 04dd 77       		.sleb128 -9
 2577 04de 00       		.byte	0
 2578 04df 0F       		.uleb128 0xf
 2579 04e0 75010000 		.4byte	.LASF61
 2580 04e4 01       		.byte	0x1
 2581 04e5 4A05     		.2byte	0x54a
 2582 04e7 00000000 		.4byte	.LFB24
 2583 04eb 68000000 		.4byte	.LFE24-.LFB24
 2584 04ef 01       		.uleb128 0x1
 2585 04f0 9C       		.byte	0x9c
 2586 04f1 05050000 		.4byte	0x505
 2587 04f5 0D       		.uleb128 0xd
 2588 04f6 9B040000 		.4byte	.LASF23
 2589 04fa 01       		.byte	0x1
 2590 04fb 4C05     		.2byte	0x54c
 2591 04fd 6B000000 		.4byte	0x6b
 2592 0501 02       		.uleb128 0x2
 2593 0502 91       		.byte	0x91
 2594 0503 77       		.sleb128 -9
 2595 0504 00       		.byte	0
 2596 0505 0A       		.uleb128 0xa
 2597 0506 1D040000 		.4byte	.LASF62
 2598 050a 01       		.byte	0x1
 2599 050b A005     		.2byte	0x5a0
 2600 050d 00000000 		.4byte	.LFB25
 2601 0511 9C000000 		.4byte	.LFE25-.LFB25
 2602 0515 01       		.uleb128 0x1
 2603 0516 9C       		.byte	0x9c
 2604 0517 56050000 		.4byte	0x556
 2605 051b 0B       		.uleb128 0xb
 2606 051c 53010000 		.4byte	.LASF63
 2607 0520 01       		.byte	0x1
 2608 0521 A005     		.2byte	0x5a0
 2609 0523 6B000000 		.4byte	0x6b
 2610 0527 02       		.uleb128 0x2
 2611 0528 91       		.byte	0x91
 2612 0529 6F       		.sleb128 -17
 2613 052a 12       		.uleb128 0x12
 2614 052b 12000000 		.4byte	.LBB2
 2615 052f 6C000000 		.4byte	.LBE2-.LBB2
 2616 0533 0D       		.uleb128 0xd
 2617 0534 66020000 		.4byte	.LASF64
 2618 0538 01       		.byte	0x1
 2619 0539 A805     		.2byte	0x5a8
 2620 053b 6B000000 		.4byte	0x6b
 2621 053f 02       		.uleb128 0x2
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 75


 2622 0540 91       		.byte	0x91
 2623 0541 77       		.sleb128 -9
 2624 0542 0D       		.uleb128 0xd
 2625 0543 A8000000 		.4byte	.LASF65
 2626 0547 01       		.byte	0x1
 2627 0548 D005     		.2byte	0x5d0
 2628 054a 6B000000 		.4byte	0x6b
 2629 054e 05       		.uleb128 0x5
 2630 054f 03       		.byte	0x3
 2631 0550 08000000 		.4byte	txPeriod.4998
 2632 0554 00       		.byte	0
 2633 0555 00       		.byte	0
 2634 0556 0A       		.uleb128 0xa
 2635 0557 27020000 		.4byte	.LASF66
 2636 055b 01       		.byte	0x1
 2637 055c 2406     		.2byte	0x624
 2638 055e 00000000 		.4byte	.LFB26
 2639 0562 14000000 		.4byte	.LFE26-.LFB26
 2640 0566 01       		.uleb128 0x1
 2641 0567 9C       		.byte	0x9c
 2642 0568 7C050000 		.4byte	0x57c
 2643 056c 0B       		.uleb128 0xb
 2644 056d FD000000 		.4byte	.LASF42
 2645 0571 01       		.byte	0x1
 2646 0572 2406     		.2byte	0x624
 2647 0574 6B000000 		.4byte	0x6b
 2648 0578 02       		.uleb128 0x2
 2649 0579 91       		.byte	0x91
 2650 057a 77       		.sleb128 -9
 2651 057b 00       		.byte	0
 2652 057c 13       		.uleb128 0x13
 2653 057d AC040000 		.4byte	.LASF67
 2654 0581 01       		.byte	0x1
 2655 0582 1B       		.byte	0x1b
 2656 0583 6B000000 		.4byte	0x6b
 2657 0587 05       		.uleb128 0x5
 2658 0588 03       		.byte	0x3
 2659 0589 00000000 		.4byte	UART_initVar
 2660 058d 14       		.uleb128 0x14
 2661 058e 6B000000 		.4byte	0x6b
 2662 0592 9D050000 		.4byte	0x59d
 2663 0596 15       		.uleb128 0x15
 2664 0597 D2000000 		.4byte	0xd2
 2665 059b 3F       		.byte	0x3f
 2666 059c 00       		.byte	0
 2667 059d 13       		.uleb128 0x13
 2668 059e 45010000 		.4byte	.LASF68
 2669 05a2 01       		.byte	0x1
 2670 05a3 1E       		.byte	0x1e
 2671 05a4 AE050000 		.4byte	0x5ae
 2672 05a8 05       		.uleb128 0x5
 2673 05a9 03       		.byte	0x3
 2674 05aa 00000000 		.4byte	UART_txBuffer
 2675 05ae 05       		.uleb128 0x5
 2676 05af 8D050000 		.4byte	0x58d
 2677 05b3 13       		.uleb128 0x13
 2678 05b4 7C000000 		.4byte	.LASF69
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 76


 2679 05b8 01       		.byte	0x1
 2680 05b9 1F       		.byte	0x1f
 2681 05ba BC000000 		.4byte	0xbc
 2682 05be 05       		.uleb128 0x5
 2683 05bf 03       		.byte	0x3
 2684 05c0 00000000 		.4byte	UART_txBufferRead
 2685 05c4 13       		.uleb128 0x13
 2686 05c5 12000000 		.4byte	.LASF70
 2687 05c9 01       		.byte	0x1
 2688 05ca 20       		.byte	0x20
 2689 05cb 6B000000 		.4byte	0x6b
 2690 05cf 05       		.uleb128 0x5
 2691 05d0 03       		.byte	0x3
 2692 05d1 00000000 		.4byte	UART_txBufferWrite
 2693 05d5 13       		.uleb128 0x13
 2694 05d6 3C030000 		.4byte	.LASF71
 2695 05da 01       		.byte	0x1
 2696 05db 24       		.byte	0x24
 2697 05dc 6B000000 		.4byte	0x6b
 2698 05e0 05       		.uleb128 0x5
 2699 05e1 03       		.byte	0x3
 2700 05e2 00000000 		.4byte	UART_errorStatus
 2701 05e6 13       		.uleb128 0x13
 2702 05e7 DF040000 		.4byte	.LASF72
 2703 05eb 01       		.byte	0x1
 2704 05ec 25       		.byte	0x25
 2705 05ed F7050000 		.4byte	0x5f7
 2706 05f1 05       		.uleb128 0x5
 2707 05f2 03       		.byte	0x3
 2708 05f3 00000000 		.4byte	UART_rxBuffer
 2709 05f7 05       		.uleb128 0x5
 2710 05f8 8D050000 		.4byte	0x58d
 2711 05fc 13       		.uleb128 0x13
 2712 05fd 05020000 		.4byte	.LASF73
 2713 0601 01       		.byte	0x1
 2714 0602 26       		.byte	0x26
 2715 0603 BC000000 		.4byte	0xbc
 2716 0607 05       		.uleb128 0x5
 2717 0608 03       		.byte	0x3
 2718 0609 00000000 		.4byte	UART_rxBufferRead
 2719 060d 13       		.uleb128 0x13
 2720 060e 09010000 		.4byte	.LASF74
 2721 0612 01       		.byte	0x1
 2722 0613 27       		.byte	0x27
 2723 0614 BC000000 		.4byte	0xbc
 2724 0618 05       		.uleb128 0x5
 2725 0619 03       		.byte	0x3
 2726 061a 00000000 		.4byte	UART_rxBufferWrite
 2727 061e 13       		.uleb128 0x13
 2728 061f D5010000 		.4byte	.LASF75
 2729 0623 01       		.byte	0x1
 2730 0624 28       		.byte	0x28
 2731 0625 BC000000 		.4byte	0xbc
 2732 0629 05       		.uleb128 0x5
 2733 062a 03       		.byte	0x3
 2734 062b 00000000 		.4byte	UART_rxBufferLoopDetect
 2735 062f 13       		.uleb128 0x13
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 77


 2736 0630 66000000 		.4byte	.LASF76
 2737 0634 01       		.byte	0x1
 2738 0635 29       		.byte	0x29
 2739 0636 BC000000 		.4byte	0xbc
 2740 063a 05       		.uleb128 0x5
 2741 063b 03       		.byte	0x3
 2742 063c 00000000 		.4byte	UART_rxBufferOverflow
 2743 0640 00       		.byte	0
 2744              		.section	.debug_abbrev,"",%progbits
 2745              	.Ldebug_abbrev0:
 2746 0000 01       		.uleb128 0x1
 2747 0001 11       		.uleb128 0x11
 2748 0002 01       		.byte	0x1
 2749 0003 25       		.uleb128 0x25
 2750 0004 0E       		.uleb128 0xe
 2751 0005 13       		.uleb128 0x13
 2752 0006 0B       		.uleb128 0xb
 2753 0007 03       		.uleb128 0x3
 2754 0008 0E       		.uleb128 0xe
 2755 0009 1B       		.uleb128 0x1b
 2756 000a 0E       		.uleb128 0xe
 2757 000b 55       		.uleb128 0x55
 2758 000c 17       		.uleb128 0x17
 2759 000d 11       		.uleb128 0x11
 2760 000e 01       		.uleb128 0x1
 2761 000f 10       		.uleb128 0x10
 2762 0010 17       		.uleb128 0x17
 2763 0011 00       		.byte	0
 2764 0012 00       		.byte	0
 2765 0013 02       		.uleb128 0x2
 2766 0014 24       		.uleb128 0x24
 2767 0015 00       		.byte	0
 2768 0016 0B       		.uleb128 0xb
 2769 0017 0B       		.uleb128 0xb
 2770 0018 3E       		.uleb128 0x3e
 2771 0019 0B       		.uleb128 0xb
 2772 001a 03       		.uleb128 0x3
 2773 001b 0E       		.uleb128 0xe
 2774 001c 00       		.byte	0
 2775 001d 00       		.byte	0
 2776 001e 03       		.uleb128 0x3
 2777 001f 24       		.uleb128 0x24
 2778 0020 00       		.byte	0
 2779 0021 0B       		.uleb128 0xb
 2780 0022 0B       		.uleb128 0xb
 2781 0023 3E       		.uleb128 0x3e
 2782 0024 0B       		.uleb128 0xb
 2783 0025 03       		.uleb128 0x3
 2784 0026 08       		.uleb128 0x8
 2785 0027 00       		.byte	0
 2786 0028 00       		.byte	0
 2787 0029 04       		.uleb128 0x4
 2788 002a 16       		.uleb128 0x16
 2789 002b 00       		.byte	0
 2790 002c 03       		.uleb128 0x3
 2791 002d 0E       		.uleb128 0xe
 2792 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 78


 2793 002f 0B       		.uleb128 0xb
 2794 0030 3B       		.uleb128 0x3b
 2795 0031 05       		.uleb128 0x5
 2796 0032 49       		.uleb128 0x49
 2797 0033 13       		.uleb128 0x13
 2798 0034 00       		.byte	0
 2799 0035 00       		.byte	0
 2800 0036 05       		.uleb128 0x5
 2801 0037 35       		.uleb128 0x35
 2802 0038 00       		.byte	0
 2803 0039 49       		.uleb128 0x49
 2804 003a 13       		.uleb128 0x13
 2805 003b 00       		.byte	0
 2806 003c 00       		.byte	0
 2807 003d 06       		.uleb128 0x6
 2808 003e 2E       		.uleb128 0x2e
 2809 003f 00       		.byte	0
 2810 0040 3F       		.uleb128 0x3f
 2811 0041 19       		.uleb128 0x19
 2812 0042 03       		.uleb128 0x3
 2813 0043 0E       		.uleb128 0xe
 2814 0044 3A       		.uleb128 0x3a
 2815 0045 0B       		.uleb128 0xb
 2816 0046 3B       		.uleb128 0x3b
 2817 0047 0B       		.uleb128 0xb
 2818 0048 27       		.uleb128 0x27
 2819 0049 19       		.uleb128 0x19
 2820 004a 11       		.uleb128 0x11
 2821 004b 01       		.uleb128 0x1
 2822 004c 12       		.uleb128 0x12
 2823 004d 06       		.uleb128 0x6
 2824 004e 40       		.uleb128 0x40
 2825 004f 18       		.uleb128 0x18
 2826 0050 9642     		.uleb128 0x2116
 2827 0052 19       		.uleb128 0x19
 2828 0053 00       		.byte	0
 2829 0054 00       		.byte	0
 2830 0055 07       		.uleb128 0x7
 2831 0056 2E       		.uleb128 0x2e
 2832 0057 01       		.byte	0x1
 2833 0058 3F       		.uleb128 0x3f
 2834 0059 19       		.uleb128 0x19
 2835 005a 03       		.uleb128 0x3
 2836 005b 0E       		.uleb128 0xe
 2837 005c 3A       		.uleb128 0x3a
 2838 005d 0B       		.uleb128 0xb
 2839 005e 3B       		.uleb128 0x3b
 2840 005f 0B       		.uleb128 0xb
 2841 0060 27       		.uleb128 0x27
 2842 0061 19       		.uleb128 0x19
 2843 0062 11       		.uleb128 0x11
 2844 0063 01       		.uleb128 0x1
 2845 0064 12       		.uleb128 0x12
 2846 0065 06       		.uleb128 0x6
 2847 0066 40       		.uleb128 0x40
 2848 0067 18       		.uleb128 0x18
 2849 0068 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 79


 2850 006a 19       		.uleb128 0x19
 2851 006b 01       		.uleb128 0x1
 2852 006c 13       		.uleb128 0x13
 2853 006d 00       		.byte	0
 2854 006e 00       		.byte	0
 2855 006f 08       		.uleb128 0x8
 2856 0070 34       		.uleb128 0x34
 2857 0071 00       		.byte	0
 2858 0072 03       		.uleb128 0x3
 2859 0073 0E       		.uleb128 0xe
 2860 0074 3A       		.uleb128 0x3a
 2861 0075 0B       		.uleb128 0xb
 2862 0076 3B       		.uleb128 0x3b
 2863 0077 0B       		.uleb128 0xb
 2864 0078 49       		.uleb128 0x49
 2865 0079 13       		.uleb128 0x13
 2866 007a 02       		.uleb128 0x2
 2867 007b 18       		.uleb128 0x18
 2868 007c 00       		.byte	0
 2869 007d 00       		.byte	0
 2870 007e 09       		.uleb128 0x9
 2871 007f 2E       		.uleb128 0x2e
 2872 0080 00       		.byte	0
 2873 0081 3F       		.uleb128 0x3f
 2874 0082 19       		.uleb128 0x19
 2875 0083 03       		.uleb128 0x3
 2876 0084 0E       		.uleb128 0xe
 2877 0085 3A       		.uleb128 0x3a
 2878 0086 0B       		.uleb128 0xb
 2879 0087 3B       		.uleb128 0x3b
 2880 0088 05       		.uleb128 0x5
 2881 0089 27       		.uleb128 0x27
 2882 008a 19       		.uleb128 0x19
 2883 008b 49       		.uleb128 0x49
 2884 008c 13       		.uleb128 0x13
 2885 008d 11       		.uleb128 0x11
 2886 008e 01       		.uleb128 0x1
 2887 008f 12       		.uleb128 0x12
 2888 0090 06       		.uleb128 0x6
 2889 0091 40       		.uleb128 0x40
 2890 0092 18       		.uleb128 0x18
 2891 0093 9742     		.uleb128 0x2117
 2892 0095 19       		.uleb128 0x19
 2893 0096 00       		.byte	0
 2894 0097 00       		.byte	0
 2895 0098 0A       		.uleb128 0xa
 2896 0099 2E       		.uleb128 0x2e
 2897 009a 01       		.byte	0x1
 2898 009b 3F       		.uleb128 0x3f
 2899 009c 19       		.uleb128 0x19
 2900 009d 03       		.uleb128 0x3
 2901 009e 0E       		.uleb128 0xe
 2902 009f 3A       		.uleb128 0x3a
 2903 00a0 0B       		.uleb128 0xb
 2904 00a1 3B       		.uleb128 0x3b
 2905 00a2 05       		.uleb128 0x5
 2906 00a3 27       		.uleb128 0x27
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 80


 2907 00a4 19       		.uleb128 0x19
 2908 00a5 11       		.uleb128 0x11
 2909 00a6 01       		.uleb128 0x1
 2910 00a7 12       		.uleb128 0x12
 2911 00a8 06       		.uleb128 0x6
 2912 00a9 40       		.uleb128 0x40
 2913 00aa 18       		.uleb128 0x18
 2914 00ab 9742     		.uleb128 0x2117
 2915 00ad 19       		.uleb128 0x19
 2916 00ae 01       		.uleb128 0x1
 2917 00af 13       		.uleb128 0x13
 2918 00b0 00       		.byte	0
 2919 00b1 00       		.byte	0
 2920 00b2 0B       		.uleb128 0xb
 2921 00b3 05       		.uleb128 0x5
 2922 00b4 00       		.byte	0
 2923 00b5 03       		.uleb128 0x3
 2924 00b6 0E       		.uleb128 0xe
 2925 00b7 3A       		.uleb128 0x3a
 2926 00b8 0B       		.uleb128 0xb
 2927 00b9 3B       		.uleb128 0x3b
 2928 00ba 05       		.uleb128 0x5
 2929 00bb 49       		.uleb128 0x49
 2930 00bc 13       		.uleb128 0x13
 2931 00bd 02       		.uleb128 0x2
 2932 00be 18       		.uleb128 0x18
 2933 00bf 00       		.byte	0
 2934 00c0 00       		.byte	0
 2935 00c1 0C       		.uleb128 0xc
 2936 00c2 2E       		.uleb128 0x2e
 2937 00c3 01       		.byte	0x1
 2938 00c4 3F       		.uleb128 0x3f
 2939 00c5 19       		.uleb128 0x19
 2940 00c6 03       		.uleb128 0x3
 2941 00c7 0E       		.uleb128 0xe
 2942 00c8 3A       		.uleb128 0x3a
 2943 00c9 0B       		.uleb128 0xb
 2944 00ca 3B       		.uleb128 0x3b
 2945 00cb 05       		.uleb128 0x5
 2946 00cc 27       		.uleb128 0x27
 2947 00cd 19       		.uleb128 0x19
 2948 00ce 49       		.uleb128 0x49
 2949 00cf 13       		.uleb128 0x13
 2950 00d0 11       		.uleb128 0x11
 2951 00d1 01       		.uleb128 0x1
 2952 00d2 12       		.uleb128 0x12
 2953 00d3 06       		.uleb128 0x6
 2954 00d4 40       		.uleb128 0x40
 2955 00d5 18       		.uleb128 0x18
 2956 00d6 9742     		.uleb128 0x2117
 2957 00d8 19       		.uleb128 0x19
 2958 00d9 01       		.uleb128 0x1
 2959 00da 13       		.uleb128 0x13
 2960 00db 00       		.byte	0
 2961 00dc 00       		.byte	0
 2962 00dd 0D       		.uleb128 0xd
 2963 00de 34       		.uleb128 0x34
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 81


 2964 00df 00       		.byte	0
 2965 00e0 03       		.uleb128 0x3
 2966 00e1 0E       		.uleb128 0xe
 2967 00e2 3A       		.uleb128 0x3a
 2968 00e3 0B       		.uleb128 0xb
 2969 00e4 3B       		.uleb128 0x3b
 2970 00e5 05       		.uleb128 0x5
 2971 00e6 49       		.uleb128 0x49
 2972 00e7 13       		.uleb128 0x13
 2973 00e8 02       		.uleb128 0x2
 2974 00e9 18       		.uleb128 0x18
 2975 00ea 00       		.byte	0
 2976 00eb 00       		.byte	0
 2977 00ec 0E       		.uleb128 0xe
 2978 00ed 2E       		.uleb128 0x2e
 2979 00ee 01       		.byte	0x1
 2980 00ef 3F       		.uleb128 0x3f
 2981 00f0 19       		.uleb128 0x19
 2982 00f1 03       		.uleb128 0x3
 2983 00f2 0E       		.uleb128 0xe
 2984 00f3 3A       		.uleb128 0x3a
 2985 00f4 0B       		.uleb128 0xb
 2986 00f5 3B       		.uleb128 0x3b
 2987 00f6 05       		.uleb128 0x5
 2988 00f7 27       		.uleb128 0x27
 2989 00f8 19       		.uleb128 0x19
 2990 00f9 49       		.uleb128 0x49
 2991 00fa 13       		.uleb128 0x13
 2992 00fb 11       		.uleb128 0x11
 2993 00fc 01       		.uleb128 0x1
 2994 00fd 12       		.uleb128 0x12
 2995 00fe 06       		.uleb128 0x6
 2996 00ff 40       		.uleb128 0x40
 2997 0100 18       		.uleb128 0x18
 2998 0101 9642     		.uleb128 0x2116
 2999 0103 19       		.uleb128 0x19
 3000 0104 01       		.uleb128 0x1
 3001 0105 13       		.uleb128 0x13
 3002 0106 00       		.byte	0
 3003 0107 00       		.byte	0
 3004 0108 0F       		.uleb128 0xf
 3005 0109 2E       		.uleb128 0x2e
 3006 010a 01       		.byte	0x1
 3007 010b 3F       		.uleb128 0x3f
 3008 010c 19       		.uleb128 0x19
 3009 010d 03       		.uleb128 0x3
 3010 010e 0E       		.uleb128 0xe
 3011 010f 3A       		.uleb128 0x3a
 3012 0110 0B       		.uleb128 0xb
 3013 0111 3B       		.uleb128 0x3b
 3014 0112 05       		.uleb128 0x5
 3015 0113 27       		.uleb128 0x27
 3016 0114 19       		.uleb128 0x19
 3017 0115 11       		.uleb128 0x11
 3018 0116 01       		.uleb128 0x1
 3019 0117 12       		.uleb128 0x12
 3020 0118 06       		.uleb128 0x6
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 82


 3021 0119 40       		.uleb128 0x40
 3022 011a 18       		.uleb128 0x18
 3023 011b 9642     		.uleb128 0x2116
 3024 011d 19       		.uleb128 0x19
 3025 011e 01       		.uleb128 0x1
 3026 011f 13       		.uleb128 0x13
 3027 0120 00       		.byte	0
 3028 0121 00       		.byte	0
 3029 0122 10       		.uleb128 0x10
 3030 0123 0F       		.uleb128 0xf
 3031 0124 00       		.byte	0
 3032 0125 0B       		.uleb128 0xb
 3033 0126 0B       		.uleb128 0xb
 3034 0127 49       		.uleb128 0x49
 3035 0128 13       		.uleb128 0x13
 3036 0129 00       		.byte	0
 3037 012a 00       		.byte	0
 3038 012b 11       		.uleb128 0x11
 3039 012c 26       		.uleb128 0x26
 3040 012d 00       		.byte	0
 3041 012e 49       		.uleb128 0x49
 3042 012f 13       		.uleb128 0x13
 3043 0130 00       		.byte	0
 3044 0131 00       		.byte	0
 3045 0132 12       		.uleb128 0x12
 3046 0133 0B       		.uleb128 0xb
 3047 0134 01       		.byte	0x1
 3048 0135 11       		.uleb128 0x11
 3049 0136 01       		.uleb128 0x1
 3050 0137 12       		.uleb128 0x12
 3051 0138 06       		.uleb128 0x6
 3052 0139 00       		.byte	0
 3053 013a 00       		.byte	0
 3054 013b 13       		.uleb128 0x13
 3055 013c 34       		.uleb128 0x34
 3056 013d 00       		.byte	0
 3057 013e 03       		.uleb128 0x3
 3058 013f 0E       		.uleb128 0xe
 3059 0140 3A       		.uleb128 0x3a
 3060 0141 0B       		.uleb128 0xb
 3061 0142 3B       		.uleb128 0x3b
 3062 0143 0B       		.uleb128 0xb
 3063 0144 49       		.uleb128 0x49
 3064 0145 13       		.uleb128 0x13
 3065 0146 3F       		.uleb128 0x3f
 3066 0147 19       		.uleb128 0x19
 3067 0148 02       		.uleb128 0x2
 3068 0149 18       		.uleb128 0x18
 3069 014a 00       		.byte	0
 3070 014b 00       		.byte	0
 3071 014c 14       		.uleb128 0x14
 3072 014d 01       		.uleb128 0x1
 3073 014e 01       		.byte	0x1
 3074 014f 49       		.uleb128 0x49
 3075 0150 13       		.uleb128 0x13
 3076 0151 01       		.uleb128 0x1
 3077 0152 13       		.uleb128 0x13
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 83


 3078 0153 00       		.byte	0
 3079 0154 00       		.byte	0
 3080 0155 15       		.uleb128 0x15
 3081 0156 21       		.uleb128 0x21
 3082 0157 00       		.byte	0
 3083 0158 49       		.uleb128 0x49
 3084 0159 13       		.uleb128 0x13
 3085 015a 2F       		.uleb128 0x2f
 3086 015b 0B       		.uleb128 0xb
 3087 015c 00       		.byte	0
 3088 015d 00       		.byte	0
 3089 015e 00       		.byte	0
 3090              		.section	.debug_aranges,"",%progbits
 3091 0000 EC000000 		.4byte	0xec
 3092 0004 0200     		.2byte	0x2
 3093 0006 00000000 		.4byte	.Ldebug_info0
 3094 000a 04       		.byte	0x4
 3095 000b 00       		.byte	0
 3096 000c 0000     		.2byte	0
 3097 000e 0000     		.2byte	0
 3098 0010 00000000 		.4byte	.LFB0
 3099 0014 20000000 		.4byte	.LFE0-.LFB0
 3100 0018 00000000 		.4byte	.LFB1
 3101 001c 6C000000 		.4byte	.LFE1-.LFB1
 3102 0020 00000000 		.4byte	.LFB2
 3103 0024 74000000 		.4byte	.LFE2-.LFB2
 3104 0028 00000000 		.4byte	.LFB3
 3105 002c 68000000 		.4byte	.LFE3-.LFB3
 3106 0030 00000000 		.4byte	.LFB4
 3107 0034 10000000 		.4byte	.LFE4-.LFB4
 3108 0038 00000000 		.4byte	.LFB5
 3109 003c 14000000 		.4byte	.LFE5-.LFB5
 3110 0040 00000000 		.4byte	.LFB6
 3111 0044 20000000 		.4byte	.LFE6-.LFB6
 3112 0048 00000000 		.4byte	.LFB7
 3113 004c 94000000 		.4byte	.LFE7-.LFB7
 3114 0050 00000000 		.4byte	.LFB8
 3115 0054 40000000 		.4byte	.LFE8-.LFB8
 3116 0058 00000000 		.4byte	.LFB9
 3117 005c B8000000 		.4byte	.LFE9-.LFB9
 3118 0060 00000000 		.4byte	.LFB10
 3119 0064 44000000 		.4byte	.LFE10-.LFB10
 3120 0068 00000000 		.4byte	.LFB11
 3121 006c 90000000 		.4byte	.LFE11-.LFB11
 3122 0070 00000000 		.4byte	.LFB12
 3123 0074 7C000000 		.4byte	.LFE12-.LFB12
 3124 0078 00000000 		.4byte	.LFB13
 3125 007c 14000000 		.4byte	.LFE13-.LFB13
 3126 0080 00000000 		.4byte	.LFB14
 3127 0084 20000000 		.4byte	.LFE14-.LFB14
 3128 0088 00000000 		.4byte	.LFB15
 3129 008c 20000000 		.4byte	.LFE15-.LFB15
 3130 0090 00000000 		.4byte	.LFB16
 3131 0094 20000000 		.4byte	.LFE16-.LFB16
 3132 0098 00000000 		.4byte	.LFB17
 3133 009c 94000000 		.4byte	.LFE17-.LFB17
 3134 00a0 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 84


 3135 00a4 18000000 		.4byte	.LFE18-.LFB18
 3136 00a8 00000000 		.4byte	.LFB19
 3137 00ac B8000000 		.4byte	.LFE19-.LFB19
 3138 00b0 00000000 		.4byte	.LFB20
 3139 00b4 40000000 		.4byte	.LFE20-.LFB20
 3140 00b8 00000000 		.4byte	.LFB21
 3141 00bc 40000000 		.4byte	.LFE21-.LFB21
 3142 00c0 00000000 		.4byte	.LFB22
 3143 00c4 30000000 		.4byte	.LFE22-.LFB22
 3144 00c8 00000000 		.4byte	.LFB23
 3145 00cc 74000000 		.4byte	.LFE23-.LFB23
 3146 00d0 00000000 		.4byte	.LFB24
 3147 00d4 68000000 		.4byte	.LFE24-.LFB24
 3148 00d8 00000000 		.4byte	.LFB25
 3149 00dc 9C000000 		.4byte	.LFE25-.LFB25
 3150 00e0 00000000 		.4byte	.LFB26
 3151 00e4 14000000 		.4byte	.LFE26-.LFB26
 3152 00e8 00000000 		.4byte	0
 3153 00ec 00000000 		.4byte	0
 3154              		.section	.debug_ranges,"",%progbits
 3155              	.Ldebug_ranges0:
 3156 0000 00000000 		.4byte	.LFB0
 3157 0004 20000000 		.4byte	.LFE0
 3158 0008 00000000 		.4byte	.LFB1
 3159 000c 6C000000 		.4byte	.LFE1
 3160 0010 00000000 		.4byte	.LFB2
 3161 0014 74000000 		.4byte	.LFE2
 3162 0018 00000000 		.4byte	.LFB3
 3163 001c 68000000 		.4byte	.LFE3
 3164 0020 00000000 		.4byte	.LFB4
 3165 0024 10000000 		.4byte	.LFE4
 3166 0028 00000000 		.4byte	.LFB5
 3167 002c 14000000 		.4byte	.LFE5
 3168 0030 00000000 		.4byte	.LFB6
 3169 0034 20000000 		.4byte	.LFE6
 3170 0038 00000000 		.4byte	.LFB7
 3171 003c 94000000 		.4byte	.LFE7
 3172 0040 00000000 		.4byte	.LFB8
 3173 0044 40000000 		.4byte	.LFE8
 3174 0048 00000000 		.4byte	.LFB9
 3175 004c B8000000 		.4byte	.LFE9
 3176 0050 00000000 		.4byte	.LFB10
 3177 0054 44000000 		.4byte	.LFE10
 3178 0058 00000000 		.4byte	.LFB11
 3179 005c 90000000 		.4byte	.LFE11
 3180 0060 00000000 		.4byte	.LFB12
 3181 0064 7C000000 		.4byte	.LFE12
 3182 0068 00000000 		.4byte	.LFB13
 3183 006c 14000000 		.4byte	.LFE13
 3184 0070 00000000 		.4byte	.LFB14
 3185 0074 20000000 		.4byte	.LFE14
 3186 0078 00000000 		.4byte	.LFB15
 3187 007c 20000000 		.4byte	.LFE15
 3188 0080 00000000 		.4byte	.LFB16
 3189 0084 20000000 		.4byte	.LFE16
 3190 0088 00000000 		.4byte	.LFB17
 3191 008c 94000000 		.4byte	.LFE17
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 85


 3192 0090 00000000 		.4byte	.LFB18
 3193 0094 18000000 		.4byte	.LFE18
 3194 0098 00000000 		.4byte	.LFB19
 3195 009c B8000000 		.4byte	.LFE19
 3196 00a0 00000000 		.4byte	.LFB20
 3197 00a4 40000000 		.4byte	.LFE20
 3198 00a8 00000000 		.4byte	.LFB21
 3199 00ac 40000000 		.4byte	.LFE21
 3200 00b0 00000000 		.4byte	.LFB22
 3201 00b4 30000000 		.4byte	.LFE22
 3202 00b8 00000000 		.4byte	.LFB23
 3203 00bc 74000000 		.4byte	.LFE23
 3204 00c0 00000000 		.4byte	.LFB24
 3205 00c4 68000000 		.4byte	.LFE24
 3206 00c8 00000000 		.4byte	.LFB25
 3207 00cc 9C000000 		.4byte	.LFE25
 3208 00d0 00000000 		.4byte	.LFB26
 3209 00d4 14000000 		.4byte	.LFE26
 3210 00d8 00000000 		.4byte	0
 3211 00dc 00000000 		.4byte	0
 3212              		.section	.debug_line,"",%progbits
 3213              	.Ldebug_line0:
 3214 0000 3B030000 		.section	.debug_str,"MS",%progbits,1
 3214      02004100 
 3214      00000201 
 3214      FB0E0D00 
 3214      01010101 
 3215              	.LASF10:
 3216 0000 75696E74 		.ascii	"uint16\000"
 3216      313600
 3217              	.LASF48:
 3218 0007 74784461 		.ascii	"txDataByte\000"
 3218      74614279 
 3218      746500
 3219              	.LASF70:
 3220 0012 55415254 		.ascii	"UART_txBufferWrite\000"
 3220      5F747842 
 3220      75666665 
 3220      72577269 
 3220      746500
 3221              	.LASF55:
 3222 0025 73747269 		.ascii	"string\000"
 3222      6E6700
 3223              	.LASF7:
 3224 002c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3224      206C6F6E 
 3224      6720756E 
 3224      7369676E 
 3224      65642069 
 3225              	.LASF19:
 3226 0043 55415254 		.ascii	"UART_Start\000"
 3226      5F537461 
 3226      727400
 3227              	.LASF46:
 3228 004e 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 3228      5F536574 
 3228      5478496E 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 86


 3228      74657272 
 3228      7570744D 
 3229              	.LASF76:
 3230 0066 55415254 		.ascii	"UART_rxBufferOverflow\000"
 3230      5F727842 
 3230      75666665 
 3230      724F7665 
 3230      72666C6F 
 3231              	.LASF69:
 3232 007c 55415254 		.ascii	"UART_txBufferRead\000"
 3232      5F747842 
 3232      75666665 
 3232      72526561 
 3232      6400
 3233              	.LASF6:
 3234 008e 6C6F6E67 		.ascii	"long long int\000"
 3234      206C6F6E 
 3234      6720696E 
 3234      7400
 3235              	.LASF0:
 3236 009c 7369676E 		.ascii	"signed char\000"
 3236      65642063 
 3236      68617200 
 3237              	.LASF65:
 3238 00a8 74785065 		.ascii	"txPeriod\000"
 3238      72696F64 
 3238      00
 3239              	.LASF4:
 3240 00b1 6C6F6E67 		.ascii	"long int\000"
 3240      20696E74 
 3240      00
 3241              	.LASF51:
 3242 00ba 55415254 		.ascii	"UART_PutChar\000"
 3242      5F507574 
 3242      43686172 
 3242      00
 3243              	.LASF31:
 3244 00c7 55415254 		.ascii	"UART_ReadRxData\000"
 3244      5F526561 
 3244      64527844 
 3244      61746100 
 3245              	.LASF9:
 3246 00d7 75696E74 		.ascii	"uint8\000"
 3246      3800
 3247              	.LASF49:
 3248 00dd 55415254 		.ascii	"UART_ReadControlRegister\000"
 3248      5F526561 
 3248      64436F6E 
 3248      74726F6C 
 3248      52656769 
 3249              	.LASF13:
 3250 00f6 646F7562 		.ascii	"double\000"
 3250      6C6500
 3251              	.LASF42:
 3252 00fd 61646472 		.ascii	"addressMode\000"
 3252      6573734D 
 3252      6F646500 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 87


 3253              	.LASF74:
 3254 0109 55415254 		.ascii	"UART_rxBufferWrite\000"
 3254      5F727842 
 3254      75666665 
 3254      72577269 
 3254      746500
 3255              	.LASF11:
 3256 011c 75696E74 		.ascii	"uint32\000"
 3256      333200
 3257              	.LASF26:
 3258 0123 636F6E74 		.ascii	"control\000"
 3258      726F6C00 
 3259              	.LASF53:
 3260 012b 6C6F6354 		.ascii	"locTxBufferRead\000"
 3260      78427566 
 3260      66657252 
 3260      65616400 
 3261              	.LASF20:
 3262 013b 55415254 		.ascii	"UART_Init\000"
 3262      5F496E69 
 3262      7400
 3263              	.LASF68:
 3264 0145 55415254 		.ascii	"UART_txBuffer\000"
 3264      5F747842 
 3264      75666665 
 3264      7200
 3265              	.LASF63:
 3266 0153 7265744D 		.ascii	"retMode\000"
 3266      6F646500 
 3267              	.LASF36:
 3268 015b 55415254 		.ascii	"UART_GetByte\000"
 3268      5F476574 
 3268      42797465 
 3268      00
 3269              	.LASF8:
 3270 0168 756E7369 		.ascii	"unsigned int\000"
 3270      676E6564 
 3270      20696E74 
 3270      00
 3271              	.LASF61:
 3272 0175 55415254 		.ascii	"UART_ClearTxBuffer\000"
 3272      5F436C65 
 3272      61725478 
 3272      42756666 
 3272      657200
 3273              	.LASF59:
 3274 0188 55415254 		.ascii	"UART_PutCRLF\000"
 3274      5F507574 
 3274      43524C46 
 3274      00
 3275              	.LASF37:
 3276 0195 6C6F6345 		.ascii	"locErrorStatus\000"
 3276      72726F72 
 3276      53746174 
 3276      757300
 3277              	.LASF5:
 3278 01a4 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 88


 3278      20756E73 
 3278      69676E65 
 3278      6420696E 
 3278      7400
 3279              	.LASF52:
 3280 01b6 6C6F6354 		.ascii	"locTxBufferWrite\000"
 3280      78427566 
 3280      66657257 
 3280      72697465 
 3280      00
 3281              	.LASF57:
 3282 01c7 55415254 		.ascii	"UART_PutArray\000"
 3282      5F507574 
 3282      41727261 
 3282      7900
 3283              	.LASF75:
 3284 01d5 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 3284      5F727842 
 3284      75666665 
 3284      724C6F6F 
 3284      70446574 
 3285              	.LASF39:
 3286 01ed 73697A65 		.ascii	"size\000"
 3286      00
 3287              	.LASF3:
 3288 01f2 73686F72 		.ascii	"short unsigned int\000"
 3288      7420756E 
 3288      7369676E 
 3288      65642069 
 3288      6E7400
 3289              	.LASF73:
 3290 0205 55415254 		.ascii	"UART_rxBufferRead\000"
 3290      5F727842 
 3290      75666665 
 3290      72526561 
 3290      6400
 3291              	.LASF56:
 3292 0217 62756649 		.ascii	"bufIndex\000"
 3292      6E646578 
 3292      00
 3293              	.LASF27:
 3294 0220 696E7453 		.ascii	"intSrc\000"
 3294      726300
 3295              	.LASF66:
 3296 0227 55415254 		.ascii	"UART_SetTxAddressMode\000"
 3296      5F536574 
 3296      54784164 
 3296      64726573 
 3296      734D6F64 
 3297              	.LASF50:
 3298 023d 55415254 		.ascii	"UART_ReadTxStatus\000"
 3298      5F526561 
 3298      64547853 
 3298      74617475 
 3298      7300
 3299              	.LASF30:
 3300 024f 6C6F6352 		.ascii	"locRxBufferWrite\000"
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 89


 3300      78427566 
 3300      66657257 
 3300      72697465 
 3300      00
 3301              	.LASF17:
 3302 0260 72656733 		.ascii	"reg32\000"
 3302      3200
 3303              	.LASF64:
 3304 0266 746D7053 		.ascii	"tmpStat\000"
 3304      74617400 
 3305              	.LASF18:
 3306 026e 73697A65 		.ascii	"sizetype\000"
 3306      74797065 
 3306      00
 3307              	.LASF44:
 3308 0277 61646472 		.ascii	"address\000"
 3308      65737300 
 3309              	.LASF43:
 3310 027f 55415254 		.ascii	"UART_SetRxAddress1\000"
 3310      5F536574 
 3310      52784164 
 3310      64726573 
 3310      733100
 3311              	.LASF45:
 3312 0292 55415254 		.ascii	"UART_SetRxAddress2\000"
 3312      5F536574 
 3312      52784164 
 3312      64726573 
 3312      733200
 3313              	.LASF77:
 3314 02a5 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3314      4320342E 
 3314      392E3320 
 3314      32303135 
 3314      30333033 
 3315 02d8 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3315      20726576 
 3315      6973696F 
 3315      6E203232 
 3315      31323230 
 3316 030b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3316      66756E63 
 3316      74696F6E 
 3316      2D736563 
 3316      74696F6E 
 3317              	.LASF35:
 3318 0333 72785374 		.ascii	"rxStatus\000"
 3318      61747573 
 3318      00
 3319              	.LASF71:
 3320 033c 55415254 		.ascii	"UART_errorStatus\000"
 3320      5F657272 
 3320      6F725374 
 3320      61747573 
 3320      00
 3321              	.LASF78:
 3322 034d 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 90


 3322      72617465 
 3322      645F536F 
 3322      75726365 
 3322      5C50536F 
 3323              	.LASF60:
 3324 036b 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3324      5F476574 
 3324      54784275 
 3324      66666572 
 3324      53697A65 
 3325              	.LASF16:
 3326 0380 72656738 		.ascii	"reg8\000"
 3326      00
 3327              	.LASF41:
 3328 0385 55415254 		.ascii	"UART_SetRxAddressMode\000"
 3328      5F536574 
 3328      52784164 
 3328      64726573 
 3328      734D6F64 
 3329              	.LASF1:
 3330 039b 756E7369 		.ascii	"unsigned char\000"
 3330      676E6564 
 3330      20636861 
 3330      7200
 3331              	.LASF47:
 3332 03a9 55415254 		.ascii	"UART_WriteTxData\000"
 3332      5F577269 
 3332      74655478 
 3332      44617461 
 3332      00
 3333              	.LASF2:
 3334 03ba 73686F72 		.ascii	"short int\000"
 3334      7420696E 
 3334      7400
 3335              	.LASF79:
 3336 03c4 433A5C55 		.ascii	"C:\\Users\\Bruger\\Desktop\\CODE\\PSOC5\\CY8CKIT-59"
 3336      73657273 
 3336      5C427275 
 3336      6765725C 
 3336      4465736B 
 3337 03f1 2D417264 		.ascii	"-Arduino\\CY8CKIT59_Ardudino-Speeduino.cydsn\000"
 3337      75696E6F 
 3337      5C435938 
 3337      434B4954 
 3337      35395F41 
 3338              	.LASF62:
 3339 041d 55415254 		.ascii	"UART_SendBreak\000"
 3339      5F53656E 
 3339      64427265 
 3339      616B00
 3340              	.LASF58:
 3341 042c 62797465 		.ascii	"byteCount\000"
 3341      436F756E 
 3341      7400
 3342              	.LASF28:
 3343 0436 72784461 		.ascii	"rxData\000"
 3343      746100
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 91


 3344              	.LASF21:
 3345 043d 55415254 		.ascii	"UART_Enable\000"
 3345      5F456E61 
 3345      626C6500 
 3346              	.LASF32:
 3347 0449 55415254 		.ascii	"UART_ReadRxStatus\000"
 3347      5F526561 
 3347      64527853 
 3347      74617475 
 3347      7300
 3348              	.LASF15:
 3349 045b 63686172 		.ascii	"char\000"
 3349      00
 3350              	.LASF14:
 3351 0460 63686172 		.ascii	"char8\000"
 3351      3800
 3352              	.LASF25:
 3353 0466 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 3353      5F536574 
 3353      5278496E 
 3353      74657272 
 3353      7570744D 
 3354              	.LASF34:
 3355 047e 55415254 		.ascii	"UART_GetChar\000"
 3355      5F476574 
 3355      43686172 
 3355      00
 3356              	.LASF29:
 3357 048b 6C6F6352 		.ascii	"locRxBufferRead\000"
 3357      78427566 
 3357      66657252 
 3357      65616400 
 3358              	.LASF23:
 3359 049b 656E6162 		.ascii	"enableInterrupts\000"
 3359      6C65496E 
 3359      74657272 
 3359      75707473 
 3359      00
 3360              	.LASF67:
 3361 04ac 55415254 		.ascii	"UART_initVar\000"
 3361      5F696E69 
 3361      74566172 
 3361      00
 3362              	.LASF38:
 3363 04b9 55415254 		.ascii	"UART_GetRxBufferSize\000"
 3363      5F476574 
 3363      52784275 
 3363      66666572 
 3363      53697A65 
 3364              	.LASF33:
 3365 04ce 73746174 		.ascii	"status\000"
 3365      757300
 3366              	.LASF22:
 3367 04d5 55415254 		.ascii	"UART_Stop\000"
 3367      5F53746F 
 3367      7000
 3368              	.LASF72:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccDS0ALX.s 			page 92


 3369 04df 55415254 		.ascii	"UART_rxBuffer\000"
 3369      5F727842 
 3369      75666665 
 3369      7200
 3370              	.LASF12:
 3371 04ed 666C6F61 		.ascii	"float\000"
 3371      7400
 3372              	.LASF54:
 3373 04f3 55415254 		.ascii	"UART_PutString\000"
 3373      5F507574 
 3373      53747269 
 3373      6E6700
 3374              	.LASF24:
 3375 0502 55415254 		.ascii	"UART_WriteControlRegister\000"
 3375      5F577269 
 3375      7465436F 
 3375      6E74726F 
 3375      6C526567 
 3376              	.LASF40:
 3377 051c 55415254 		.ascii	"UART_ClearRxBuffer\000"
 3377      5F436C65 
 3377      61725278 
 3377      42756666 
 3377      657200
 3378              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
