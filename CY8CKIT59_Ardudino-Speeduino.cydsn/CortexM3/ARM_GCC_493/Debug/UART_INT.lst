ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_RXISR,"ax",%progbits
  19              		.align	2
  20              		.global	UART_RXISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_RXISR, %function
  24              	UART_RXISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\UART_INT.c"
   1:Generated_Source\PSoC5/UART_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_INT.c **** * File Name: UARTINT.c
   3:Generated_Source\PSoC5/UART_INT.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_INT.c **** *
   5:Generated_Source\PSoC5/UART_INT.c **** * Description:
   6:Generated_Source\PSoC5/UART_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:Generated_Source\PSoC5/UART_INT.c **** *
   8:Generated_Source\PSoC5/UART_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC5/UART_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/UART_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/UART_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/UART_INT.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/UART_INT.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/UART_INT.c **** 
  15:Generated_Source\PSoC5/UART_INT.c **** #include "UART.h"
  16:Generated_Source\PSoC5/UART_INT.c **** 
  17:Generated_Source\PSoC5/UART_INT.c **** 
  18:Generated_Source\PSoC5/UART_INT.c **** 
  19:Generated_Source\PSoC5/UART_INT.c **** /***************************************
  20:Generated_Source\PSoC5/UART_INT.c **** * Custom Declarations
  21:Generated_Source\PSoC5/UART_INT.c **** ***************************************/
  22:Generated_Source\PSoC5/UART_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:Generated_Source\PSoC5/UART_INT.c **** 
  24:Generated_Source\PSoC5/UART_INT.c **** /* `#END` */
  25:Generated_Source\PSoC5/UART_INT.c **** 
  26:Generated_Source\PSoC5/UART_INT.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  27:Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
  28:Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_RXISR
  29:Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
  30:Generated_Source\PSoC5/UART_INT.c ****     *
  31:Generated_Source\PSoC5/UART_INT.c ****     * Summary:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 2


  32:Generated_Source\PSoC5/UART_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:Generated_Source\PSoC5/UART_INT.c ****     *
  34:Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
  35:Generated_Source\PSoC5/UART_INT.c ****     *  None.
  36:Generated_Source\PSoC5/UART_INT.c ****     *
  37:Generated_Source\PSoC5/UART_INT.c ****     * Return:
  38:Generated_Source\PSoC5/UART_INT.c ****     *  None.
  39:Generated_Source\PSoC5/UART_INT.c ****     *
  40:Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
  41:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
  42:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
  43:Generated_Source\PSoC5/UART_INT.c ****     *     increments after each byte saved to buffer.
  44:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
  45:Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect overflow condition.
  46:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferOverflow - software overflow flag. Set to one
  47:Generated_Source\PSoC5/UART_INT.c ****     *     when UART_rxBufferWrite index overtakes
  48:Generated_Source\PSoC5/UART_INT.c ****     *     UART_rxBufferRead index.
  49:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferLoopDetect - additional variable to detect overflow.
  50:Generated_Source\PSoC5/UART_INT.c ****     *     Set to one when UART_rxBufferWrite is equal to
  51:Generated_Source\PSoC5/UART_INT.c ****     *    UART_rxBufferRead
  52:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressMode - this variable contains the Address mode,
  53:Generated_Source\PSoC5/UART_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxAddressDetected - set to 1 when correct address received,
  55:Generated_Source\PSoC5/UART_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:Generated_Source\PSoC5/UART_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:Generated_Source\PSoC5/UART_INT.c ****     *
  58:Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
  59:Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_RXISR)
  60:Generated_Source\PSoC5/UART_INT.c ****     {
  27              		.loc 1 60 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  61:Generated_Source\PSoC5/UART_INT.c ****         uint8 readData;
  62:Generated_Source\PSoC5/UART_INT.c ****         uint8 readStatus;
  63:Generated_Source\PSoC5/UART_INT.c ****         uint8 increment_pointer = 0u;
  39              		.loc 1 63 0
  40 0006 0023     		movs	r3, #0
  41 0008 FB71     		strb	r3, [r7, #7]
  42              	.L6:
  64:Generated_Source\PSoC5/UART_INT.c **** 
  65:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
  66:Generated_Source\PSoC5/UART_INT.c ****         uint8 int_en;
  67:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
  68:Generated_Source\PSoC5/UART_INT.c **** 
  69:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_RXISR_ENTRY_CALLBACK
  70:Generated_Source\PSoC5/UART_INT.c ****         UART_RXISR_EntryCallback();
  71:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_RXISR_ENTRY_CALLBACK */
  72:Generated_Source\PSoC5/UART_INT.c **** 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 3


  73:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
  74:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_START` */
  75:Generated_Source\PSoC5/UART_INT.c **** 
  76:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
  77:Generated_Source\PSoC5/UART_INT.c **** 
  78:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:Generated_Source\PSoC5/UART_INT.c ****         int_en = EA;
  80:Generated_Source\PSoC5/UART_INT.c ****         CyGlobalIntEnable;
  81:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
  82:Generated_Source\PSoC5/UART_INT.c **** 
  83:Generated_Source\PSoC5/UART_INT.c ****         do
  84:Generated_Source\PSoC5/UART_INT.c ****         {
  85:Generated_Source\PSoC5/UART_INT.c ****             /* Read receiver status register */
  86:Generated_Source\PSoC5/UART_INT.c ****             readStatus = UART_RXSTATUS_REG;
  43              		.loc 1 86 0
  44 000a 2B4B     		ldr	r3, .L7
  45 000c 1B78     		ldrb	r3, [r3]
  46 000e BB71     		strb	r3, [r7, #6]
  87:Generated_Source\PSoC5/UART_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  88:Generated_Source\PSoC5/UART_INT.c ****             *  of the user code in UART_RXISR_ERROR` section. 
  89:Generated_Source\PSoC5/UART_INT.c ****             */
  90:Generated_Source\PSoC5/UART_INT.c ****             readData = readStatus;
  47              		.loc 1 90 0
  48 0010 BB79     		ldrb	r3, [r7, #6]
  49 0012 7B71     		strb	r3, [r7, #5]
  91:Generated_Source\PSoC5/UART_INT.c **** 
  92:Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & (UART_RX_STS_BREAK | 
  93:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_PAR_ERROR |
  94:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_STOP_ERROR | 
  95:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_OVERRUN)) != 0u)
  50              		.loc 1 95 0
  51 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  52 0016 03F01E03 		and	r3, r3, #30
  92:Generated_Source\PSoC5/UART_INT.c ****                             UART_RX_STS_PAR_ERROR |
  53              		.loc 1 92 0
  54 001a 002B     		cmp	r3, #0
  55 001c 0BD0     		beq	.L2
  96:Generated_Source\PSoC5/UART_INT.c ****             {
  97:Generated_Source\PSoC5/UART_INT.c ****                 /* ERROR handling. */
  98:Generated_Source\PSoC5/UART_INT.c ****                 UART_errorStatus |= readStatus & ( UART_RX_STS_BREAK | 
  56              		.loc 1 98 0
  57 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  58 0020 03F01E03 		and	r3, r3, #30
  59 0024 DAB2     		uxtb	r2, r3
  60 0026 254B     		ldr	r3, .L7+4
  61 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62 002a DBB2     		uxtb	r3, r3
  63 002c 1343     		orrs	r3, r3, r2
  64 002e DBB2     		uxtb	r3, r3
  65 0030 DAB2     		uxtb	r2, r3
  66 0032 224B     		ldr	r3, .L7+4
  67 0034 1A70     		strb	r2, [r3]
  68              	.L2:
  99:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_PAR_ERROR | 
 100:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_STOP_ERROR | 
 101:Generated_Source\PSoC5/UART_INT.c ****                                                             UART_RX_STS_OVERRUN);
 102:Generated_Source\PSoC5/UART_INT.c ****                 /* `#START UART_RXISR_ERROR` */
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 4


 103:Generated_Source\PSoC5/UART_INT.c **** 
 104:Generated_Source\PSoC5/UART_INT.c ****                 /* `#END` */
 105:Generated_Source\PSoC5/UART_INT.c ****                 
 106:Generated_Source\PSoC5/UART_INT.c ****             #ifdef UART_RXISR_ERROR_CALLBACK
 107:Generated_Source\PSoC5/UART_INT.c ****                 UART_RXISR_ERROR_Callback();
 108:Generated_Source\PSoC5/UART_INT.c ****             #endif /* UART_RXISR_ERROR_CALLBACK */
 109:Generated_Source\PSoC5/UART_INT.c ****             }
 110:Generated_Source\PSoC5/UART_INT.c ****             
 111:Generated_Source\PSoC5/UART_INT.c ****             if((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
  69              		.loc 1 111 0
  70 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  71 0038 03F02003 		and	r3, r3, #32
  72 003c 002B     		cmp	r3, #0
  73 003e 30D0     		beq	.L3
 112:Generated_Source\PSoC5/UART_INT.c ****             {
 113:Generated_Source\PSoC5/UART_INT.c ****                 /* Read data from the RX data register */
 114:Generated_Source\PSoC5/UART_INT.c ****                 readData = UART_RXDATA_REG;
  74              		.loc 1 114 0
  75 0040 1F4B     		ldr	r3, .L7+8
  76 0042 1B78     		ldrb	r3, [r3]
  77 0044 7B71     		strb	r3, [r7, #5]
 115:Generated_Source\PSoC5/UART_INT.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 116:Generated_Source\PSoC5/UART_INT.c ****                 if(UART_rxAddressMode == (uint8)UART__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:Generated_Source\PSoC5/UART_INT.c ****                 {
 118:Generated_Source\PSoC5/UART_INT.c ****                     if((readStatus & UART_RX_STS_MRKSPC) != 0u)
 119:Generated_Source\PSoC5/UART_INT.c ****                     {
 120:Generated_Source\PSoC5/UART_INT.c ****                         if ((readStatus & UART_RX_STS_ADDR_MATCH) != 0u)
 121:Generated_Source\PSoC5/UART_INT.c ****                         {
 122:Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 1u;
 123:Generated_Source\PSoC5/UART_INT.c ****                         }
 124:Generated_Source\PSoC5/UART_INT.c ****                         else
 125:Generated_Source\PSoC5/UART_INT.c ****                         {
 126:Generated_Source\PSoC5/UART_INT.c ****                             UART_rxAddressDetected = 0u;
 127:Generated_Source\PSoC5/UART_INT.c ****                         }
 128:Generated_Source\PSoC5/UART_INT.c ****                     }
 129:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxAddressDetected != 0u)
 130:Generated_Source\PSoC5/UART_INT.c ****                     {   /* Store only addressed data */
 131:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBuffer[UART_rxBufferWrite] = readData;
 132:Generated_Source\PSoC5/UART_INT.c ****                         increment_pointer = 1u;
 133:Generated_Source\PSoC5/UART_INT.c ****                     }
 134:Generated_Source\PSoC5/UART_INT.c ****                 }
 135:Generated_Source\PSoC5/UART_INT.c ****                 else /* Without software addressing */
 136:Generated_Source\PSoC5/UART_INT.c ****                 {
 137:Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBuffer[UART_rxBufferWrite] = readData;
 138:Generated_Source\PSoC5/UART_INT.c ****                     increment_pointer = 1u;
 139:Generated_Source\PSoC5/UART_INT.c ****                 }
 140:Generated_Source\PSoC5/UART_INT.c ****             #else  /* Without addressing */
 141:Generated_Source\PSoC5/UART_INT.c ****                 UART_rxBuffer[UART_rxBufferWrite] = readData;
  78              		.loc 1 141 0
  79 0046 1F4B     		ldr	r3, .L7+12
  80 0048 1B78     		ldrb	r3, [r3]
  81 004a DBB2     		uxtb	r3, r3
  82 004c 1946     		mov	r1, r3
  83 004e 1E4A     		ldr	r2, .L7+16
  84 0050 7B79     		ldrb	r3, [r7, #5]
  85 0052 5354     		strb	r3, [r2, r1]
 142:Generated_Source\PSoC5/UART_INT.c ****                 increment_pointer = 1u;
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 5


  86              		.loc 1 142 0
  87 0054 0123     		movs	r3, #1
  88 0056 FB71     		strb	r3, [r7, #7]
 143:Generated_Source\PSoC5/UART_INT.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 144:Generated_Source\PSoC5/UART_INT.c **** 
 145:Generated_Source\PSoC5/UART_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:Generated_Source\PSoC5/UART_INT.c ****                 if(increment_pointer != 0u)
  89              		.loc 1 146 0
  90 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  91 005a 002B     		cmp	r3, #0
  92 005c 21D0     		beq	.L3
 147:Generated_Source\PSoC5/UART_INT.c ****                 {
 148:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferLoopDetect != 0u)
  93              		.loc 1 148 0
  94 005e 1B4B     		ldr	r3, .L7+20
  95 0060 1B78     		ldrb	r3, [r3]
  96 0062 DBB2     		uxtb	r3, r3
  97 0064 002B     		cmp	r3, #0
  98 0066 02D0     		beq	.L4
 149:Generated_Source\PSoC5/UART_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferOverflow = 1u;
  99              		.loc 1 150 0
 100 0068 194B     		ldr	r3, .L7+24
 101 006a 0122     		movs	r2, #1
 102 006c 1A70     		strb	r2, [r3]
 103              	.L4:
 151:Generated_Source\PSoC5/UART_INT.c ****                     }
 152:Generated_Source\PSoC5/UART_INT.c ****                     /* Set next pointer. */
 153:Generated_Source\PSoC5/UART_INT.c ****                     UART_rxBufferWrite++;
 104              		.loc 1 153 0
 105 006e 154B     		ldr	r3, .L7+12
 106 0070 1B78     		ldrb	r3, [r3]
 107 0072 DBB2     		uxtb	r3, r3
 108 0074 0133     		adds	r3, r3, #1
 109 0076 DAB2     		uxtb	r2, r3
 110 0078 124B     		ldr	r3, .L7+12
 111 007a 1A70     		strb	r2, [r3]
 154:Generated_Source\PSoC5/UART_INT.c **** 
 155:Generated_Source\PSoC5/UART_INT.c ****                     /* Check pointer for a loop condition */
 156:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite >= UART_RX_BUFFER_SIZE)
 112              		.loc 1 156 0
 113 007c 114B     		ldr	r3, .L7+12
 114 007e 1B78     		ldrb	r3, [r3]
 115 0080 DBB2     		uxtb	r3, r3
 116 0082 3F2B     		cmp	r3, #63
 117 0084 02D9     		bls	.L5
 157:Generated_Source\PSoC5/UART_INT.c ****                     {
 158:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferWrite = 0u;
 118              		.loc 1 158 0
 119 0086 0F4B     		ldr	r3, .L7+12
 120 0088 0022     		movs	r2, #0
 121 008a 1A70     		strb	r2, [r3]
 122              	.L5:
 159:Generated_Source\PSoC5/UART_INT.c ****                     }
 160:Generated_Source\PSoC5/UART_INT.c **** 
 161:Generated_Source\PSoC5/UART_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:Generated_Source\PSoC5/UART_INT.c ****                     if(UART_rxBufferWrite == UART_rxBufferRead)
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 6


 123              		.loc 1 162 0
 124 008c 0D4B     		ldr	r3, .L7+12
 125 008e 1B78     		ldrb	r3, [r3]
 126 0090 DAB2     		uxtb	r2, r3
 127 0092 104B     		ldr	r3, .L7+28
 128 0094 1B78     		ldrb	r3, [r3]
 129 0096 DBB2     		uxtb	r3, r3
 130 0098 9A42     		cmp	r2, r3
 131 009a 02D1     		bne	.L3
 163:Generated_Source\PSoC5/UART_INT.c ****                     {
 164:Generated_Source\PSoC5/UART_INT.c ****                         UART_rxBufferLoopDetect = 1u;
 132              		.loc 1 164 0
 133 009c 0B4B     		ldr	r3, .L7+20
 134 009e 0122     		movs	r2, #1
 135 00a0 1A70     		strb	r2, [r3]
 136              	.L3:
 165:Generated_Source\PSoC5/UART_INT.c ****                         /* When Hardware Flow Control selected */
 166:Generated_Source\PSoC5/UART_INT.c ****                         #if (UART_FLOW_CONTROL != 0u)
 167:Generated_Source\PSoC5/UART_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:Generated_Source\PSoC5/UART_INT.c ****                             UART_RXSTATUS_MASK_REG  &= (uint8)~UART_RX_STS_FIFO_NOTEMPTY;
 169:Generated_Source\PSoC5/UART_INT.c ****                             CyIntClearPending(UART_RX_VECT_NUM);
 170:Generated_Source\PSoC5/UART_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:Generated_Source\PSoC5/UART_INT.c ****                         #endif /* (UART_FLOW_CONTROL != 0u) */
 172:Generated_Source\PSoC5/UART_INT.c ****                     }
 173:Generated_Source\PSoC5/UART_INT.c ****                 }
 174:Generated_Source\PSoC5/UART_INT.c ****             }
 175:Generated_Source\PSoC5/UART_INT.c ****         }while((readStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u);
 137              		.loc 1 175 0
 138 00a2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 139 00a4 03F02003 		and	r3, r3, #32
 140 00a8 002B     		cmp	r3, #0
 141 00aa AED1     		bne	.L6
 176:Generated_Source\PSoC5/UART_INT.c **** 
 177:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at end of ISR (Optional) */
 178:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_RXISR_END` */
 179:Generated_Source\PSoC5/UART_INT.c **** 
 180:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 181:Generated_Source\PSoC5/UART_INT.c **** 
 182:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_RXISR_EXIT_CALLBACK
 183:Generated_Source\PSoC5/UART_INT.c ****         UART_RXISR_ExitCallback();
 184:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_RXISR_EXIT_CALLBACK */
 185:Generated_Source\PSoC5/UART_INT.c **** 
 186:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 187:Generated_Source\PSoC5/UART_INT.c ****         EA = int_en;
 188:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 189:Generated_Source\PSoC5/UART_INT.c ****     }
 142              		.loc 1 189 0
 143 00ac 0C37     		adds	r7, r7, #12
 144              		.cfi_def_cfa_offset 4
 145 00ae BD46     		mov	sp, r7
 146              		.cfi_def_cfa_register 13
 147              		@ sp needed
 148 00b0 5DF8047B 		ldr	r7, [sp], #4
 149              		.cfi_restore 7
 150              		.cfi_def_cfa_offset 0
 151 00b4 7047     		bx	lr
 152              	.L8:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 7


 153 00b6 00BF     		.align	2
 154              	.L7:
 155 00b8 66640040 		.word	1073767526
 156 00bc 00000000 		.word	UART_errorStatus
 157 00c0 45650040 		.word	1073767749
 158 00c4 00000000 		.word	UART_rxBufferWrite
 159 00c8 00000000 		.word	UART_rxBuffer
 160 00cc 00000000 		.word	UART_rxBufferLoopDetect
 161 00d0 00000000 		.word	UART_rxBufferOverflow
 162 00d4 00000000 		.word	UART_rxBufferRead
 163              		.cfi_endproc
 164              	.LFE0:
 165              		.size	UART_RXISR, .-UART_RXISR
 166              		.section	.text.UART_TXISR,"ax",%progbits
 167              		.align	2
 168              		.global	UART_TXISR
 169              		.thumb
 170              		.thumb_func
 171              		.type	UART_TXISR, %function
 172              	UART_TXISR:
 173              	.LFB1:
 190:Generated_Source\PSoC5/UART_INT.c ****     
 191:Generated_Source\PSoC5/UART_INT.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
 192:Generated_Source\PSoC5/UART_INT.c **** 
 193:Generated_Source\PSoC5/UART_INT.c **** 
 194:Generated_Source\PSoC5/UART_INT.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
 195:Generated_Source\PSoC5/UART_INT.c ****     /*******************************************************************************
 196:Generated_Source\PSoC5/UART_INT.c ****     * Function Name: UART_TXISR
 197:Generated_Source\PSoC5/UART_INT.c ****     ********************************************************************************
 198:Generated_Source\PSoC5/UART_INT.c ****     *
 199:Generated_Source\PSoC5/UART_INT.c ****     * Summary:
 200:Generated_Source\PSoC5/UART_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 201:Generated_Source\PSoC5/UART_INT.c ****     *
 202:Generated_Source\PSoC5/UART_INT.c ****     * Parameters:
 203:Generated_Source\PSoC5/UART_INT.c ****     *  None.
 204:Generated_Source\PSoC5/UART_INT.c ****     *
 205:Generated_Source\PSoC5/UART_INT.c ****     * Return:
 206:Generated_Source\PSoC5/UART_INT.c ****     *  None.
 207:Generated_Source\PSoC5/UART_INT.c ****     *
 208:Generated_Source\PSoC5/UART_INT.c ****     * Global Variables:
 209:Generated_Source\PSoC5/UART_INT.c ****     *  UART_txBuffer - RAM buffer pointer for transmit data from.
 210:Generated_Source\PSoC5/UART_INT.c ****     *  UART_txBufferRead - cyclic index for read and transmit data
 211:Generated_Source\PSoC5/UART_INT.c ****     *     from txBuffer, increments after each transmitted byte.
 212:Generated_Source\PSoC5/UART_INT.c ****     *  UART_rxBufferWrite - cyclic index for write to txBuffer,
 213:Generated_Source\PSoC5/UART_INT.c ****     *     checked to detect available for transmission bytes.
 214:Generated_Source\PSoC5/UART_INT.c ****     *
 215:Generated_Source\PSoC5/UART_INT.c ****     *******************************************************************************/
 216:Generated_Source\PSoC5/UART_INT.c ****     CY_ISR(UART_TXISR)
 217:Generated_Source\PSoC5/UART_INT.c ****     {
 174              		.loc 1 217 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 80B4     		push	{r7}
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 8


 182 0002 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 219:Generated_Source\PSoC5/UART_INT.c ****         uint8 int_en;
 220:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 221:Generated_Source\PSoC5/UART_INT.c **** 
 222:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_TXISR_ENTRY_CALLBACK
 223:Generated_Source\PSoC5/UART_INT.c ****         UART_TXISR_EntryCallback();
 224:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_TXISR_ENTRY_CALLBACK */
 225:Generated_Source\PSoC5/UART_INT.c **** 
 226:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at start of ISR */
 227:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_TXISR_START` */
 228:Generated_Source\PSoC5/UART_INT.c **** 
 229:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 230:Generated_Source\PSoC5/UART_INT.c **** 
 231:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 232:Generated_Source\PSoC5/UART_INT.c ****         int_en = EA;
 233:Generated_Source\PSoC5/UART_INT.c ****         CyGlobalIntEnable;
 234:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 235:Generated_Source\PSoC5/UART_INT.c **** 
 236:Generated_Source\PSoC5/UART_INT.c ****         while((UART_txBufferRead != UART_txBufferWrite) &&
 184              		.loc 1 236 0
 185 0004 17E0     		b	.L10
 186              	.L13:
 237:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
 238:Generated_Source\PSoC5/UART_INT.c ****         {
 239:Generated_Source\PSoC5/UART_INT.c ****             /* Check pointer wrap around */
 240:Generated_Source\PSoC5/UART_INT.c ****             if(UART_txBufferRead >= UART_TX_BUFFER_SIZE)
 187              		.loc 1 240 0
 188 0006 154B     		ldr	r3, .L14
 189 0008 1B78     		ldrb	r3, [r3]
 190 000a DBB2     		uxtb	r3, r3
 191 000c 3F2B     		cmp	r3, #63
 192 000e 02D9     		bls	.L11
 241:Generated_Source\PSoC5/UART_INT.c ****             {
 242:Generated_Source\PSoC5/UART_INT.c ****                 UART_txBufferRead = 0u;
 193              		.loc 1 242 0
 194 0010 124B     		ldr	r3, .L14
 195 0012 0022     		movs	r2, #0
 196 0014 1A70     		strb	r2, [r3]
 197              	.L11:
 243:Generated_Source\PSoC5/UART_INT.c ****             }
 244:Generated_Source\PSoC5/UART_INT.c **** 
 245:Generated_Source\PSoC5/UART_INT.c ****             UART_TXDATA_REG = UART_txBuffer[UART_txBufferRead];
 198              		.loc 1 245 0
 199 0016 124B     		ldr	r3, .L14+4
 200 0018 104A     		ldr	r2, .L14
 201 001a 1278     		ldrb	r2, [r2]
 202 001c D2B2     		uxtb	r2, r2
 203 001e 1146     		mov	r1, r2
 204 0020 104A     		ldr	r2, .L14+8
 205 0022 525C     		ldrb	r2, [r2, r1]
 206 0024 D2B2     		uxtb	r2, r2
 207 0026 1A70     		strb	r2, [r3]
 246:Generated_Source\PSoC5/UART_INT.c **** 
 247:Generated_Source\PSoC5/UART_INT.c ****             /* Set next pointer */
 248:Generated_Source\PSoC5/UART_INT.c ****             UART_txBufferRead++;
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 9


 208              		.loc 1 248 0
 209 0028 0C4B     		ldr	r3, .L14
 210 002a 1B78     		ldrb	r3, [r3]
 211 002c DBB2     		uxtb	r3, r3
 212 002e 0133     		adds	r3, r3, #1
 213 0030 DAB2     		uxtb	r2, r3
 214 0032 0A4B     		ldr	r3, .L14
 215 0034 1A70     		strb	r2, [r3]
 216              	.L10:
 236:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
 217              		.loc 1 236 0
 218 0036 094B     		ldr	r3, .L14
 219 0038 1B78     		ldrb	r3, [r3]
 220 003a DAB2     		uxtb	r2, r3
 221 003c 0A4B     		ldr	r3, .L14+12
 222 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 223 0040 9A42     		cmp	r2, r3
 224 0042 06D0     		beq	.L9
 237:Generated_Source\PSoC5/UART_INT.c ****         {
 225              		.loc 1 237 0 discriminator 1
 226 0044 094B     		ldr	r3, .L14+16
 227 0046 1B78     		ldrb	r3, [r3]
 228 0048 DBB2     		uxtb	r3, r3
 229 004a 03F00403 		and	r3, r3, #4
 236:Generated_Source\PSoC5/UART_INT.c ****              ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u))
 230              		.loc 1 236 0 discriminator 1
 231 004e 002B     		cmp	r3, #0
 232 0050 D9D0     		beq	.L13
 233              	.L9:
 249:Generated_Source\PSoC5/UART_INT.c ****         }
 250:Generated_Source\PSoC5/UART_INT.c **** 
 251:Generated_Source\PSoC5/UART_INT.c ****         /* User code required at end of ISR (Optional) */
 252:Generated_Source\PSoC5/UART_INT.c ****         /* `#START UART_TXISR_END` */
 253:Generated_Source\PSoC5/UART_INT.c **** 
 254:Generated_Source\PSoC5/UART_INT.c ****         /* `#END` */
 255:Generated_Source\PSoC5/UART_INT.c **** 
 256:Generated_Source\PSoC5/UART_INT.c ****     #ifdef UART_TXISR_EXIT_CALLBACK
 257:Generated_Source\PSoC5/UART_INT.c ****         UART_TXISR_ExitCallback();
 258:Generated_Source\PSoC5/UART_INT.c ****     #endif /* UART_TXISR_EXIT_CALLBACK */
 259:Generated_Source\PSoC5/UART_INT.c **** 
 260:Generated_Source\PSoC5/UART_INT.c ****     #if(CY_PSOC3)
 261:Generated_Source\PSoC5/UART_INT.c ****         EA = int_en;
 262:Generated_Source\PSoC5/UART_INT.c ****     #endif /* (CY_PSOC3) */
 263:Generated_Source\PSoC5/UART_INT.c ****    }
 234              		.loc 1 263 0
 235 0052 BD46     		mov	sp, r7
 236              		.cfi_def_cfa_register 13
 237              		@ sp needed
 238 0054 5DF8047B 		ldr	r7, [sp], #4
 239              		.cfi_restore 7
 240              		.cfi_def_cfa_offset 0
 241 0058 7047     		bx	lr
 242              	.L15:
 243 005a 00BF     		.align	2
 244              	.L14:
 245 005c 00000000 		.word	UART_txBufferRead
 246 0060 4D640040 		.word	1073767501
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 10


 247 0064 00000000 		.word	UART_txBuffer
 248 0068 00000000 		.word	UART_txBufferWrite
 249 006c 6B640040 		.word	1073767531
 250              		.cfi_endproc
 251              	.LFE1:
 252              		.size	UART_TXISR, .-UART_TXISR
 253              		.text
 254              	.Letext0:
 255              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 256              		.file 3 "Generated_Source\\PSoC5\\UART.h"
 257              		.section	.debug_info,"",%progbits
 258              	.Ldebug_info0:
 259 0000 78010000 		.4byte	0x178
 260 0004 0400     		.2byte	0x4
 261 0006 00000000 		.4byte	.Ldebug_abbrev0
 262 000a 04       		.byte	0x4
 263 000b 01       		.uleb128 0x1
 264 000c 88000000 		.4byte	.LASF27
 265 0010 01       		.byte	0x1
 266 0011 69020000 		.4byte	.LASF28
 267 0015 41010000 		.4byte	.LASF29
 268 0019 00000000 		.4byte	.Ldebug_ranges0+0
 269 001d 00000000 		.4byte	0
 270 0021 00000000 		.4byte	.Ldebug_line0
 271 0025 02       		.uleb128 0x2
 272 0026 01       		.byte	0x1
 273 0027 06       		.byte	0x6
 274 0028 5D020000 		.4byte	.LASF0
 275 002c 02       		.uleb128 0x2
 276 002d 01       		.byte	0x1
 277 002e 08       		.byte	0x8
 278 002f 4F000000 		.4byte	.LASF1
 279 0033 02       		.uleb128 0x2
 280 0034 02       		.byte	0x2
 281 0035 05       		.byte	0x5
 282 0036 20020000 		.4byte	.LASF2
 283 003a 02       		.uleb128 0x2
 284 003b 02       		.byte	0x2
 285 003c 07       		.byte	0x7
 286 003d 26000000 		.4byte	.LASF3
 287 0041 02       		.uleb128 0x2
 288 0042 04       		.byte	0x4
 289 0043 05       		.byte	0x5
 290 0044 3D020000 		.4byte	.LASF4
 291 0048 02       		.uleb128 0x2
 292 0049 04       		.byte	0x4
 293 004a 07       		.byte	0x7
 294 004b 62000000 		.4byte	.LASF5
 295 004f 02       		.uleb128 0x2
 296 0050 08       		.byte	0x8
 297 0051 05       		.byte	0x5
 298 0052 DD010000 		.4byte	.LASF6
 299 0056 02       		.uleb128 0x2
 300 0057 08       		.byte	0x8
 301 0058 07       		.byte	0x7
 302 0059 A7010000 		.4byte	.LASF7
 303 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 11


 304 005e 04       		.byte	0x4
 305 005f 05       		.byte	0x5
 306 0060 696E7400 		.ascii	"int\000"
 307 0064 02       		.uleb128 0x2
 308 0065 04       		.byte	0x4
 309 0066 07       		.byte	0x7
 310 0067 9A010000 		.4byte	.LASF8
 311 006b 04       		.uleb128 0x4
 312 006c 74000000 		.4byte	.LASF12
 313 0070 02       		.byte	0x2
 314 0071 3801     		.2byte	0x138
 315 0073 2C000000 		.4byte	0x2c
 316 0077 02       		.uleb128 0x2
 317 0078 04       		.byte	0x4
 318 0079 04       		.byte	0x4
 319 007a 12000000 		.4byte	.LASF9
 320 007e 02       		.uleb128 0x2
 321 007f 08       		.byte	0x8
 322 0080 04       		.byte	0x4
 323 0081 16010000 		.4byte	.LASF10
 324 0085 02       		.uleb128 0x2
 325 0086 01       		.byte	0x1
 326 0087 08       		.byte	0x8
 327 0088 46020000 		.4byte	.LASF11
 328 008c 04       		.uleb128 0x4
 329 008d 5D000000 		.4byte	.LASF13
 330 0091 02       		.byte	0x2
 331 0092 E201     		.2byte	0x1e2
 332 0094 98000000 		.4byte	0x98
 333 0098 05       		.uleb128 0x5
 334 0099 6B000000 		.4byte	0x6b
 335 009d 02       		.uleb128 0x2
 336 009e 04       		.byte	0x4
 337 009f 07       		.byte	0x7
 338 00a0 D4010000 		.4byte	.LASF14
 339 00a4 06       		.uleb128 0x6
 340 00a5 39000000 		.4byte	.LASF30
 341 00a9 01       		.byte	0x1
 342 00aa 3B       		.byte	0x3b
 343 00ab 00000000 		.4byte	.LFB0
 344 00af D8000000 		.4byte	.LFE0-.LFB0
 345 00b3 01       		.uleb128 0x1
 346 00b4 9C       		.byte	0x9c
 347 00b5 E4000000 		.4byte	0xe4
 348 00b9 07       		.uleb128 0x7
 349 00ba 8B020000 		.4byte	.LASF15
 350 00be 01       		.byte	0x1
 351 00bf 3D       		.byte	0x3d
 352 00c0 6B000000 		.4byte	0x6b
 353 00c4 02       		.uleb128 0x2
 354 00c5 91       		.byte	0x91
 355 00c6 75       		.sleb128 -11
 356 00c7 07       		.uleb128 0x7
 357 00c8 44000000 		.4byte	.LASF16
 358 00cc 01       		.byte	0x1
 359 00cd 3E       		.byte	0x3e
 360 00ce 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 12


 361 00d2 02       		.uleb128 0x2
 362 00d3 91       		.byte	0x91
 363 00d4 76       		.sleb128 -10
 364 00d5 07       		.uleb128 0x7
 365 00d6 F6010000 		.4byte	.LASF17
 366 00da 01       		.byte	0x1
 367 00db 3F       		.byte	0x3f
 368 00dc 6B000000 		.4byte	0x6b
 369 00e0 02       		.uleb128 0x2
 370 00e1 91       		.byte	0x91
 371 00e2 77       		.sleb128 -9
 372 00e3 00       		.byte	0
 373 00e4 08       		.uleb128 0x8
 374 00e5 EB010000 		.4byte	.LASF31
 375 00e9 01       		.byte	0x1
 376 00ea D8       		.byte	0xd8
 377 00eb 00000000 		.4byte	.LFB1
 378 00ef 70000000 		.4byte	.LFE1-.LFB1
 379 00f3 01       		.uleb128 0x1
 380 00f4 9C       		.byte	0x9c
 381 00f5 09       		.uleb128 0x9
 382 00f6 6B000000 		.4byte	0x6b
 383 00fa 05010000 		.4byte	0x105
 384 00fe 0A       		.uleb128 0xa
 385 00ff 9D000000 		.4byte	0x9d
 386 0103 3F       		.byte	0x3f
 387 0104 00       		.byte	0
 388 0105 0B       		.uleb128 0xb
 389 0106 18000000 		.4byte	.LASF18
 390 010a 03       		.byte	0x3
 391 010b 3801     		.2byte	0x138
 392 010d 11010000 		.4byte	0x111
 393 0111 05       		.uleb128 0x5
 394 0112 F5000000 		.4byte	0xf5
 395 0116 0B       		.uleb128 0xb
 396 0117 4B020000 		.4byte	.LASF19
 397 011b 03       		.byte	0x3
 398 011c 3901     		.2byte	0x139
 399 011e 98000000 		.4byte	0x98
 400 0122 0B       		.uleb128 0xb
 401 0123 2A020000 		.4byte	.LASF20
 402 0127 03       		.byte	0x3
 403 0128 3A01     		.2byte	0x13a
 404 012a 6B000000 		.4byte	0x6b
 405 012e 0B       		.uleb128 0xb
 406 012f 1D010000 		.4byte	.LASF21
 407 0133 03       		.byte	0x3
 408 0134 3D01     		.2byte	0x13d
 409 0136 6B000000 		.4byte	0x6b
 410 013a 0B       		.uleb128 0xb
 411 013b 7A000000 		.4byte	.LASF22
 412 013f 03       		.byte	0x3
 413 0140 3E01     		.2byte	0x13e
 414 0142 46010000 		.4byte	0x146
 415 0146 05       		.uleb128 0x5
 416 0147 F5000000 		.4byte	0xf5
 417 014b 0B       		.uleb128 0xb
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 13


 418 014c 00000000 		.4byte	.LASF23
 419 0150 03       		.byte	0x3
 420 0151 3F01     		.2byte	0x13f
 421 0153 98000000 		.4byte	0x98
 422 0157 0B       		.uleb128 0xb
 423 0158 2E010000 		.4byte	.LASF24
 424 015c 03       		.byte	0x3
 425 015d 4001     		.2byte	0x140
 426 015f 98000000 		.4byte	0x98
 427 0163 0B       		.uleb128 0xb
 428 0164 08020000 		.4byte	.LASF25
 429 0168 03       		.byte	0x3
 430 0169 4101     		.2byte	0x141
 431 016b 98000000 		.4byte	0x98
 432 016f 0B       		.uleb128 0xb
 433 0170 BE010000 		.4byte	.LASF26
 434 0174 03       		.byte	0x3
 435 0175 4201     		.2byte	0x142
 436 0177 98000000 		.4byte	0x98
 437 017b 00       		.byte	0
 438              		.section	.debug_abbrev,"",%progbits
 439              	.Ldebug_abbrev0:
 440 0000 01       		.uleb128 0x1
 441 0001 11       		.uleb128 0x11
 442 0002 01       		.byte	0x1
 443 0003 25       		.uleb128 0x25
 444 0004 0E       		.uleb128 0xe
 445 0005 13       		.uleb128 0x13
 446 0006 0B       		.uleb128 0xb
 447 0007 03       		.uleb128 0x3
 448 0008 0E       		.uleb128 0xe
 449 0009 1B       		.uleb128 0x1b
 450 000a 0E       		.uleb128 0xe
 451 000b 55       		.uleb128 0x55
 452 000c 17       		.uleb128 0x17
 453 000d 11       		.uleb128 0x11
 454 000e 01       		.uleb128 0x1
 455 000f 10       		.uleb128 0x10
 456 0010 17       		.uleb128 0x17
 457 0011 00       		.byte	0
 458 0012 00       		.byte	0
 459 0013 02       		.uleb128 0x2
 460 0014 24       		.uleb128 0x24
 461 0015 00       		.byte	0
 462 0016 0B       		.uleb128 0xb
 463 0017 0B       		.uleb128 0xb
 464 0018 3E       		.uleb128 0x3e
 465 0019 0B       		.uleb128 0xb
 466 001a 03       		.uleb128 0x3
 467 001b 0E       		.uleb128 0xe
 468 001c 00       		.byte	0
 469 001d 00       		.byte	0
 470 001e 03       		.uleb128 0x3
 471 001f 24       		.uleb128 0x24
 472 0020 00       		.byte	0
 473 0021 0B       		.uleb128 0xb
 474 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 14


 475 0023 3E       		.uleb128 0x3e
 476 0024 0B       		.uleb128 0xb
 477 0025 03       		.uleb128 0x3
 478 0026 08       		.uleb128 0x8
 479 0027 00       		.byte	0
 480 0028 00       		.byte	0
 481 0029 04       		.uleb128 0x4
 482 002a 16       		.uleb128 0x16
 483 002b 00       		.byte	0
 484 002c 03       		.uleb128 0x3
 485 002d 0E       		.uleb128 0xe
 486 002e 3A       		.uleb128 0x3a
 487 002f 0B       		.uleb128 0xb
 488 0030 3B       		.uleb128 0x3b
 489 0031 05       		.uleb128 0x5
 490 0032 49       		.uleb128 0x49
 491 0033 13       		.uleb128 0x13
 492 0034 00       		.byte	0
 493 0035 00       		.byte	0
 494 0036 05       		.uleb128 0x5
 495 0037 35       		.uleb128 0x35
 496 0038 00       		.byte	0
 497 0039 49       		.uleb128 0x49
 498 003a 13       		.uleb128 0x13
 499 003b 00       		.byte	0
 500 003c 00       		.byte	0
 501 003d 06       		.uleb128 0x6
 502 003e 2E       		.uleb128 0x2e
 503 003f 01       		.byte	0x1
 504 0040 3F       		.uleb128 0x3f
 505 0041 19       		.uleb128 0x19
 506 0042 03       		.uleb128 0x3
 507 0043 0E       		.uleb128 0xe
 508 0044 3A       		.uleb128 0x3a
 509 0045 0B       		.uleb128 0xb
 510 0046 3B       		.uleb128 0x3b
 511 0047 0B       		.uleb128 0xb
 512 0048 27       		.uleb128 0x27
 513 0049 19       		.uleb128 0x19
 514 004a 11       		.uleb128 0x11
 515 004b 01       		.uleb128 0x1
 516 004c 12       		.uleb128 0x12
 517 004d 06       		.uleb128 0x6
 518 004e 40       		.uleb128 0x40
 519 004f 18       		.uleb128 0x18
 520 0050 9742     		.uleb128 0x2117
 521 0052 19       		.uleb128 0x19
 522 0053 01       		.uleb128 0x1
 523 0054 13       		.uleb128 0x13
 524 0055 00       		.byte	0
 525 0056 00       		.byte	0
 526 0057 07       		.uleb128 0x7
 527 0058 34       		.uleb128 0x34
 528 0059 00       		.byte	0
 529 005a 03       		.uleb128 0x3
 530 005b 0E       		.uleb128 0xe
 531 005c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 15


 532 005d 0B       		.uleb128 0xb
 533 005e 3B       		.uleb128 0x3b
 534 005f 0B       		.uleb128 0xb
 535 0060 49       		.uleb128 0x49
 536 0061 13       		.uleb128 0x13
 537 0062 02       		.uleb128 0x2
 538 0063 18       		.uleb128 0x18
 539 0064 00       		.byte	0
 540 0065 00       		.byte	0
 541 0066 08       		.uleb128 0x8
 542 0067 2E       		.uleb128 0x2e
 543 0068 00       		.byte	0
 544 0069 3F       		.uleb128 0x3f
 545 006a 19       		.uleb128 0x19
 546 006b 03       		.uleb128 0x3
 547 006c 0E       		.uleb128 0xe
 548 006d 3A       		.uleb128 0x3a
 549 006e 0B       		.uleb128 0xb
 550 006f 3B       		.uleb128 0x3b
 551 0070 0B       		.uleb128 0xb
 552 0071 27       		.uleb128 0x27
 553 0072 19       		.uleb128 0x19
 554 0073 11       		.uleb128 0x11
 555 0074 01       		.uleb128 0x1
 556 0075 12       		.uleb128 0x12
 557 0076 06       		.uleb128 0x6
 558 0077 40       		.uleb128 0x40
 559 0078 18       		.uleb128 0x18
 560 0079 9742     		.uleb128 0x2117
 561 007b 19       		.uleb128 0x19
 562 007c 00       		.byte	0
 563 007d 00       		.byte	0
 564 007e 09       		.uleb128 0x9
 565 007f 01       		.uleb128 0x1
 566 0080 01       		.byte	0x1
 567 0081 49       		.uleb128 0x49
 568 0082 13       		.uleb128 0x13
 569 0083 01       		.uleb128 0x1
 570 0084 13       		.uleb128 0x13
 571 0085 00       		.byte	0
 572 0086 00       		.byte	0
 573 0087 0A       		.uleb128 0xa
 574 0088 21       		.uleb128 0x21
 575 0089 00       		.byte	0
 576 008a 49       		.uleb128 0x49
 577 008b 13       		.uleb128 0x13
 578 008c 2F       		.uleb128 0x2f
 579 008d 0B       		.uleb128 0xb
 580 008e 00       		.byte	0
 581 008f 00       		.byte	0
 582 0090 0B       		.uleb128 0xb
 583 0091 34       		.uleb128 0x34
 584 0092 00       		.byte	0
 585 0093 03       		.uleb128 0x3
 586 0094 0E       		.uleb128 0xe
 587 0095 3A       		.uleb128 0x3a
 588 0096 0B       		.uleb128 0xb
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 16


 589 0097 3B       		.uleb128 0x3b
 590 0098 05       		.uleb128 0x5
 591 0099 49       		.uleb128 0x49
 592 009a 13       		.uleb128 0x13
 593 009b 3F       		.uleb128 0x3f
 594 009c 19       		.uleb128 0x19
 595 009d 3C       		.uleb128 0x3c
 596 009e 19       		.uleb128 0x19
 597 009f 00       		.byte	0
 598 00a0 00       		.byte	0
 599 00a1 00       		.byte	0
 600              		.section	.debug_aranges,"",%progbits
 601 0000 24000000 		.4byte	0x24
 602 0004 0200     		.2byte	0x2
 603 0006 00000000 		.4byte	.Ldebug_info0
 604 000a 04       		.byte	0x4
 605 000b 00       		.byte	0
 606 000c 0000     		.2byte	0
 607 000e 0000     		.2byte	0
 608 0010 00000000 		.4byte	.LFB0
 609 0014 D8000000 		.4byte	.LFE0-.LFB0
 610 0018 00000000 		.4byte	.LFB1
 611 001c 70000000 		.4byte	.LFE1-.LFB1
 612 0020 00000000 		.4byte	0
 613 0024 00000000 		.4byte	0
 614              		.section	.debug_ranges,"",%progbits
 615              	.Ldebug_ranges0:
 616 0000 00000000 		.4byte	.LFB0
 617 0004 D8000000 		.4byte	.LFE0
 618 0008 00000000 		.4byte	.LFB1
 619 000c 70000000 		.4byte	.LFE1
 620 0010 00000000 		.4byte	0
 621 0014 00000000 		.4byte	0
 622              		.section	.debug_line,"",%progbits
 623              	.Ldebug_line0:
 624 0000 A9000000 		.section	.debug_str,"MS",%progbits,1
 624      02004F00 
 624      00000201 
 624      FB0E0D00 
 624      01010101 
 625              	.LASF23:
 626 0000 55415254 		.ascii	"UART_rxBufferRead\000"
 626      5F727842 
 626      75666665 
 626      72526561 
 626      6400
 627              	.LASF9:
 628 0012 666C6F61 		.ascii	"float\000"
 628      7400
 629              	.LASF18:
 630 0018 55415254 		.ascii	"UART_txBuffer\000"
 630      5F747842 
 630      75666665 
 630      7200
 631              	.LASF3:
 632 0026 73686F72 		.ascii	"short unsigned int\000"
 632      7420756E 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 17


 632      7369676E 
 632      65642069 
 632      6E7400
 633              	.LASF30:
 634 0039 55415254 		.ascii	"UART_RXISR\000"
 634      5F525849 
 634      535200
 635              	.LASF16:
 636 0044 72656164 		.ascii	"readStatus\000"
 636      53746174 
 636      757300
 637              	.LASF1:
 638 004f 756E7369 		.ascii	"unsigned char\000"
 638      676E6564 
 638      20636861 
 638      7200
 639              	.LASF13:
 640 005d 72656738 		.ascii	"reg8\000"
 640      00
 641              	.LASF5:
 642 0062 6C6F6E67 		.ascii	"long unsigned int\000"
 642      20756E73 
 642      69676E65 
 642      6420696E 
 642      7400
 643              	.LASF12:
 644 0074 75696E74 		.ascii	"uint8\000"
 644      3800
 645              	.LASF22:
 646 007a 55415254 		.ascii	"UART_rxBuffer\000"
 646      5F727842 
 646      75666665 
 646      7200
 647              	.LASF27:
 648 0088 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 648      4320342E 
 648      392E3320 
 648      32303135 
 648      30333033 
 649 00bb 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 649      20726576 
 649      6973696F 
 649      6E203232 
 649      31323230 
 650 00ee 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 650      66756E63 
 650      74696F6E 
 650      2D736563 
 650      74696F6E 
 651              	.LASF10:
 652 0116 646F7562 		.ascii	"double\000"
 652      6C6500
 653              	.LASF21:
 654 011d 55415254 		.ascii	"UART_errorStatus\000"
 654      5F657272 
 654      6F725374 
 654      61747573 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 18


 654      00
 655              	.LASF24:
 656 012e 55415254 		.ascii	"UART_rxBufferWrite\000"
 656      5F727842 
 656      75666665 
 656      72577269 
 656      746500
 657              	.LASF29:
 658 0141 433A5C55 		.ascii	"C:\\Users\\Bruger\\Desktop\\CODE\\PSOC5\\CY8CKIT-59"
 658      73657273 
 658      5C427275 
 658      6765725C 
 658      4465736B 
 659 016e 2D417264 		.ascii	"-Arduino\\CY8CKIT59_Ardudino-Speeduino.cydsn\000"
 659      75696E6F 
 659      5C435938 
 659      434B4954 
 659      35395F41 
 660              	.LASF8:
 661 019a 756E7369 		.ascii	"unsigned int\000"
 661      676E6564 
 661      20696E74 
 661      00
 662              	.LASF7:
 663 01a7 6C6F6E67 		.ascii	"long long unsigned int\000"
 663      206C6F6E 
 663      6720756E 
 663      7369676E 
 663      65642069 
 664              	.LASF26:
 665 01be 55415254 		.ascii	"UART_rxBufferOverflow\000"
 665      5F727842 
 665      75666665 
 665      724F7665 
 665      72666C6F 
 666              	.LASF14:
 667 01d4 73697A65 		.ascii	"sizetype\000"
 667      74797065 
 667      00
 668              	.LASF6:
 669 01dd 6C6F6E67 		.ascii	"long long int\000"
 669      206C6F6E 
 669      6720696E 
 669      7400
 670              	.LASF31:
 671 01eb 55415254 		.ascii	"UART_TXISR\000"
 671      5F545849 
 671      535200
 672              	.LASF17:
 673 01f6 696E6372 		.ascii	"increment_pointer\000"
 673      656D656E 
 673      745F706F 
 673      696E7465 
 673      7200
 674              	.LASF25:
 675 0208 55415254 		.ascii	"UART_rxBufferLoopDetect\000"
 675      5F727842 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccQ6jNyE.s 			page 19


 675      75666665 
 675      724C6F6F 
 675      70446574 
 676              	.LASF2:
 677 0220 73686F72 		.ascii	"short int\000"
 677      7420696E 
 677      7400
 678              	.LASF20:
 679 022a 55415254 		.ascii	"UART_txBufferWrite\000"
 679      5F747842 
 679      75666665 
 679      72577269 
 679      746500
 680              	.LASF4:
 681 023d 6C6F6E67 		.ascii	"long int\000"
 681      20696E74 
 681      00
 682              	.LASF11:
 683 0246 63686172 		.ascii	"char\000"
 683      00
 684              	.LASF19:
 685 024b 55415254 		.ascii	"UART_txBufferRead\000"
 685      5F747842 
 685      75666665 
 685      72526561 
 685      6400
 686              	.LASF0:
 687 025d 7369676E 		.ascii	"signed char\000"
 687      65642063 
 687      68617200 
 688              	.LASF28:
 689 0269 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_INT.c\000"
 689      72617465 
 689      645F536F 
 689      75726365 
 689      5C50536F 
 690              	.LASF15:
 691 028b 72656164 		.ascii	"readData\000"
 691      44617461 
 691      00
 692              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
