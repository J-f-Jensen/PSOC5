ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"InjectionCounter_PM.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	InjectionCounter_backup:
  21 0000 00000000 		.space	6
  21      0000
  22 0006 0000     		.section	.text.InjectionCounter_SaveConfig,"ax",%progbits
  23              		.align	2
  24              		.global	InjectionCounter_SaveConfig
  25              		.thumb
  26              		.thumb_func
  27              		.type	InjectionCounter_SaveConfig, %function
  28              	InjectionCounter_SaveConfig:
  29              	.LFB0:
  30              		.file 1 "Generated_Source\\PSoC5\\InjectionCounter_PM.c"
   1:Generated_Source\PSoC5/InjectionCounter_PM.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/InjectionCounter_PM.c **** * File Name: InjectionCounter_PM.c  
   3:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Version 3.0
   4:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
   5:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  Description:
   6:Generated_Source\PSoC5/InjectionCounter_PM.c **** *    This file provides the power management source code to API for the
   7:Generated_Source\PSoC5/InjectionCounter_PM.c **** *    Counter.  
   8:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
   9:Generated_Source\PSoC5/InjectionCounter_PM.c **** *   Note:
  10:Generated_Source\PSoC5/InjectionCounter_PM.c **** *     None
  11:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  12:Generated_Source\PSoC5/InjectionCounter_PM.c **** ********************************************************************************
  13:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/InjectionCounter_PM.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC5/InjectionCounter_PM.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC5/InjectionCounter_PM.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/InjectionCounter_PM.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  19:Generated_Source\PSoC5/InjectionCounter_PM.c **** #include "InjectionCounter.h"
  20:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  21:Generated_Source\PSoC5/InjectionCounter_PM.c **** static InjectionCounter_backupStruct InjectionCounter_backup;
  22:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  23:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  24:Generated_Source\PSoC5/InjectionCounter_PM.c **** /*******************************************************************************
  25:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Function Name: InjectionCounter_SaveConfig
  26:Generated_Source\PSoC5/InjectionCounter_PM.c **** ********************************************************************************
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 2


  27:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Summary:
  28:Generated_Source\PSoC5/InjectionCounter_PM.c **** *     Save the current user configuration
  29:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  30:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Parameters:  
  31:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  void
  32:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  33:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Return: 
  34:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  void
  35:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  36:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Global variables:
  37:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  InjectionCounter_backup:  Variables of this global structure are modified to 
  38:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  store the values of non retention configuration registers when Sleep() API is 
  39:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  called.
  40:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  41:Generated_Source\PSoC5/InjectionCounter_PM.c **** *******************************************************************************/
  42:Generated_Source\PSoC5/InjectionCounter_PM.c **** void InjectionCounter_SaveConfig(void) 
  43:Generated_Source\PSoC5/InjectionCounter_PM.c **** {
  31              		.loc 1 43 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  44:Generated_Source\PSoC5/InjectionCounter_PM.c ****     #if (!InjectionCounter_UsingFixedFunction)
  45:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  46:Generated_Source\PSoC5/InjectionCounter_PM.c ****         InjectionCounter_backup.CounterUdb = InjectionCounter_ReadCounter();
  41              		.loc 1 46 0
  42 0004 FFF7FEFF 		bl	InjectionCounter_ReadCounter
  43 0008 0346     		mov	r3, r0
  44 000a 1A46     		mov	r2, r3
  45 000c 044B     		ldr	r3, .L2
  46 000e 5A80     		strh	r2, [r3, #2]	@ movhi
  47:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  48:Generated_Source\PSoC5/InjectionCounter_PM.c ****         #if(!InjectionCounter_ControlRegRemoved)
  49:Generated_Source\PSoC5/InjectionCounter_PM.c ****             InjectionCounter_backup.CounterControlRegister = InjectionCounter_ReadControlRegister()
  47              		.loc 1 49 0
  48 0010 FFF7FEFF 		bl	InjectionCounter_ReadControlRegister
  49 0014 0346     		mov	r3, r0
  50 0016 1A46     		mov	r2, r3
  51 0018 014B     		ldr	r3, .L2
  52 001a 1A71     		strb	r2, [r3, #4]
  50:Generated_Source\PSoC5/InjectionCounter_PM.c ****         #endif /* (!InjectionCounter_ControlRegRemoved) */
  51:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  52:Generated_Source\PSoC5/InjectionCounter_PM.c ****     #endif /* (!InjectionCounter_UsingFixedFunction) */
  53:Generated_Source\PSoC5/InjectionCounter_PM.c **** }
  53              		.loc 1 53 0
  54 001c 80BD     		pop	{r7, pc}
  55              	.L3:
  56 001e 00BF     		.align	2
  57              	.L2:
  58 0020 00000000 		.word	InjectionCounter_backup
  59              		.cfi_endproc
  60              	.LFE0:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 3


  61              		.size	InjectionCounter_SaveConfig, .-InjectionCounter_SaveConfig
  62              		.section	.text.InjectionCounter_RestoreConfig,"ax",%progbits
  63              		.align	2
  64              		.global	InjectionCounter_RestoreConfig
  65              		.thumb
  66              		.thumb_func
  67              		.type	InjectionCounter_RestoreConfig, %function
  68              	InjectionCounter_RestoreConfig:
  69              	.LFB1:
  54:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  55:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  56:Generated_Source\PSoC5/InjectionCounter_PM.c **** /*******************************************************************************
  57:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Function Name: InjectionCounter_RestoreConfig
  58:Generated_Source\PSoC5/InjectionCounter_PM.c **** ********************************************************************************
  59:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  60:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Summary:
  61:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  Restores the current user configuration.
  62:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  63:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Parameters:  
  64:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  void
  65:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  66:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Return: 
  67:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  void
  68:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  69:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Global variables:
  70:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  InjectionCounter_backup:  Variables of this global structure are used to 
  71:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  restore the values of non retention registers on wakeup from sleep mode.
  72:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  73:Generated_Source\PSoC5/InjectionCounter_PM.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/InjectionCounter_PM.c **** void InjectionCounter_RestoreConfig(void) 
  75:Generated_Source\PSoC5/InjectionCounter_PM.c **** {      
  70              		.loc 1 75 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 00AF     		add	r7, sp, #0
  79              		.cfi_def_cfa_register 7
  76:Generated_Source\PSoC5/InjectionCounter_PM.c ****     #if (!InjectionCounter_UsingFixedFunction)
  77:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  78:Generated_Source\PSoC5/InjectionCounter_PM.c ****        InjectionCounter_WriteCounter(InjectionCounter_backup.CounterUdb);
  80              		.loc 1 78 0
  81 0004 054B     		ldr	r3, .L5
  82 0006 5B88     		ldrh	r3, [r3, #2]
  83 0008 1846     		mov	r0, r3
  84 000a FFF7FEFF 		bl	InjectionCounter_WriteCounter
  79:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  80:Generated_Source\PSoC5/InjectionCounter_PM.c ****         #if(!InjectionCounter_ControlRegRemoved)
  81:Generated_Source\PSoC5/InjectionCounter_PM.c ****             InjectionCounter_WriteControlRegister(InjectionCounter_backup.CounterControlRegister);
  85              		.loc 1 81 0
  86 000e 034B     		ldr	r3, .L5
  87 0010 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  88 0012 1846     		mov	r0, r3
  89 0014 FFF7FEFF 		bl	InjectionCounter_WriteControlRegister
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 4


  82:Generated_Source\PSoC5/InjectionCounter_PM.c ****         #endif /* (!InjectionCounter_ControlRegRemoved) */
  83:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  84:Generated_Source\PSoC5/InjectionCounter_PM.c ****     #endif /* (!InjectionCounter_UsingFixedFunction) */
  85:Generated_Source\PSoC5/InjectionCounter_PM.c **** }
  90              		.loc 1 85 0
  91 0018 80BD     		pop	{r7, pc}
  92              	.L6:
  93 001a 00BF     		.align	2
  94              	.L5:
  95 001c 00000000 		.word	InjectionCounter_backup
  96              		.cfi_endproc
  97              	.LFE1:
  98              		.size	InjectionCounter_RestoreConfig, .-InjectionCounter_RestoreConfig
  99              		.section	.text.InjectionCounter_Sleep,"ax",%progbits
 100              		.align	2
 101              		.global	InjectionCounter_Sleep
 102              		.thumb
 103              		.thumb_func
 104              		.type	InjectionCounter_Sleep, %function
 105              	InjectionCounter_Sleep:
 106              	.LFB2:
  86:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  87:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
  88:Generated_Source\PSoC5/InjectionCounter_PM.c **** /*******************************************************************************
  89:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Function Name: InjectionCounter_Sleep
  90:Generated_Source\PSoC5/InjectionCounter_PM.c **** ********************************************************************************
  91:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Summary:
  92:Generated_Source\PSoC5/InjectionCounter_PM.c **** *     Stop and Save the user configuration
  93:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  94:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Parameters:  
  95:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  void
  96:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
  97:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Return: 
  98:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  void
  99:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
 100:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Global variables:
 101:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  InjectionCounter_backup.enableState:  Is modified depending on the enable 
 102:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  state of the block before entering sleep mode.
 103:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
 104:Generated_Source\PSoC5/InjectionCounter_PM.c **** *******************************************************************************/
 105:Generated_Source\PSoC5/InjectionCounter_PM.c **** void InjectionCounter_Sleep(void) 
 106:Generated_Source\PSoC5/InjectionCounter_PM.c **** {
 107              		.loc 1 106 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 1, uses_anonymous_args = 0
 111 0000 80B5     		push	{r7, lr}
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 7, -8
 114              		.cfi_offset 14, -4
 115 0002 00AF     		add	r7, sp, #0
 116              		.cfi_def_cfa_register 7
 107:Generated_Source\PSoC5/InjectionCounter_PM.c ****     #if(!InjectionCounter_ControlRegRemoved)
 108:Generated_Source\PSoC5/InjectionCounter_PM.c ****         /* Save Counter's enable state */
 109:Generated_Source\PSoC5/InjectionCounter_PM.c ****         if(InjectionCounter_CTRL_ENABLE == (InjectionCounter_CONTROL & InjectionCounter_CTRL_ENABLE
 117              		.loc 1 109 0
 118 0004 094B     		ldr	r3, .L10
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 5


 119 0006 1B78     		ldrb	r3, [r3]
 120 0008 DBB2     		uxtb	r3, r3
 121 000a DBB2     		uxtb	r3, r3
 122 000c 5BB2     		sxtb	r3, r3
 123 000e 002B     		cmp	r3, #0
 124 0010 03DA     		bge	.L8
 110:Generated_Source\PSoC5/InjectionCounter_PM.c ****         {
 111:Generated_Source\PSoC5/InjectionCounter_PM.c ****             /* Counter is enabled */
 112:Generated_Source\PSoC5/InjectionCounter_PM.c ****             InjectionCounter_backup.CounterEnableState = 1u;
 125              		.loc 1 112 0
 126 0012 074B     		ldr	r3, .L10+4
 127 0014 0122     		movs	r2, #1
 128 0016 1A70     		strb	r2, [r3]
 129 0018 02E0     		b	.L9
 130              	.L8:
 113:Generated_Source\PSoC5/InjectionCounter_PM.c ****         }
 114:Generated_Source\PSoC5/InjectionCounter_PM.c ****         else
 115:Generated_Source\PSoC5/InjectionCounter_PM.c ****         {
 116:Generated_Source\PSoC5/InjectionCounter_PM.c ****             /* Counter is disabled */
 117:Generated_Source\PSoC5/InjectionCounter_PM.c ****             InjectionCounter_backup.CounterEnableState = 0u;
 131              		.loc 1 117 0
 132 001a 054B     		ldr	r3, .L10+4
 133 001c 0022     		movs	r2, #0
 134 001e 1A70     		strb	r2, [r3]
 135              	.L9:
 118:Generated_Source\PSoC5/InjectionCounter_PM.c ****         }
 119:Generated_Source\PSoC5/InjectionCounter_PM.c ****     #else
 120:Generated_Source\PSoC5/InjectionCounter_PM.c ****         InjectionCounter_backup.CounterEnableState = 1u;
 121:Generated_Source\PSoC5/InjectionCounter_PM.c ****         if(InjectionCounter_backup.CounterEnableState != 0u)
 122:Generated_Source\PSoC5/InjectionCounter_PM.c ****         {
 123:Generated_Source\PSoC5/InjectionCounter_PM.c ****             InjectionCounter_backup.CounterEnableState = 0u;
 124:Generated_Source\PSoC5/InjectionCounter_PM.c ****         }
 125:Generated_Source\PSoC5/InjectionCounter_PM.c ****     #endif /* (!InjectionCounter_ControlRegRemoved) */
 126:Generated_Source\PSoC5/InjectionCounter_PM.c ****     
 127:Generated_Source\PSoC5/InjectionCounter_PM.c ****     InjectionCounter_Stop();
 136              		.loc 1 127 0
 137 0020 FFF7FEFF 		bl	InjectionCounter_Stop
 128:Generated_Source\PSoC5/InjectionCounter_PM.c ****     InjectionCounter_SaveConfig();
 138              		.loc 1 128 0
 139 0024 FFF7FEFF 		bl	InjectionCounter_SaveConfig
 129:Generated_Source\PSoC5/InjectionCounter_PM.c **** }
 140              		.loc 1 129 0
 141 0028 80BD     		pop	{r7, pc}
 142              	.L11:
 143 002a 00BF     		.align	2
 144              	.L10:
 145 002c 79640040 		.word	1073767545
 146 0030 00000000 		.word	InjectionCounter_backup
 147              		.cfi_endproc
 148              	.LFE2:
 149              		.size	InjectionCounter_Sleep, .-InjectionCounter_Sleep
 150              		.section	.text.InjectionCounter_Wakeup,"ax",%progbits
 151              		.align	2
 152              		.global	InjectionCounter_Wakeup
 153              		.thumb
 154              		.thumb_func
 155              		.type	InjectionCounter_Wakeup, %function
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 6


 156              	InjectionCounter_Wakeup:
 157              	.LFB3:
 130:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
 131:Generated_Source\PSoC5/InjectionCounter_PM.c **** 
 132:Generated_Source\PSoC5/InjectionCounter_PM.c **** /*******************************************************************************
 133:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Function Name: InjectionCounter_Wakeup
 134:Generated_Source\PSoC5/InjectionCounter_PM.c **** ********************************************************************************
 135:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
 136:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Summary:
 137:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  Restores and enables the user configuration
 138:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  
 139:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Parameters:  
 140:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  void
 141:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
 142:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Return: 
 143:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  void
 144:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
 145:Generated_Source\PSoC5/InjectionCounter_PM.c **** * Global variables:
 146:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  InjectionCounter_backup.enableState:  Is used to restore the enable state of 
 147:Generated_Source\PSoC5/InjectionCounter_PM.c **** *  block on wakeup from sleep mode.
 148:Generated_Source\PSoC5/InjectionCounter_PM.c **** *
 149:Generated_Source\PSoC5/InjectionCounter_PM.c **** *******************************************************************************/
 150:Generated_Source\PSoC5/InjectionCounter_PM.c **** void InjectionCounter_Wakeup(void) 
 151:Generated_Source\PSoC5/InjectionCounter_PM.c **** {
 158              		.loc 1 151 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 1, uses_anonymous_args = 0
 162 0000 80B5     		push	{r7, lr}
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 7, -8
 165              		.cfi_offset 14, -4
 166 0002 00AF     		add	r7, sp, #0
 167              		.cfi_def_cfa_register 7
 152:Generated_Source\PSoC5/InjectionCounter_PM.c ****     InjectionCounter_RestoreConfig();
 168              		.loc 1 152 0
 169 0004 FFF7FEFF 		bl	InjectionCounter_RestoreConfig
 153:Generated_Source\PSoC5/InjectionCounter_PM.c ****     #if(!InjectionCounter_ControlRegRemoved)
 154:Generated_Source\PSoC5/InjectionCounter_PM.c ****         if(InjectionCounter_backup.CounterEnableState == 1u)
 170              		.loc 1 154 0
 171 0008 034B     		ldr	r3, .L14
 172 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173 000c 012B     		cmp	r3, #1
 174 000e 01D1     		bne	.L12
 155:Generated_Source\PSoC5/InjectionCounter_PM.c ****         {
 156:Generated_Source\PSoC5/InjectionCounter_PM.c ****             /* Enable Counter's operation */
 157:Generated_Source\PSoC5/InjectionCounter_PM.c ****             InjectionCounter_Enable();
 175              		.loc 1 157 0
 176 0010 FFF7FEFF 		bl	InjectionCounter_Enable
 177              	.L12:
 158:Generated_Source\PSoC5/InjectionCounter_PM.c ****         } /* Do nothing if Counter was disabled before */    
 159:Generated_Source\PSoC5/InjectionCounter_PM.c ****     #endif /* (!InjectionCounter_ControlRegRemoved) */
 160:Generated_Source\PSoC5/InjectionCounter_PM.c ****     
 161:Generated_Source\PSoC5/InjectionCounter_PM.c **** }
 178              		.loc 1 161 0
 179 0014 80BD     		pop	{r7, pc}
 180              	.L15:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 7


 181 0016 00BF     		.align	2
 182              	.L14:
 183 0018 00000000 		.word	InjectionCounter_backup
 184              		.cfi_endproc
 185              	.LFE3:
 186              		.size	InjectionCounter_Wakeup, .-InjectionCounter_Wakeup
 187              		.text
 188              	.Letext0:
 189              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 190              		.file 3 "Generated_Source\\PSoC5\\InjectionCounter.h"
 191              		.section	.debug_info,"",%progbits
 192              	.Ldebug_info0:
 193 0000 3A010000 		.4byte	0x13a
 194 0004 0400     		.2byte	0x4
 195 0006 00000000 		.4byte	.Ldebug_abbrev0
 196 000a 04       		.byte	0x4
 197 000b 01       		.uleb128 0x1
 198 000c 18010000 		.4byte	.LASF24
 199 0010 01       		.byte	0x1
 200 0011 6D020000 		.4byte	.LASF25
 201 0015 A3000000 		.4byte	.LASF26
 202 0019 00000000 		.4byte	.Ldebug_ranges0+0
 203 001d 00000000 		.4byte	0
 204 0021 00000000 		.4byte	.Ldebug_line0
 205 0025 02       		.uleb128 0x2
 206 0026 01       		.byte	0x1
 207 0027 06       		.byte	0x6
 208 0028 EF010000 		.4byte	.LASF0
 209 002c 02       		.uleb128 0x2
 210 002d 01       		.byte	0x1
 211 002e 08       		.byte	0x8
 212 002f FC000000 		.4byte	.LASF1
 213 0033 02       		.uleb128 0x2
 214 0034 02       		.byte	0x2
 215 0035 05       		.byte	0x5
 216 0036 48020000 		.4byte	.LASF2
 217 003a 02       		.uleb128 0x2
 218 003b 02       		.byte	0x2
 219 003c 07       		.byte	0x7
 220 003d DC010000 		.4byte	.LASF3
 221 0041 02       		.uleb128 0x2
 222 0042 04       		.byte	0x4
 223 0043 05       		.byte	0x5
 224 0044 0F010000 		.4byte	.LASF4
 225 0048 02       		.uleb128 0x2
 226 0049 04       		.byte	0x4
 227 004a 07       		.byte	0x7
 228 004b 55000000 		.4byte	.LASF5
 229 004f 02       		.uleb128 0x2
 230 0050 08       		.byte	0x8
 231 0051 05       		.byte	0x5
 232 0052 00000000 		.4byte	.LASF6
 233 0056 02       		.uleb128 0x2
 234 0057 08       		.byte	0x8
 235 0058 07       		.byte	0x7
 236 0059 67000000 		.4byte	.LASF7
 237 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 8


 238 005e 04       		.byte	0x4
 239 005f 05       		.byte	0x5
 240 0060 696E7400 		.ascii	"int\000"
 241 0064 02       		.uleb128 0x2
 242 0065 04       		.byte	0x4
 243 0066 07       		.byte	0x7
 244 0067 0E000000 		.4byte	.LASF8
 245 006b 04       		.uleb128 0x4
 246 006c 4F000000 		.4byte	.LASF9
 247 0070 02       		.byte	0x2
 248 0071 3801     		.2byte	0x138
 249 0073 2C000000 		.4byte	0x2c
 250 0077 04       		.uleb128 0x4
 251 0078 52020000 		.4byte	.LASF10
 252 007c 02       		.byte	0x2
 253 007d 3901     		.2byte	0x139
 254 007f 3A000000 		.4byte	0x3a
 255 0083 02       		.uleb128 0x2
 256 0084 04       		.byte	0x4
 257 0085 04       		.byte	0x4
 258 0086 7E000000 		.4byte	.LASF11
 259 008a 02       		.uleb128 0x2
 260 008b 08       		.byte	0x8
 261 008c 04       		.byte	0x4
 262 008d D5010000 		.4byte	.LASF12
 263 0091 02       		.uleb128 0x2
 264 0092 01       		.byte	0x1
 265 0093 08       		.byte	0x8
 266 0094 0A010000 		.4byte	.LASF13
 267 0098 04       		.uleb128 0x4
 268 0099 4A000000 		.4byte	.LASF14
 269 009d 02       		.byte	0x2
 270 009e E201     		.2byte	0x1e2
 271 00a0 A4000000 		.4byte	0xa4
 272 00a4 05       		.uleb128 0x5
 273 00a5 6B000000 		.4byte	0x6b
 274 00a9 02       		.uleb128 0x2
 275 00aa 04       		.byte	0x4
 276 00ab 07       		.byte	0x7
 277 00ac 64020000 		.4byte	.LASF15
 278 00b0 06       		.uleb128 0x6
 279 00b1 06       		.byte	0x6
 280 00b2 03       		.byte	0x3
 281 00b3 40       		.byte	0x40
 282 00b4 DD000000 		.4byte	0xdd
 283 00b8 07       		.uleb128 0x7
 284 00b9 A6010000 		.4byte	.LASF16
 285 00bd 03       		.byte	0x3
 286 00be 42       		.byte	0x42
 287 00bf 6B000000 		.4byte	0x6b
 288 00c3 00       		.byte	0
 289 00c4 07       		.uleb128 0x7
 290 00c5 59020000 		.4byte	.LASF17
 291 00c9 03       		.byte	0x3
 292 00ca 43       		.byte	0x43
 293 00cb 77000000 		.4byte	0x77
 294 00cf 02       		.byte	0x2
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 9


 295 00d0 07       		.uleb128 0x7
 296 00d1 31020000 		.4byte	.LASF18
 297 00d5 03       		.byte	0x3
 298 00d6 46       		.byte	0x46
 299 00d7 6B000000 		.4byte	0x6b
 300 00db 04       		.byte	0x4
 301 00dc 00       		.byte	0
 302 00dd 08       		.uleb128 0x8
 303 00de 13020000 		.4byte	.LASF19
 304 00e2 03       		.byte	0x3
 305 00e3 49       		.byte	0x49
 306 00e4 B0000000 		.4byte	0xb0
 307 00e8 09       		.uleb128 0x9
 308 00e9 B9010000 		.4byte	.LASF20
 309 00ed 01       		.byte	0x1
 310 00ee 2A       		.byte	0x2a
 311 00ef 00000000 		.4byte	.LFB0
 312 00f3 24000000 		.4byte	.LFE0-.LFB0
 313 00f7 01       		.uleb128 0x1
 314 00f8 9C       		.byte	0x9c
 315 00f9 09       		.uleb128 0x9
 316 00fa 84000000 		.4byte	.LASF21
 317 00fe 01       		.byte	0x1
 318 00ff 4A       		.byte	0x4a
 319 0100 00000000 		.4byte	.LFB1
 320 0104 20000000 		.4byte	.LFE1-.LFB1
 321 0108 01       		.uleb128 0x1
 322 0109 9C       		.byte	0x9c
 323 010a 09       		.uleb128 0x9
 324 010b 33000000 		.4byte	.LASF22
 325 010f 01       		.byte	0x1
 326 0110 69       		.byte	0x69
 327 0111 00000000 		.4byte	.LFB2
 328 0115 34000000 		.4byte	.LFE2-.LFB2
 329 0119 01       		.uleb128 0x1
 330 011a 9C       		.byte	0x9c
 331 011b 09       		.uleb128 0x9
 332 011c 1B000000 		.4byte	.LASF23
 333 0120 01       		.byte	0x1
 334 0121 96       		.byte	0x96
 335 0122 00000000 		.4byte	.LFB3
 336 0126 1C000000 		.4byte	.LFE3-.LFB3
 337 012a 01       		.uleb128 0x1
 338 012b 9C       		.byte	0x9c
 339 012c 0A       		.uleb128 0xa
 340 012d FB010000 		.4byte	.LASF27
 341 0131 01       		.byte	0x1
 342 0132 15       		.byte	0x15
 343 0133 DD000000 		.4byte	0xdd
 344 0137 05       		.uleb128 0x5
 345 0138 03       		.byte	0x3
 346 0139 00000000 		.4byte	InjectionCounter_backup
 347 013d 00       		.byte	0
 348              		.section	.debug_abbrev,"",%progbits
 349              	.Ldebug_abbrev0:
 350 0000 01       		.uleb128 0x1
 351 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 10


 352 0002 01       		.byte	0x1
 353 0003 25       		.uleb128 0x25
 354 0004 0E       		.uleb128 0xe
 355 0005 13       		.uleb128 0x13
 356 0006 0B       		.uleb128 0xb
 357 0007 03       		.uleb128 0x3
 358 0008 0E       		.uleb128 0xe
 359 0009 1B       		.uleb128 0x1b
 360 000a 0E       		.uleb128 0xe
 361 000b 55       		.uleb128 0x55
 362 000c 17       		.uleb128 0x17
 363 000d 11       		.uleb128 0x11
 364 000e 01       		.uleb128 0x1
 365 000f 10       		.uleb128 0x10
 366 0010 17       		.uleb128 0x17
 367 0011 00       		.byte	0
 368 0012 00       		.byte	0
 369 0013 02       		.uleb128 0x2
 370 0014 24       		.uleb128 0x24
 371 0015 00       		.byte	0
 372 0016 0B       		.uleb128 0xb
 373 0017 0B       		.uleb128 0xb
 374 0018 3E       		.uleb128 0x3e
 375 0019 0B       		.uleb128 0xb
 376 001a 03       		.uleb128 0x3
 377 001b 0E       		.uleb128 0xe
 378 001c 00       		.byte	0
 379 001d 00       		.byte	0
 380 001e 03       		.uleb128 0x3
 381 001f 24       		.uleb128 0x24
 382 0020 00       		.byte	0
 383 0021 0B       		.uleb128 0xb
 384 0022 0B       		.uleb128 0xb
 385 0023 3E       		.uleb128 0x3e
 386 0024 0B       		.uleb128 0xb
 387 0025 03       		.uleb128 0x3
 388 0026 08       		.uleb128 0x8
 389 0027 00       		.byte	0
 390 0028 00       		.byte	0
 391 0029 04       		.uleb128 0x4
 392 002a 16       		.uleb128 0x16
 393 002b 00       		.byte	0
 394 002c 03       		.uleb128 0x3
 395 002d 0E       		.uleb128 0xe
 396 002e 3A       		.uleb128 0x3a
 397 002f 0B       		.uleb128 0xb
 398 0030 3B       		.uleb128 0x3b
 399 0031 05       		.uleb128 0x5
 400 0032 49       		.uleb128 0x49
 401 0033 13       		.uleb128 0x13
 402 0034 00       		.byte	0
 403 0035 00       		.byte	0
 404 0036 05       		.uleb128 0x5
 405 0037 35       		.uleb128 0x35
 406 0038 00       		.byte	0
 407 0039 49       		.uleb128 0x49
 408 003a 13       		.uleb128 0x13
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 11


 409 003b 00       		.byte	0
 410 003c 00       		.byte	0
 411 003d 06       		.uleb128 0x6
 412 003e 13       		.uleb128 0x13
 413 003f 01       		.byte	0x1
 414 0040 0B       		.uleb128 0xb
 415 0041 0B       		.uleb128 0xb
 416 0042 3A       		.uleb128 0x3a
 417 0043 0B       		.uleb128 0xb
 418 0044 3B       		.uleb128 0x3b
 419 0045 0B       		.uleb128 0xb
 420 0046 01       		.uleb128 0x1
 421 0047 13       		.uleb128 0x13
 422 0048 00       		.byte	0
 423 0049 00       		.byte	0
 424 004a 07       		.uleb128 0x7
 425 004b 0D       		.uleb128 0xd
 426 004c 00       		.byte	0
 427 004d 03       		.uleb128 0x3
 428 004e 0E       		.uleb128 0xe
 429 004f 3A       		.uleb128 0x3a
 430 0050 0B       		.uleb128 0xb
 431 0051 3B       		.uleb128 0x3b
 432 0052 0B       		.uleb128 0xb
 433 0053 49       		.uleb128 0x49
 434 0054 13       		.uleb128 0x13
 435 0055 38       		.uleb128 0x38
 436 0056 0B       		.uleb128 0xb
 437 0057 00       		.byte	0
 438 0058 00       		.byte	0
 439 0059 08       		.uleb128 0x8
 440 005a 16       		.uleb128 0x16
 441 005b 00       		.byte	0
 442 005c 03       		.uleb128 0x3
 443 005d 0E       		.uleb128 0xe
 444 005e 3A       		.uleb128 0x3a
 445 005f 0B       		.uleb128 0xb
 446 0060 3B       		.uleb128 0x3b
 447 0061 0B       		.uleb128 0xb
 448 0062 49       		.uleb128 0x49
 449 0063 13       		.uleb128 0x13
 450 0064 00       		.byte	0
 451 0065 00       		.byte	0
 452 0066 09       		.uleb128 0x9
 453 0067 2E       		.uleb128 0x2e
 454 0068 00       		.byte	0
 455 0069 3F       		.uleb128 0x3f
 456 006a 19       		.uleb128 0x19
 457 006b 03       		.uleb128 0x3
 458 006c 0E       		.uleb128 0xe
 459 006d 3A       		.uleb128 0x3a
 460 006e 0B       		.uleb128 0xb
 461 006f 3B       		.uleb128 0x3b
 462 0070 0B       		.uleb128 0xb
 463 0071 27       		.uleb128 0x27
 464 0072 19       		.uleb128 0x19
 465 0073 11       		.uleb128 0x11
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 12


 466 0074 01       		.uleb128 0x1
 467 0075 12       		.uleb128 0x12
 468 0076 06       		.uleb128 0x6
 469 0077 40       		.uleb128 0x40
 470 0078 18       		.uleb128 0x18
 471 0079 9642     		.uleb128 0x2116
 472 007b 19       		.uleb128 0x19
 473 007c 00       		.byte	0
 474 007d 00       		.byte	0
 475 007e 0A       		.uleb128 0xa
 476 007f 34       		.uleb128 0x34
 477 0080 00       		.byte	0
 478 0081 03       		.uleb128 0x3
 479 0082 0E       		.uleb128 0xe
 480 0083 3A       		.uleb128 0x3a
 481 0084 0B       		.uleb128 0xb
 482 0085 3B       		.uleb128 0x3b
 483 0086 0B       		.uleb128 0xb
 484 0087 49       		.uleb128 0x49
 485 0088 13       		.uleb128 0x13
 486 0089 02       		.uleb128 0x2
 487 008a 18       		.uleb128 0x18
 488 008b 00       		.byte	0
 489 008c 00       		.byte	0
 490 008d 00       		.byte	0
 491              		.section	.debug_aranges,"",%progbits
 492 0000 34000000 		.4byte	0x34
 493 0004 0200     		.2byte	0x2
 494 0006 00000000 		.4byte	.Ldebug_info0
 495 000a 04       		.byte	0x4
 496 000b 00       		.byte	0
 497 000c 0000     		.2byte	0
 498 000e 0000     		.2byte	0
 499 0010 00000000 		.4byte	.LFB0
 500 0014 24000000 		.4byte	.LFE0-.LFB0
 501 0018 00000000 		.4byte	.LFB1
 502 001c 20000000 		.4byte	.LFE1-.LFB1
 503 0020 00000000 		.4byte	.LFB2
 504 0024 34000000 		.4byte	.LFE2-.LFB2
 505 0028 00000000 		.4byte	.LFB3
 506 002c 1C000000 		.4byte	.LFE3-.LFB3
 507 0030 00000000 		.4byte	0
 508 0034 00000000 		.4byte	0
 509              		.section	.debug_ranges,"",%progbits
 510              	.Ldebug_ranges0:
 511 0000 00000000 		.4byte	.LFB0
 512 0004 24000000 		.4byte	.LFE0
 513 0008 00000000 		.4byte	.LFB1
 514 000c 20000000 		.4byte	.LFE1
 515 0010 00000000 		.4byte	.LFB2
 516 0014 34000000 		.4byte	.LFE2
 517 0018 00000000 		.4byte	.LFB3
 518 001c 1C000000 		.4byte	.LFE3
 519 0020 00000000 		.4byte	0
 520 0024 00000000 		.4byte	0
 521              		.section	.debug_line,"",%progbits
 522              	.Ldebug_line0:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 13


 523 0000 BD000000 		.section	.debug_str,"MS",%progbits,1
 523      02006600 
 523      00000201 
 523      FB0E0D00 
 523      01010101 
 524              	.LASF6:
 525 0000 6C6F6E67 		.ascii	"long long int\000"
 525      206C6F6E 
 525      6720696E 
 525      7400
 526              	.LASF8:
 527 000e 756E7369 		.ascii	"unsigned int\000"
 527      676E6564 
 527      20696E74 
 527      00
 528              	.LASF23:
 529 001b 496E6A65 		.ascii	"InjectionCounter_Wakeup\000"
 529      6374696F 
 529      6E436F75 
 529      6E746572 
 529      5F57616B 
 530              	.LASF22:
 531 0033 496E6A65 		.ascii	"InjectionCounter_Sleep\000"
 531      6374696F 
 531      6E436F75 
 531      6E746572 
 531      5F536C65 
 532              	.LASF14:
 533 004a 72656738 		.ascii	"reg8\000"
 533      00
 534              	.LASF9:
 535 004f 75696E74 		.ascii	"uint8\000"
 535      3800
 536              	.LASF5:
 537 0055 6C6F6E67 		.ascii	"long unsigned int\000"
 537      20756E73 
 537      69676E65 
 537      6420696E 
 537      7400
 538              	.LASF7:
 539 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 539      206C6F6E 
 539      6720756E 
 539      7369676E 
 539      65642069 
 540              	.LASF11:
 541 007e 666C6F61 		.ascii	"float\000"
 541      7400
 542              	.LASF21:
 543 0084 496E6A65 		.ascii	"InjectionCounter_RestoreConfig\000"
 543      6374696F 
 543      6E436F75 
 543      6E746572 
 543      5F526573 
 544              	.LASF26:
 545 00a3 433A5C55 		.ascii	"C:\\Users\\Bruger\\Desktop\\CODE\\PSOC5\\CY8CKIT-59"
 545      73657273 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 14


 545      5C427275 
 545      6765725C 
 545      4465736B 
 546 00d0 2D417264 		.ascii	"-Arduino\\CY8CKIT59_Ardudino-Speeduino.cydsn\000"
 546      75696E6F 
 546      5C435938 
 546      434B4954 
 546      35395F41 
 547              	.LASF1:
 548 00fc 756E7369 		.ascii	"unsigned char\000"
 548      676E6564 
 548      20636861 
 548      7200
 549              	.LASF13:
 550 010a 63686172 		.ascii	"char\000"
 550      00
 551              	.LASF4:
 552 010f 6C6F6E67 		.ascii	"long int\000"
 552      20696E74 
 552      00
 553              	.LASF24:
 554 0118 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 554      4320342E 
 554      392E3320 
 554      32303135 
 554      30333033 
 555 014b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 555      20726576 
 555      6973696F 
 555      6E203232 
 555      31323230 
 556 017e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 556      66756E63 
 556      74696F6E 
 556      2D736563 
 556      74696F6E 
 557              	.LASF16:
 558 01a6 436F756E 		.ascii	"CounterEnableState\000"
 558      74657245 
 558      6E61626C 
 558      65537461 
 558      746500
 559              	.LASF20:
 560 01b9 496E6A65 		.ascii	"InjectionCounter_SaveConfig\000"
 560      6374696F 
 560      6E436F75 
 560      6E746572 
 560      5F536176 
 561              	.LASF12:
 562 01d5 646F7562 		.ascii	"double\000"
 562      6C6500
 563              	.LASF3:
 564 01dc 73686F72 		.ascii	"short unsigned int\000"
 564      7420756E 
 564      7369676E 
 564      65642069 
 564      6E7400
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccR3xIuU.s 			page 15


 565              	.LASF0:
 566 01ef 7369676E 		.ascii	"signed char\000"
 566      65642063 
 566      68617200 
 567              	.LASF27:
 568 01fb 496E6A65 		.ascii	"InjectionCounter_backup\000"
 568      6374696F 
 568      6E436F75 
 568      6E746572 
 568      5F626163 
 569              	.LASF19:
 570 0213 496E6A65 		.ascii	"InjectionCounter_backupStruct\000"
 570      6374696F 
 570      6E436F75 
 570      6E746572 
 570      5F626163 
 571              	.LASF18:
 572 0231 436F756E 		.ascii	"CounterControlRegister\000"
 572      74657243 
 572      6F6E7472 
 572      6F6C5265 
 572      67697374 
 573              	.LASF2:
 574 0248 73686F72 		.ascii	"short int\000"
 574      7420696E 
 574      7400
 575              	.LASF10:
 576 0252 75696E74 		.ascii	"uint16\000"
 576      313600
 577              	.LASF17:
 578 0259 436F756E 		.ascii	"CounterUdb\000"
 578      74657255 
 578      646200
 579              	.LASF15:
 580 0264 73697A65 		.ascii	"sizetype\000"
 580      74797065 
 580      00
 581              	.LASF25:
 582 026d 47656E65 		.ascii	"Generated_Source\\PSoC5\\InjectionCounter_PM.c\000"
 582      72617465 
 582      645F536F 
 582      75726365 
 582      5C50536F 
 583              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
