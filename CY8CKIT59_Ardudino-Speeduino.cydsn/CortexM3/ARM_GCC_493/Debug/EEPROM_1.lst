ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"EEPROM_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.EEPROM_1_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	EEPROM_1_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	EEPROM_1_Enable, %function
  24              	EEPROM_1_Enable:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\EEPROM_1.c"
   1:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/EEPROM_1.c **** * File Name: EEPROM_1.c
   3:Generated_Source\PSoC5/EEPROM_1.c **** * Version 3.0
   4:Generated_Source\PSoC5/EEPROM_1.c **** *
   5:Generated_Source\PSoC5/EEPROM_1.c **** *  Description:
   6:Generated_Source\PSoC5/EEPROM_1.c **** *   Provides the source code to the API for the EEPROM component.
   7:Generated_Source\PSoC5/EEPROM_1.c **** *
   8:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
   9:Generated_Source\PSoC5/EEPROM_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/EEPROM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/EEPROM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/EEPROM_1.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/EEPROM_1.c **** 
  15:Generated_Source\PSoC5/EEPROM_1.c **** #include "EEPROM_1.h"
  16:Generated_Source\PSoC5/EEPROM_1.c **** 
  17:Generated_Source\PSoC5/EEPROM_1.c **** 
  18:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
  19:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_Enable
  20:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
  21:Generated_Source\PSoC5/EEPROM_1.c **** *
  22:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
  23:Generated_Source\PSoC5/EEPROM_1.c **** *  Enable the EEPROM block. Also reads the temperature and stores it for
  24:Generated_Source\PSoC5/EEPROM_1.c **** *  future writes.
  25:Generated_Source\PSoC5/EEPROM_1.c **** *
  26:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
  27:Generated_Source\PSoC5/EEPROM_1.c **** *  None
  28:Generated_Source\PSoC5/EEPROM_1.c **** *
  29:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
  30:Generated_Source\PSoC5/EEPROM_1.c **** *  None
  31:Generated_Source\PSoC5/EEPROM_1.c **** *
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 2


  32:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
  33:Generated_Source\PSoC5/EEPROM_1.c **** void EEPROM_1_Enable(void) 
  34:Generated_Source\PSoC5/EEPROM_1.c **** {
  27              		.loc 1 34 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  35:Generated_Source\PSoC5/EEPROM_1.c ****     /* Read temperature value */
  36:Generated_Source\PSoC5/EEPROM_1.c ****     (void)CySetTemp();
  37              		.loc 1 36 0
  38 0004 FFF7FEFF 		bl	CySetTemp
  37:Generated_Source\PSoC5/EEPROM_1.c **** 
  38:Generated_Source\PSoC5/EEPROM_1.c ****     /* Start EEPROM block */
  39:Generated_Source\PSoC5/EEPROM_1.c ****     CyEEPROM_Start();
  39              		.loc 1 39 0
  40 0008 FFF7FEFF 		bl	CyEEPROM_Start
  40:Generated_Source\PSoC5/EEPROM_1.c **** }
  41              		.loc 1 40 0
  42 000c 80BD     		pop	{r7, pc}
  43              		.cfi_endproc
  44              	.LFE0:
  45              		.size	EEPROM_1_Enable, .-EEPROM_1_Enable
  46 000e 00BF     		.section	.text.EEPROM_1_Start,"ax",%progbits
  47              		.align	2
  48              		.global	EEPROM_1_Start
  49              		.thumb
  50              		.thumb_func
  51              		.type	EEPROM_1_Start, %function
  52              	EEPROM_1_Start:
  53              	.LFB1:
  41:Generated_Source\PSoC5/EEPROM_1.c **** 
  42:Generated_Source\PSoC5/EEPROM_1.c **** 
  43:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
  44:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_Start
  45:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
  46:Generated_Source\PSoC5/EEPROM_1.c **** *
  47:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
  48:Generated_Source\PSoC5/EEPROM_1.c **** *  Starts EEPROM.
  49:Generated_Source\PSoC5/EEPROM_1.c **** *
  50:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
  51:Generated_Source\PSoC5/EEPROM_1.c **** *  None
  52:Generated_Source\PSoC5/EEPROM_1.c **** *
  53:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
  54:Generated_Source\PSoC5/EEPROM_1.c **** *  None
  55:Generated_Source\PSoC5/EEPROM_1.c **** *
  56:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
  57:Generated_Source\PSoC5/EEPROM_1.c **** void EEPROM_1_Start(void) 
  58:Generated_Source\PSoC5/EEPROM_1.c **** {
  54              		.loc 1 58 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 3


  57              		@ frame_needed = 1, uses_anonymous_args = 0
  58 0000 80B5     		push	{r7, lr}
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  59:Generated_Source\PSoC5/EEPROM_1.c ****     EEPROM_1_Enable();
  64              		.loc 1 59 0
  65 0004 FFF7FEFF 		bl	EEPROM_1_Enable
  60:Generated_Source\PSoC5/EEPROM_1.c **** }
  66              		.loc 1 60 0
  67 0008 80BD     		pop	{r7, pc}
  68              		.cfi_endproc
  69              	.LFE1:
  70              		.size	EEPROM_1_Start, .-EEPROM_1_Start
  71 000a 00BF     		.section	.text.EEPROM_1_Stop,"ax",%progbits
  72              		.align	2
  73              		.global	EEPROM_1_Stop
  74              		.thumb
  75              		.thumb_func
  76              		.type	EEPROM_1_Stop, %function
  77              	EEPROM_1_Stop:
  78              	.LFB2:
  61:Generated_Source\PSoC5/EEPROM_1.c **** 
  62:Generated_Source\PSoC5/EEPROM_1.c **** 
  63:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
  64:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_Stop
  65:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
  66:Generated_Source\PSoC5/EEPROM_1.c **** *
  67:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
  68:Generated_Source\PSoC5/EEPROM_1.c **** *  Stops and powers down EEPROM.
  69:Generated_Source\PSoC5/EEPROM_1.c **** *
  70:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
  71:Generated_Source\PSoC5/EEPROM_1.c **** *  None
  72:Generated_Source\PSoC5/EEPROM_1.c **** *
  73:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
  74:Generated_Source\PSoC5/EEPROM_1.c **** *  None
  75:Generated_Source\PSoC5/EEPROM_1.c **** *
  76:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
  77:Generated_Source\PSoC5/EEPROM_1.c **** void EEPROM_1_Stop (void) 
  78:Generated_Source\PSoC5/EEPROM_1.c **** {
  79              		.loc 1 78 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83 0000 80B5     		push	{r7, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  79:Generated_Source\PSoC5/EEPROM_1.c ****     /* Stop and power down EEPROM block */
  80:Generated_Source\PSoC5/EEPROM_1.c ****     CyEEPROM_Stop();
  89              		.loc 1 80 0
  90 0004 FFF7FEFF 		bl	CyEEPROM_Stop
  81:Generated_Source\PSoC5/EEPROM_1.c **** }
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 4


  91              		.loc 1 81 0
  92 0008 80BD     		pop	{r7, pc}
  93              		.cfi_endproc
  94              	.LFE2:
  95              		.size	EEPROM_1_Stop, .-EEPROM_1_Stop
  96 000a 00BF     		.section	.text.EEPROM_1_WriteByte,"ax",%progbits
  97              		.align	2
  98              		.global	EEPROM_1_WriteByte
  99              		.thumb
 100              		.thumb_func
 101              		.type	EEPROM_1_WriteByte, %function
 102              	EEPROM_1_WriteByte:
 103              	.LFB3:
  82:Generated_Source\PSoC5/EEPROM_1.c **** 
  83:Generated_Source\PSoC5/EEPROM_1.c **** 
  84:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
  85:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_WriteByte
  86:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
  87:Generated_Source\PSoC5/EEPROM_1.c **** *
  88:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
  89:Generated_Source\PSoC5/EEPROM_1.c **** *  Writes a byte of data to the EEPROM. This function blocks until
  90:Generated_Source\PSoC5/EEPROM_1.c **** *  the function is complete. For a reliable write procedure to occur you should
  91:Generated_Source\PSoC5/EEPROM_1.c **** *  call EEPROM_1_UpdateTemperature() function if the temperature of the
  92:Generated_Source\PSoC5/EEPROM_1.c **** *  silicon has been changed for more than 10C since the component was started.
  93:Generated_Source\PSoC5/EEPROM_1.c **** *
  94:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
  95:Generated_Source\PSoC5/EEPROM_1.c **** *  dataByte:  The byte of data to write to the EEPROM
  96:Generated_Source\PSoC5/EEPROM_1.c **** *  address:   The address of data to be written. The maximum address is dependent
  97:Generated_Source\PSoC5/EEPROM_1.c **** *             on the EEPROM size.
  98:Generated_Source\PSoC5/EEPROM_1.c **** *
  99:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
 100:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_SUCCESS, if the operation was successful.
 101:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_BAD_PARAM, if the parameter sectorNumber is out of range.
 102:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_LOCKED, if the SPC is being used.
 103:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_UNKNOWN, if there was an SPC error.
 104:Generated_Source\PSoC5/EEPROM_1.c **** *
 105:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/EEPROM_1.c **** cystatus EEPROM_1_WriteByte(uint8 dataByte, uint16 address) 
 107:Generated_Source\PSoC5/EEPROM_1.c **** {
 104              		.loc 1 107 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 16
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 84B0     		sub	sp, sp, #16
 113              		.cfi_def_cfa_offset 24
 114 0004 00AF     		add	r7, sp, #0
 115              		.cfi_def_cfa_register 7
 116 0006 0346     		mov	r3, r0
 117 0008 0A46     		mov	r2, r1
 118 000a FB71     		strb	r3, [r7, #7]
 119 000c 1346     		mov	r3, r2	@ movhi
 120 000e BB80     		strh	r3, [r7, #4]	@ movhi
 108:Generated_Source\PSoC5/EEPROM_1.c ****     cystatus status;
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 5


 109:Generated_Source\PSoC5/EEPROM_1.c ****     uint16 rowNumber;
 110:Generated_Source\PSoC5/EEPROM_1.c ****     uint16 byteNumber;
 111:Generated_Source\PSoC5/EEPROM_1.c ****     
 112:Generated_Source\PSoC5/EEPROM_1.c ****     CySpcStart();
 121              		.loc 1 112 0
 122 0010 FFF7FEFF 		bl	CySpcStart
 113:Generated_Source\PSoC5/EEPROM_1.c **** 
 114:Generated_Source\PSoC5/EEPROM_1.c ****     if (address < CY_EEPROM_SIZE)
 123              		.loc 1 114 0
 124 0014 BB88     		ldrh	r3, [r7, #4]
 125 0016 B3F5006F 		cmp	r3, #2048
 126 001a 75D2     		bcs	.L5
 115:Generated_Source\PSoC5/EEPROM_1.c ****     {
 116:Generated_Source\PSoC5/EEPROM_1.c ****         rowNumber = address/(uint16)CY_EEPROM_SIZEOF_ROW;
 127              		.loc 1 116 0
 128 001c BB88     		ldrh	r3, [r7, #4]
 129 001e 1B09     		lsrs	r3, r3, #4
 130 0020 7B81     		strh	r3, [r7, #10]	@ movhi
 117:Generated_Source\PSoC5/EEPROM_1.c ****         byteNumber = address - (rowNumber * ((uint16)CY_EEPROM_SIZEOF_ROW));
 131              		.loc 1 117 0
 132 0022 7B89     		ldrh	r3, [r7, #10]	@ movhi
 133 0024 1A46     		mov	r2, r3	@ movhi
 134 0026 1203     		lsls	r2, r2, #12
 135 0028 D31A     		subs	r3, r2, r3
 136 002a 1B01     		lsls	r3, r3, #4
 137 002c 9AB2     		uxth	r2, r3
 138 002e BB88     		ldrh	r3, [r7, #4]	@ movhi
 139 0030 1344     		add	r3, r3, r2
 140 0032 3B81     		strh	r3, [r7, #8]	@ movhi
 118:Generated_Source\PSoC5/EEPROM_1.c ****         if(CYRET_SUCCESS == CySpcLock())
 141              		.loc 1 118 0
 142 0034 FFF7FEFF 		bl	CySpcLock
 143 0038 0346     		mov	r3, r0
 144 003a 002B     		cmp	r3, #0
 145 003c 61D1     		bne	.L6
 119:Generated_Source\PSoC5/EEPROM_1.c ****         {
 120:Generated_Source\PSoC5/EEPROM_1.c ****             status = CySpcLoadMultiByte(CY_SPC_FIRST_EE_ARRAYID, byteNumber, &dataByte, \
 146              		.loc 1 120 0
 147 003e 3A89     		ldrh	r2, [r7, #8]
 148 0040 FB1D     		adds	r3, r7, #7
 149 0042 4020     		movs	r0, #64
 150 0044 1146     		mov	r1, r2
 151 0046 1A46     		mov	r2, r3
 152 0048 0123     		movs	r3, #1
 153 004a FFF7FEFF 		bl	CySpcLoadMultiByte
 154 004e F860     		str	r0, [r7, #12]
 121:Generated_Source\PSoC5/EEPROM_1.c ****                                                                     EEPROM_1_SPC_BYTE_WRITE_SIZE);
 122:Generated_Source\PSoC5/EEPROM_1.c ****             if (CYRET_STARTED == status)
 155              		.loc 1 122 0
 156 0050 FB68     		ldr	r3, [r7, #12]
 157 0052 072B     		cmp	r3, #7
 158 0054 4CD1     		bne	.L7
 123:Generated_Source\PSoC5/EEPROM_1.c ****             {
 124:Generated_Source\PSoC5/EEPROM_1.c ****                 /* Plan for failure */
 125:Generated_Source\PSoC5/EEPROM_1.c ****                 status = CYRET_UNKNOWN;
 159              		.loc 1 125 0
 160 0056 4FF0FF33 		mov	r3, #-1
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 6


 161 005a FB60     		str	r3, [r7, #12]
 126:Generated_Source\PSoC5/EEPROM_1.c **** 
 127:Generated_Source\PSoC5/EEPROM_1.c ****                 while(CY_SPC_BUSY)
 162              		.loc 1 127 0
 163 005c 00BF     		nop
 164              	.L8:
 165              		.loc 1 127 0 is_stmt 0 discriminator 1
 166 005e 2E4B     		ldr	r3, .L20
 167 0060 1B78     		ldrb	r3, [r3]
 168 0062 DBB2     		uxtb	r3, r3
 169 0064 03F00203 		and	r3, r3, #2
 170 0068 002B     		cmp	r3, #0
 171 006a F8D0     		beq	.L8
 128:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 129:Generated_Source\PSoC5/EEPROM_1.c ****                     /* Wait until SPC becomes idle */
 130:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 131:Generated_Source\PSoC5/EEPROM_1.c **** 
 132:Generated_Source\PSoC5/EEPROM_1.c ****                 if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 172              		.loc 1 132 0 is_stmt 1
 173 006c 2A4B     		ldr	r3, .L20
 174 006e 1B78     		ldrb	r3, [r3]
 175 0070 DBB2     		uxtb	r3, r3
 176 0072 03F00203 		and	r3, r3, #2
 177 0076 002B     		cmp	r3, #0
 178 0078 08D0     		beq	.L9
 179              		.loc 1 132 0 is_stmt 0 discriminator 1
 180 007a 274B     		ldr	r3, .L20
 181 007c 1B78     		ldrb	r3, [r3]
 182 007e DBB2     		uxtb	r3, r3
 183 0080 9B08     		lsrs	r3, r3, #2
 184 0082 DBB2     		uxtb	r3, r3
 185 0084 002B     		cmp	r3, #0
 186 0086 01D1     		bne	.L9
 133:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 134:Generated_Source\PSoC5/EEPROM_1.c ****                     status = CYRET_SUCCESS;
 187              		.loc 1 134 0 is_stmt 1
 188 0088 0023     		movs	r3, #0
 189 008a FB60     		str	r3, [r7, #12]
 190              	.L9:
 135:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 136:Generated_Source\PSoC5/EEPROM_1.c ****                 /* Command to erase and program the row. */
 137:Generated_Source\PSoC5/EEPROM_1.c ****                 if(CYRET_SUCCESS == status)
 191              		.loc 1 137 0
 192 008c FB68     		ldr	r3, [r7, #12]
 193 008e 002B     		cmp	r3, #0
 194 0090 2AD1     		bne	.L10
 138:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 139:Generated_Source\PSoC5/EEPROM_1.c ****                     if(CySpcWriteRow(CY_SPC_FIRST_EE_ARRAYID, (uint16)rowNumber, dieTemperature[0u]
 195              		.loc 1 139 0
 196 0092 224B     		ldr	r3, .L20+4
 197 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 198 0096 214B     		ldr	r3, .L20+4
 199 0098 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 200 009a 7989     		ldrh	r1, [r7, #10]
 201 009c 4020     		movs	r0, #64
 202 009e FFF7FEFF 		bl	CySpcWriteRow
 203 00a2 0346     		mov	r3, r0
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 7


 204 00a4 072B     		cmp	r3, #7
 205 00a6 1BD1     		bne	.L11
 140:Generated_Source\PSoC5/EEPROM_1.c ****                     dieTemperature[1u]) == CYRET_STARTED)
 141:Generated_Source\PSoC5/EEPROM_1.c ****                     {
 142:Generated_Source\PSoC5/EEPROM_1.c ****                         /* Plan for failure */
 143:Generated_Source\PSoC5/EEPROM_1.c ****                         status = CYRET_UNKNOWN;
 206              		.loc 1 143 0
 207 00a8 4FF0FF33 		mov	r3, #-1
 208 00ac FB60     		str	r3, [r7, #12]
 144:Generated_Source\PSoC5/EEPROM_1.c **** 
 145:Generated_Source\PSoC5/EEPROM_1.c ****                         while(CY_SPC_BUSY)
 209              		.loc 1 145 0
 210 00ae 00BF     		nop
 211              	.L12:
 212              		.loc 1 145 0 is_stmt 0 discriminator 1
 213 00b0 194B     		ldr	r3, .L20
 214 00b2 1B78     		ldrb	r3, [r3]
 215 00b4 DBB2     		uxtb	r3, r3
 216 00b6 03F00203 		and	r3, r3, #2
 217 00ba 002B     		cmp	r3, #0
 218 00bc F8D0     		beq	.L12
 146:Generated_Source\PSoC5/EEPROM_1.c ****                         {
 147:Generated_Source\PSoC5/EEPROM_1.c ****                             /* Wait until SPC becomes idle */
 148:Generated_Source\PSoC5/EEPROM_1.c ****                         }
 149:Generated_Source\PSoC5/EEPROM_1.c **** 
 150:Generated_Source\PSoC5/EEPROM_1.c ****                         /* SPC is idle now */
 151:Generated_Source\PSoC5/EEPROM_1.c ****                         if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 219              		.loc 1 151 0 is_stmt 1
 220 00be 164B     		ldr	r3, .L20
 221 00c0 1B78     		ldrb	r3, [r3]
 222 00c2 DBB2     		uxtb	r3, r3
 223 00c4 03F00203 		and	r3, r3, #2
 224 00c8 002B     		cmp	r3, #0
 225 00ca 17D0     		beq	.L16
 226              		.loc 1 151 0 is_stmt 0 discriminator 1
 227 00cc 124B     		ldr	r3, .L20
 228 00ce 1B78     		ldrb	r3, [r3]
 229 00d0 DBB2     		uxtb	r3, r3
 230 00d2 9B08     		lsrs	r3, r3, #2
 231 00d4 DBB2     		uxtb	r3, r3
 232 00d6 002B     		cmp	r3, #0
 233 00d8 10D1     		bne	.L16
 152:Generated_Source\PSoC5/EEPROM_1.c ****                         {
 153:Generated_Source\PSoC5/EEPROM_1.c ****                             status = CYRET_SUCCESS;
 234              		.loc 1 153 0 is_stmt 1
 235 00da 0023     		movs	r3, #0
 236 00dc FB60     		str	r3, [r7, #12]
 237 00de 0DE0     		b	.L16
 238              	.L11:
 154:Generated_Source\PSoC5/EEPROM_1.c ****                         }
 155:Generated_Source\PSoC5/EEPROM_1.c ****                     }
 156:Generated_Source\PSoC5/EEPROM_1.c ****                     else
 157:Generated_Source\PSoC5/EEPROM_1.c ****                     {
 158:Generated_Source\PSoC5/EEPROM_1.c ****                         status = CYRET_UNKNOWN;
 239              		.loc 1 158 0
 240 00e0 4FF0FF33 		mov	r3, #-1
 241 00e4 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 8


 242 00e6 09E0     		b	.L16
 243              	.L10:
 159:Generated_Source\PSoC5/EEPROM_1.c ****                     }
 160:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 161:Generated_Source\PSoC5/EEPROM_1.c ****                 else
 162:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 163:Generated_Source\PSoC5/EEPROM_1.c ****                     status = CYRET_UNKNOWN;
 244              		.loc 1 163 0
 245 00e8 4FF0FF33 		mov	r3, #-1
 246 00ec FB60     		str	r3, [r7, #12]
 247 00ee 05E0     		b	.L16
 248              	.L7:
 164:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 165:Generated_Source\PSoC5/EEPROM_1.c ****             }
 166:Generated_Source\PSoC5/EEPROM_1.c ****             else
 167:Generated_Source\PSoC5/EEPROM_1.c ****             {
 168:Generated_Source\PSoC5/EEPROM_1.c ****                 if (CYRET_BAD_PARAM != status)
 249              		.loc 1 168 0
 250 00f0 FB68     		ldr	r3, [r7, #12]
 251 00f2 012B     		cmp	r3, #1
 252 00f4 02D0     		beq	.L16
 169:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 170:Generated_Source\PSoC5/EEPROM_1.c ****                     status = CYRET_UNKNOWN;
 253              		.loc 1 170 0
 254 00f6 4FF0FF33 		mov	r3, #-1
 255 00fa FB60     		str	r3, [r7, #12]
 256              	.L16:
 171:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 172:Generated_Source\PSoC5/EEPROM_1.c ****             }
 173:Generated_Source\PSoC5/EEPROM_1.c ****             CySpcUnlock();
 257              		.loc 1 173 0
 258 00fc FFF7FEFF 		bl	CySpcUnlock
 259 0100 04E0     		b	.L18
 260              	.L6:
 174:Generated_Source\PSoC5/EEPROM_1.c ****         }
 175:Generated_Source\PSoC5/EEPROM_1.c ****         else
 176:Generated_Source\PSoC5/EEPROM_1.c ****         {
 177:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_LOCKED;
 261              		.loc 1 177 0
 262 0102 0423     		movs	r3, #4
 263 0104 FB60     		str	r3, [r7, #12]
 264 0106 01E0     		b	.L18
 265              	.L5:
 178:Generated_Source\PSoC5/EEPROM_1.c ****         }
 179:Generated_Source\PSoC5/EEPROM_1.c ****     }
 180:Generated_Source\PSoC5/EEPROM_1.c ****     else
 181:Generated_Source\PSoC5/EEPROM_1.c ****     {
 182:Generated_Source\PSoC5/EEPROM_1.c ****         status = CYRET_BAD_PARAM;
 266              		.loc 1 182 0
 267 0108 0123     		movs	r3, #1
 268 010a FB60     		str	r3, [r7, #12]
 269              	.L18:
 183:Generated_Source\PSoC5/EEPROM_1.c ****     }
 184:Generated_Source\PSoC5/EEPROM_1.c **** 
 185:Generated_Source\PSoC5/EEPROM_1.c **** 
 186:Generated_Source\PSoC5/EEPROM_1.c ****     return (status);
 270              		.loc 1 186 0
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 9


 271 010c FB68     		ldr	r3, [r7, #12]
 187:Generated_Source\PSoC5/EEPROM_1.c **** }
 272              		.loc 1 187 0
 273 010e 1846     		mov	r0, r3
 274 0110 1037     		adds	r7, r7, #16
 275              		.cfi_def_cfa_offset 8
 276 0112 BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 0114 80BD     		pop	{r7, pc}
 280              	.L21:
 281 0116 00BF     		.align	2
 282              	.L20:
 283 0118 22470040 		.word	1073760034
 284 011c 00000000 		.word	dieTemperature
 285              		.cfi_endproc
 286              	.LFE3:
 287              		.size	EEPROM_1_WriteByte, .-EEPROM_1_WriteByte
 288              		.section	.text.EEPROM_1_ReadByte,"ax",%progbits
 289              		.align	2
 290              		.global	EEPROM_1_ReadByte
 291              		.thumb
 292              		.thumb_func
 293              		.type	EEPROM_1_ReadByte, %function
 294              	EEPROM_1_ReadByte:
 295              	.LFB4:
 188:Generated_Source\PSoC5/EEPROM_1.c **** 
 189:Generated_Source\PSoC5/EEPROM_1.c **** 
 190:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
 191:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_ReadByte
 192:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
 193:Generated_Source\PSoC5/EEPROM_1.c **** *
 194:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
 195:Generated_Source\PSoC5/EEPROM_1.c **** *  Reads and returns a byte of data from the on-chip EEPROM memory. Although
 196:Generated_Source\PSoC5/EEPROM_1.c **** *  the data is present in the CPU memory space, this function provides an
 197:Generated_Source\PSoC5/EEPROM_1.c **** *  intuitive user interface, addressing the EEPROM memory as a separate block with
 198:Generated_Source\PSoC5/EEPROM_1.c **** *  the first EERPOM byte address equal to 0x0000.
 199:Generated_Source\PSoC5/EEPROM_1.c **** *
 200:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
 201:Generated_Source\PSoC5/EEPROM_1.c **** *  address:   The address of data to be read. The maximum address is limited by the
 202:Generated_Source\PSoC5/EEPROM_1.c **** *             size of the EEPROM array on a specific device.
 203:Generated_Source\PSoC5/EEPROM_1.c **** *
 204:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
 205:Generated_Source\PSoC5/EEPROM_1.c **** *  Data located at an address.
 206:Generated_Source\PSoC5/EEPROM_1.c **** *
 207:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
 208:Generated_Source\PSoC5/EEPROM_1.c **** uint8 EEPROM_1_ReadByte(uint16 address) 
 209:Generated_Source\PSoC5/EEPROM_1.c **** {
 296              		.loc 1 209 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 16
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 80B5     		push	{r7, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 10


 305              		.cfi_def_cfa_offset 24
 306 0004 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 308 0006 0346     		mov	r3, r0
 309 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 210:Generated_Source\PSoC5/EEPROM_1.c ****     uint8 retByte;
 211:Generated_Source\PSoC5/EEPROM_1.c ****     uint8 interruptState;
 212:Generated_Source\PSoC5/EEPROM_1.c **** 
 213:Generated_Source\PSoC5/EEPROM_1.c ****     interruptState = CyEnterCriticalSection();
 310              		.loc 1 213 0
 311 000a FFF7FEFF 		bl	CyEnterCriticalSection
 312 000e 0346     		mov	r3, r0
 313 0010 FB73     		strb	r3, [r7, #15]
 214:Generated_Source\PSoC5/EEPROM_1.c **** 
 215:Generated_Source\PSoC5/EEPROM_1.c ****     /* Request access to EEPROM for reading.
 216:Generated_Source\PSoC5/EEPROM_1.c ****     This is needed to reserve PHUB for read operation from EEPROM */
 217:Generated_Source\PSoC5/EEPROM_1.c ****     CyEEPROM_ReadReserve();
 314              		.loc 1 217 0
 315 0012 FFF7FEFF 		bl	CyEEPROM_ReadReserve
 218:Generated_Source\PSoC5/EEPROM_1.c ****     
 219:Generated_Source\PSoC5/EEPROM_1.c ****     retByte = *((reg8 *) (CYDEV_EE_BASE + address));
 316              		.loc 1 219 0
 317 0016 FB88     		ldrh	r3, [r7, #6]
 318 0018 03F18043 		add	r3, r3, #1073741824
 319 001c 03F50043 		add	r3, r3, #32768
 320 0020 1B78     		ldrb	r3, [r3]
 321 0022 BB73     		strb	r3, [r7, #14]
 220:Generated_Source\PSoC5/EEPROM_1.c **** 
 221:Generated_Source\PSoC5/EEPROM_1.c ****     /* Release EEPROM array */
 222:Generated_Source\PSoC5/EEPROM_1.c ****     CyEEPROM_ReadRelease();
 322              		.loc 1 222 0
 323 0024 FFF7FEFF 		bl	CyEEPROM_ReadRelease
 223:Generated_Source\PSoC5/EEPROM_1.c ****     
 224:Generated_Source\PSoC5/EEPROM_1.c ****     CyExitCriticalSection(interruptState);
 324              		.loc 1 224 0
 325 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 326 002a 1846     		mov	r0, r3
 327 002c FFF7FEFF 		bl	CyExitCriticalSection
 225:Generated_Source\PSoC5/EEPROM_1.c **** 
 226:Generated_Source\PSoC5/EEPROM_1.c ****     return (retByte);
 328              		.loc 1 226 0
 329 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 227:Generated_Source\PSoC5/EEPROM_1.c **** }
 330              		.loc 1 227 0
 331 0032 1846     		mov	r0, r3
 332 0034 1037     		adds	r7, r7, #16
 333              		.cfi_def_cfa_offset 8
 334 0036 BD46     		mov	sp, r7
 335              		.cfi_def_cfa_register 13
 336              		@ sp needed
 337 0038 80BD     		pop	{r7, pc}
 338              		.cfi_endproc
 339              	.LFE4:
 340              		.size	EEPROM_1_ReadByte, .-EEPROM_1_ReadByte
 341 003a 00BF     		.section	.text.EEPROM_1_UpdateTemperature,"ax",%progbits
 342              		.align	2
 343              		.global	EEPROM_1_UpdateTemperature
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 11


 344              		.thumb
 345              		.thumb_func
 346              		.type	EEPROM_1_UpdateTemperature, %function
 347              	EEPROM_1_UpdateTemperature:
 348              	.LFB5:
 228:Generated_Source\PSoC5/EEPROM_1.c **** 
 229:Generated_Source\PSoC5/EEPROM_1.c **** 
 230:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
 231:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_UpdateTemperature
 232:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
 233:Generated_Source\PSoC5/EEPROM_1.c **** *
 234:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
 235:Generated_Source\PSoC5/EEPROM_1.c **** *  Updates and stores the temperature value. This function should be called
 236:Generated_Source\PSoC5/EEPROM_1.c **** *  before EEPROM writes if the temperature may have been changed by more than
 237:Generated_Source\PSoC5/EEPROM_1.c **** *  10 degrees Celsius.
 238:Generated_Source\PSoC5/EEPROM_1.c **** *
 239:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
 240:Generated_Source\PSoC5/EEPROM_1.c **** *  None
 241:Generated_Source\PSoC5/EEPROM_1.c **** *
 242:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
 243:Generated_Source\PSoC5/EEPROM_1.c **** *  Status of operation, 0 if operation complete, non-zero value if error
 244:Generated_Source\PSoC5/EEPROM_1.c **** *  was detected.
 245:Generated_Source\PSoC5/EEPROM_1.c **** *
 246:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/EEPROM_1.c **** uint8 EEPROM_1_UpdateTemperature(void) 
 248:Generated_Source\PSoC5/EEPROM_1.c **** {
 349              		.loc 1 248 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353 0000 80B5     		push	{r7, lr}
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 00AF     		add	r7, sp, #0
 358              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC5/EEPROM_1.c ****     return ((uint8)CySetTemp());
 359              		.loc 1 249 0
 360 0004 FFF7FEFF 		bl	CySetTemp
 361 0008 0346     		mov	r3, r0
 362 000a DBB2     		uxtb	r3, r3
 250:Generated_Source\PSoC5/EEPROM_1.c **** }
 363              		.loc 1 250 0
 364 000c 1846     		mov	r0, r3
 365 000e 80BD     		pop	{r7, pc}
 366              		.cfi_endproc
 367              	.LFE5:
 368              		.size	EEPROM_1_UpdateTemperature, .-EEPROM_1_UpdateTemperature
 369              		.section	.text.EEPROM_1_EraseSector,"ax",%progbits
 370              		.align	2
 371              		.global	EEPROM_1_EraseSector
 372              		.thumb
 373              		.thumb_func
 374              		.type	EEPROM_1_EraseSector, %function
 375              	EEPROM_1_EraseSector:
 376              	.LFB6:
 251:Generated_Source\PSoC5/EEPROM_1.c **** 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 12


 252:Generated_Source\PSoC5/EEPROM_1.c **** 
 253:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
 254:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_EraseSector
 255:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
 256:Generated_Source\PSoC5/EEPROM_1.c **** *
 257:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
 258:Generated_Source\PSoC5/EEPROM_1.c **** *  Erase an EEPROM sector (64 rows). This function blocks until the erase
 259:Generated_Source\PSoC5/EEPROM_1.c **** *  operation is complete. Using this API helps to erase the EEPROM sector at
 260:Generated_Source\PSoC5/EEPROM_1.c **** *  a time. This is faster than using individual writes but affects a cycle
 261:Generated_Source\PSoC5/EEPROM_1.c **** *  recourse of the whole EEPROM row.
 262:Generated_Source\PSoC5/EEPROM_1.c **** *
 263:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
 264:Generated_Source\PSoC5/EEPROM_1.c **** *  sectorNumber:  The sector number to erase.
 265:Generated_Source\PSoC5/EEPROM_1.c **** *
 266:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
 267:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_SUCCESS, if the operation was successful.
 268:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_BAD_PARAM, if the parameter sectorNumber is out of range.
 269:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_LOCKED, if the SPC is being used.
 270:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_UNKNOWN, if there was an SPC error.
 271:Generated_Source\PSoC5/EEPROM_1.c **** *
 272:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
 273:Generated_Source\PSoC5/EEPROM_1.c **** cystatus EEPROM_1_EraseSector(uint8 sectorNumber) 
 274:Generated_Source\PSoC5/EEPROM_1.c **** {
 377              		.loc 1 274 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 16
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381 0000 80B5     		push	{r7, lr}
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 7, -8
 384              		.cfi_offset 14, -4
 385 0002 84B0     		sub	sp, sp, #16
 386              		.cfi_def_cfa_offset 24
 387 0004 00AF     		add	r7, sp, #0
 388              		.cfi_def_cfa_register 7
 389 0006 0346     		mov	r3, r0
 390 0008 FB71     		strb	r3, [r7, #7]
 275:Generated_Source\PSoC5/EEPROM_1.c ****     cystatus status;
 276:Generated_Source\PSoC5/EEPROM_1.c ****     
 277:Generated_Source\PSoC5/EEPROM_1.c ****     CySpcStart();
 391              		.loc 1 277 0
 392 000a FFF7FEFF 		bl	CySpcStart
 278:Generated_Source\PSoC5/EEPROM_1.c **** 
 279:Generated_Source\PSoC5/EEPROM_1.c ****     if(sectorNumber < (uint8) EEPROM_1_SECTORS_NUMBER)
 393              		.loc 1 279 0
 394 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 395 0010 012B     		cmp	r3, #1
 396 0012 31D8     		bhi	.L27
 280:Generated_Source\PSoC5/EEPROM_1.c ****     {
 281:Generated_Source\PSoC5/EEPROM_1.c ****         /* See if we can get SPC. */
 282:Generated_Source\PSoC5/EEPROM_1.c ****         if(CySpcLock() == CYRET_SUCCESS)
 397              		.loc 1 282 0
 398 0014 FFF7FEFF 		bl	CySpcLock
 399 0018 0346     		mov	r3, r0
 400 001a 002B     		cmp	r3, #0
 401 001c 29D1     		bne	.L28
 283:Generated_Source\PSoC5/EEPROM_1.c ****         {
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 13


 284:Generated_Source\PSoC5/EEPROM_1.c ****             if(CySpcEraseSector(CY_SPC_FIRST_EE_ARRAYID, sectorNumber) == CYRET_STARTED)
 402              		.loc 1 284 0
 403 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 404 0020 4020     		movs	r0, #64
 405 0022 1946     		mov	r1, r3
 406 0024 FFF7FEFF 		bl	CySpcEraseSector
 407 0028 0346     		mov	r3, r0
 408 002a 072B     		cmp	r3, #7
 409 002c 1BD1     		bne	.L29
 285:Generated_Source\PSoC5/EEPROM_1.c ****             {
 286:Generated_Source\PSoC5/EEPROM_1.c ****                 /* Plan for failure */
 287:Generated_Source\PSoC5/EEPROM_1.c ****                 status = CYRET_UNKNOWN;
 410              		.loc 1 287 0
 411 002e 4FF0FF33 		mov	r3, #-1
 412 0032 FB60     		str	r3, [r7, #12]
 288:Generated_Source\PSoC5/EEPROM_1.c **** 
 289:Generated_Source\PSoC5/EEPROM_1.c ****                 while(CY_SPC_BUSY)
 413              		.loc 1 289 0
 414 0034 00BF     		nop
 415              	.L30:
 416              		.loc 1 289 0 is_stmt 0 discriminator 1
 417 0036 144B     		ldr	r3, .L36
 418 0038 1B78     		ldrb	r3, [r3]
 419 003a DBB2     		uxtb	r3, r3
 420 003c 03F00203 		and	r3, r3, #2
 421 0040 002B     		cmp	r3, #0
 422 0042 F8D0     		beq	.L30
 290:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 291:Generated_Source\PSoC5/EEPROM_1.c ****                     /* Wait until SPC becomes idle */
 292:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 293:Generated_Source\PSoC5/EEPROM_1.c **** 
 294:Generated_Source\PSoC5/EEPROM_1.c ****                 /* SPC is idle now */
 295:Generated_Source\PSoC5/EEPROM_1.c ****                 if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 423              		.loc 1 295 0 is_stmt 1
 424 0044 104B     		ldr	r3, .L36
 425 0046 1B78     		ldrb	r3, [r3]
 426 0048 DBB2     		uxtb	r3, r3
 427 004a 03F00203 		and	r3, r3, #2
 428 004e 002B     		cmp	r3, #0
 429 0050 0CD0     		beq	.L32
 430              		.loc 1 295 0 is_stmt 0 discriminator 1
 431 0052 0D4B     		ldr	r3, .L36
 432 0054 1B78     		ldrb	r3, [r3]
 433 0056 DBB2     		uxtb	r3, r3
 434 0058 9B08     		lsrs	r3, r3, #2
 435 005a DBB2     		uxtb	r3, r3
 436 005c 002B     		cmp	r3, #0
 437 005e 05D1     		bne	.L32
 296:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 297:Generated_Source\PSoC5/EEPROM_1.c ****                     status = CYRET_SUCCESS;
 438              		.loc 1 297 0 is_stmt 1
 439 0060 0023     		movs	r3, #0
 440 0062 FB60     		str	r3, [r7, #12]
 441 0064 02E0     		b	.L32
 442              	.L29:
 298:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 299:Generated_Source\PSoC5/EEPROM_1.c ****             }
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 14


 300:Generated_Source\PSoC5/EEPROM_1.c ****             else
 301:Generated_Source\PSoC5/EEPROM_1.c ****             {
 302:Generated_Source\PSoC5/EEPROM_1.c ****                 status = CYRET_UNKNOWN;
 443              		.loc 1 302 0
 444 0066 4FF0FF33 		mov	r3, #-1
 445 006a FB60     		str	r3, [r7, #12]
 446              	.L32:
 303:Generated_Source\PSoC5/EEPROM_1.c ****             }
 304:Generated_Source\PSoC5/EEPROM_1.c **** 
 305:Generated_Source\PSoC5/EEPROM_1.c ****             /* Unlock SPC so that someone else can use it. */
 306:Generated_Source\PSoC5/EEPROM_1.c ****             CySpcUnlock();
 447              		.loc 1 306 0
 448 006c FFF7FEFF 		bl	CySpcUnlock
 449 0070 04E0     		b	.L34
 450              	.L28:
 307:Generated_Source\PSoC5/EEPROM_1.c ****         }
 308:Generated_Source\PSoC5/EEPROM_1.c ****         else
 309:Generated_Source\PSoC5/EEPROM_1.c ****         {
 310:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_LOCKED;
 451              		.loc 1 310 0
 452 0072 0423     		movs	r3, #4
 453 0074 FB60     		str	r3, [r7, #12]
 454 0076 01E0     		b	.L34
 455              	.L27:
 311:Generated_Source\PSoC5/EEPROM_1.c ****         }
 312:Generated_Source\PSoC5/EEPROM_1.c ****     }
 313:Generated_Source\PSoC5/EEPROM_1.c ****     else
 314:Generated_Source\PSoC5/EEPROM_1.c ****     {
 315:Generated_Source\PSoC5/EEPROM_1.c ****         status = CYRET_BAD_PARAM;
 456              		.loc 1 315 0
 457 0078 0123     		movs	r3, #1
 458 007a FB60     		str	r3, [r7, #12]
 459              	.L34:
 316:Generated_Source\PSoC5/EEPROM_1.c ****     }
 317:Generated_Source\PSoC5/EEPROM_1.c **** 
 318:Generated_Source\PSoC5/EEPROM_1.c ****     return(status);
 460              		.loc 1 318 0
 461 007c FB68     		ldr	r3, [r7, #12]
 319:Generated_Source\PSoC5/EEPROM_1.c **** }
 462              		.loc 1 319 0
 463 007e 1846     		mov	r0, r3
 464 0080 1037     		adds	r7, r7, #16
 465              		.cfi_def_cfa_offset 8
 466 0082 BD46     		mov	sp, r7
 467              		.cfi_def_cfa_register 13
 468              		@ sp needed
 469 0084 80BD     		pop	{r7, pc}
 470              	.L37:
 471 0086 00BF     		.align	2
 472              	.L36:
 473 0088 22470040 		.word	1073760034
 474              		.cfi_endproc
 475              	.LFE6:
 476              		.size	EEPROM_1_EraseSector, .-EEPROM_1_EraseSector
 477              		.section	.text.EEPROM_1_Write,"ax",%progbits
 478              		.align	2
 479              		.global	EEPROM_1_Write
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 15


 480              		.thumb
 481              		.thumb_func
 482              		.type	EEPROM_1_Write, %function
 483              	EEPROM_1_Write:
 484              	.LFB7:
 320:Generated_Source\PSoC5/EEPROM_1.c **** 
 321:Generated_Source\PSoC5/EEPROM_1.c **** 
 322:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
 323:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_Write
 324:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
 325:Generated_Source\PSoC5/EEPROM_1.c **** *
 326:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
 327:Generated_Source\PSoC5/EEPROM_1.c **** *  Writes a row (16 bytes) of data to the EEPROM. This function blocks until
 328:Generated_Source\PSoC5/EEPROM_1.c **** *  the write operation is complete. Compared to functions that write one byte,
 329:Generated_Source\PSoC5/EEPROM_1.c **** *  this function allows writing a whole row (16 bytes) at a time. For
 330:Generated_Source\PSoC5/EEPROM_1.c **** *  a reliable write procedure to occur you should call the
 331:Generated_Source\PSoC5/EEPROM_1.c **** *  EEPROM_1_UpdateTemperature() function if the temperature of the
 332:Generated_Source\PSoC5/EEPROM_1.c **** *  silicon has changed for more than 10C since component was started.
 333:Generated_Source\PSoC5/EEPROM_1.c **** *
 334:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
 335:Generated_Source\PSoC5/EEPROM_1.c **** *  rowData:    The address of the data to write to the EEPROM.
 336:Generated_Source\PSoC5/EEPROM_1.c **** *  rowNumber:  The row number to write.
 337:Generated_Source\PSoC5/EEPROM_1.c **** *
 338:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
 339:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_SUCCESS, if the operation was successful.
 340:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_BAD_PARAM, if the parameter rowNumber is out of range.
 341:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_LOCKED, if the SPC is being used.
 342:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_UNKNOWN, if there was an SPC error.
 343:Generated_Source\PSoC5/EEPROM_1.c **** *
 344:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
 345:Generated_Source\PSoC5/EEPROM_1.c **** cystatus EEPROM_1_Write(const uint8 * rowData, uint8 rowNumber) 
 346:Generated_Source\PSoC5/EEPROM_1.c **** {
 485              		.loc 1 346 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 16
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489 0000 80B5     		push	{r7, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 84B0     		sub	sp, sp, #16
 494              		.cfi_def_cfa_offset 24
 495 0004 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 497 0006 7860     		str	r0, [r7, #4]
 498 0008 0B46     		mov	r3, r1
 499 000a FB70     		strb	r3, [r7, #3]
 347:Generated_Source\PSoC5/EEPROM_1.c ****     cystatus status;
 348:Generated_Source\PSoC5/EEPROM_1.c ****     
 349:Generated_Source\PSoC5/EEPROM_1.c ****     CySpcStart();
 500              		.loc 1 349 0
 501 000c FFF7FEFF 		bl	CySpcStart
 350:Generated_Source\PSoC5/EEPROM_1.c **** 
 351:Generated_Source\PSoC5/EEPROM_1.c ****     if(rowNumber < (uint8) CY_EEPROM_NUMBER_ROWS)
 502              		.loc 1 351 0
 503 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 504 0012 5BB2     		sxtb	r3, r3
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 16


 505 0014 002B     		cmp	r3, #0
 506 0016 5FDB     		blt	.L39
 352:Generated_Source\PSoC5/EEPROM_1.c ****     {
 353:Generated_Source\PSoC5/EEPROM_1.c ****         /* See if we can get SPC. */
 354:Generated_Source\PSoC5/EEPROM_1.c ****         if(CySpcLock() == CYRET_SUCCESS)
 507              		.loc 1 354 0
 508 0018 FFF7FEFF 		bl	CySpcLock
 509 001c 0346     		mov	r3, r0
 510 001e 002B     		cmp	r3, #0
 511 0020 57D1     		bne	.L40
 355:Generated_Source\PSoC5/EEPROM_1.c ****         {
 356:Generated_Source\PSoC5/EEPROM_1.c ****             /* Plan for failure */
 357:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_UNKNOWN;
 512              		.loc 1 357 0
 513 0022 4FF0FF33 		mov	r3, #-1
 514 0026 FB60     		str	r3, [r7, #12]
 358:Generated_Source\PSoC5/EEPROM_1.c **** 
 359:Generated_Source\PSoC5/EEPROM_1.c ****             /* Command to load a row of data */
 360:Generated_Source\PSoC5/EEPROM_1.c ****             if(CySpcLoadRow(CY_SPC_FIRST_EE_ARRAYID, rowData, CYDEV_EEPROM_ROW_SIZE) == CYRET_START
 515              		.loc 1 360 0
 516 0028 4020     		movs	r0, #64
 517 002a 7968     		ldr	r1, [r7, #4]
 518 002c 1022     		movs	r2, #16
 519 002e FFF7FEFF 		bl	CySpcLoadRow
 520 0032 0346     		mov	r3, r0
 521 0034 072B     		cmp	r3, #7
 522 0036 49D1     		bne	.L41
 361:Generated_Source\PSoC5/EEPROM_1.c ****             {
 362:Generated_Source\PSoC5/EEPROM_1.c ****                 while(CY_SPC_BUSY)
 523              		.loc 1 362 0
 524 0038 00BF     		nop
 525              	.L42:
 526              		.loc 1 362 0 is_stmt 0 discriminator 1
 527 003a 2B4B     		ldr	r3, .L52
 528 003c 1B78     		ldrb	r3, [r3]
 529 003e DBB2     		uxtb	r3, r3
 530 0040 03F00203 		and	r3, r3, #2
 531 0044 002B     		cmp	r3, #0
 532 0046 F8D0     		beq	.L42
 363:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 364:Generated_Source\PSoC5/EEPROM_1.c ****                     /* Wait until SPC becomes idle */
 365:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 366:Generated_Source\PSoC5/EEPROM_1.c **** 
 367:Generated_Source\PSoC5/EEPROM_1.c ****                 /* SPC is idle now */
 368:Generated_Source\PSoC5/EEPROM_1.c ****                 if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 533              		.loc 1 368 0 is_stmt 1
 534 0048 274B     		ldr	r3, .L52
 535 004a 1B78     		ldrb	r3, [r3]
 536 004c DBB2     		uxtb	r3, r3
 537 004e 03F00203 		and	r3, r3, #2
 538 0052 002B     		cmp	r3, #0
 539 0054 08D0     		beq	.L43
 540              		.loc 1 368 0 is_stmt 0 discriminator 1
 541 0056 244B     		ldr	r3, .L52
 542 0058 1B78     		ldrb	r3, [r3]
 543 005a DBB2     		uxtb	r3, r3
 544 005c 9B08     		lsrs	r3, r3, #2
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 17


 545 005e DBB2     		uxtb	r3, r3
 546 0060 002B     		cmp	r3, #0
 547 0062 01D1     		bne	.L43
 369:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 370:Generated_Source\PSoC5/EEPROM_1.c ****                     status = CYRET_SUCCESS;
 548              		.loc 1 370 0 is_stmt 1
 549 0064 0023     		movs	r3, #0
 550 0066 FB60     		str	r3, [r7, #12]
 551              	.L43:
 371:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 372:Generated_Source\PSoC5/EEPROM_1.c **** 
 373:Generated_Source\PSoC5/EEPROM_1.c ****                 /* Command to erase and program the row. */
 374:Generated_Source\PSoC5/EEPROM_1.c ****                 if(status == CYRET_SUCCESS)
 552              		.loc 1 374 0
 553 0068 FB68     		ldr	r3, [r7, #12]
 554 006a 002B     		cmp	r3, #0
 555 006c 2BD1     		bne	.L44
 375:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 376:Generated_Source\PSoC5/EEPROM_1.c ****                     if(CySpcWriteRow(CY_SPC_FIRST_EE_ARRAYID, (uint16)rowNumber, dieTemperature[0u]
 556              		.loc 1 376 0
 557 006e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 558 0070 99B2     		uxth	r1, r3
 559 0072 1E4B     		ldr	r3, .L52+4
 560 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 561 0076 1D4B     		ldr	r3, .L52+4
 562 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 563 007a 4020     		movs	r0, #64
 564 007c FFF7FEFF 		bl	CySpcWriteRow
 565 0080 0346     		mov	r3, r0
 566 0082 072B     		cmp	r3, #7
 567 0084 1BD1     		bne	.L45
 377:Generated_Source\PSoC5/EEPROM_1.c ****                     dieTemperature[1u]) == CYRET_STARTED)
 378:Generated_Source\PSoC5/EEPROM_1.c ****                     {
 379:Generated_Source\PSoC5/EEPROM_1.c ****                         /* Plan for failure */
 380:Generated_Source\PSoC5/EEPROM_1.c ****                         status = CYRET_UNKNOWN;
 568              		.loc 1 380 0
 569 0086 4FF0FF33 		mov	r3, #-1
 570 008a FB60     		str	r3, [r7, #12]
 381:Generated_Source\PSoC5/EEPROM_1.c **** 
 382:Generated_Source\PSoC5/EEPROM_1.c ****                         while(CY_SPC_BUSY)
 571              		.loc 1 382 0
 572 008c 00BF     		nop
 573              	.L46:
 574              		.loc 1 382 0 is_stmt 0 discriminator 1
 575 008e 164B     		ldr	r3, .L52
 576 0090 1B78     		ldrb	r3, [r3]
 577 0092 DBB2     		uxtb	r3, r3
 578 0094 03F00203 		and	r3, r3, #2
 579 0098 002B     		cmp	r3, #0
 580 009a F8D0     		beq	.L46
 383:Generated_Source\PSoC5/EEPROM_1.c ****                         {
 384:Generated_Source\PSoC5/EEPROM_1.c ****                             /* Wait until SPC becomes idle */
 385:Generated_Source\PSoC5/EEPROM_1.c ****                         }
 386:Generated_Source\PSoC5/EEPROM_1.c **** 
 387:Generated_Source\PSoC5/EEPROM_1.c ****                         /* SPC is idle now */
 388:Generated_Source\PSoC5/EEPROM_1.c ****                         if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 581              		.loc 1 388 0 is_stmt 1
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 18


 582 009c 124B     		ldr	r3, .L52
 583 009e 1B78     		ldrb	r3, [r3]
 584 00a0 DBB2     		uxtb	r3, r3
 585 00a2 03F00203 		and	r3, r3, #2
 586 00a6 002B     		cmp	r3, #0
 587 00a8 10D0     		beq	.L41
 588              		.loc 1 388 0 is_stmt 0 discriminator 1
 589 00aa 0F4B     		ldr	r3, .L52
 590 00ac 1B78     		ldrb	r3, [r3]
 591 00ae DBB2     		uxtb	r3, r3
 592 00b0 9B08     		lsrs	r3, r3, #2
 593 00b2 DBB2     		uxtb	r3, r3
 594 00b4 002B     		cmp	r3, #0
 595 00b6 09D1     		bne	.L41
 389:Generated_Source\PSoC5/EEPROM_1.c ****                         {
 390:Generated_Source\PSoC5/EEPROM_1.c ****                             status = CYRET_SUCCESS;
 596              		.loc 1 390 0 is_stmt 1
 597 00b8 0023     		movs	r3, #0
 598 00ba FB60     		str	r3, [r7, #12]
 599 00bc 06E0     		b	.L41
 600              	.L45:
 391:Generated_Source\PSoC5/EEPROM_1.c ****                         }
 392:Generated_Source\PSoC5/EEPROM_1.c ****                     }
 393:Generated_Source\PSoC5/EEPROM_1.c ****                     else
 394:Generated_Source\PSoC5/EEPROM_1.c ****                     {
 395:Generated_Source\PSoC5/EEPROM_1.c ****                         status = CYRET_UNKNOWN;
 601              		.loc 1 395 0
 602 00be 4FF0FF33 		mov	r3, #-1
 603 00c2 FB60     		str	r3, [r7, #12]
 604 00c4 02E0     		b	.L41
 605              	.L44:
 396:Generated_Source\PSoC5/EEPROM_1.c ****                     }
 397:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 398:Generated_Source\PSoC5/EEPROM_1.c ****                 else
 399:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 400:Generated_Source\PSoC5/EEPROM_1.c ****                     status = CYRET_UNKNOWN;
 606              		.loc 1 400 0
 607 00c6 4FF0FF33 		mov	r3, #-1
 608 00ca FB60     		str	r3, [r7, #12]
 609              	.L41:
 401:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 402:Generated_Source\PSoC5/EEPROM_1.c ****             }
 403:Generated_Source\PSoC5/EEPROM_1.c **** 
 404:Generated_Source\PSoC5/EEPROM_1.c ****             /* Unlock SPC so that someone else can use it. */
 405:Generated_Source\PSoC5/EEPROM_1.c ****             CySpcUnlock();
 610              		.loc 1 405 0
 611 00cc FFF7FEFF 		bl	CySpcUnlock
 612 00d0 04E0     		b	.L50
 613              	.L40:
 406:Generated_Source\PSoC5/EEPROM_1.c ****         }
 407:Generated_Source\PSoC5/EEPROM_1.c ****         else
 408:Generated_Source\PSoC5/EEPROM_1.c ****         {
 409:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_LOCKED;
 614              		.loc 1 409 0
 615 00d2 0423     		movs	r3, #4
 616 00d4 FB60     		str	r3, [r7, #12]
 617 00d6 01E0     		b	.L50
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 19


 618              	.L39:
 410:Generated_Source\PSoC5/EEPROM_1.c ****         }
 411:Generated_Source\PSoC5/EEPROM_1.c ****     }
 412:Generated_Source\PSoC5/EEPROM_1.c ****     else
 413:Generated_Source\PSoC5/EEPROM_1.c ****     {
 414:Generated_Source\PSoC5/EEPROM_1.c ****         status = CYRET_BAD_PARAM;
 619              		.loc 1 414 0
 620 00d8 0123     		movs	r3, #1
 621 00da FB60     		str	r3, [r7, #12]
 622              	.L50:
 415:Generated_Source\PSoC5/EEPROM_1.c ****     }
 416:Generated_Source\PSoC5/EEPROM_1.c **** 
 417:Generated_Source\PSoC5/EEPROM_1.c ****     return(status);
 623              		.loc 1 417 0
 624 00dc FB68     		ldr	r3, [r7, #12]
 418:Generated_Source\PSoC5/EEPROM_1.c **** }
 625              		.loc 1 418 0
 626 00de 1846     		mov	r0, r3
 627 00e0 1037     		adds	r7, r7, #16
 628              		.cfi_def_cfa_offset 8
 629 00e2 BD46     		mov	sp, r7
 630              		.cfi_def_cfa_register 13
 631              		@ sp needed
 632 00e4 80BD     		pop	{r7, pc}
 633              	.L53:
 634 00e6 00BF     		.align	2
 635              	.L52:
 636 00e8 22470040 		.word	1073760034
 637 00ec 00000000 		.word	dieTemperature
 638              		.cfi_endproc
 639              	.LFE7:
 640              		.size	EEPROM_1_Write, .-EEPROM_1_Write
 641              		.section	.text.EEPROM_1_StartWrite,"ax",%progbits
 642              		.align	2
 643              		.global	EEPROM_1_StartWrite
 644              		.thumb
 645              		.thumb_func
 646              		.type	EEPROM_1_StartWrite, %function
 647              	EEPROM_1_StartWrite:
 648              	.LFB8:
 419:Generated_Source\PSoC5/EEPROM_1.c **** 
 420:Generated_Source\PSoC5/EEPROM_1.c **** 
 421:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
 422:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_StartWrite
 423:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
 424:Generated_Source\PSoC5/EEPROM_1.c **** *
 425:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
 426:Generated_Source\PSoC5/EEPROM_1.c **** *  Starts a write of a row (16 bytes) of data to the EEPROM.
 427:Generated_Source\PSoC5/EEPROM_1.c **** *  This function does not block. The function returns once the SPC has begun
 428:Generated_Source\PSoC5/EEPROM_1.c **** *  writing the data. This function must be used in combination with
 429:Generated_Source\PSoC5/EEPROM_1.c **** *  EEPROM_1_Query(). EEPROM_1_Query() must be called
 430:Generated_Source\PSoC5/EEPROM_1.c **** *  until it returns a status other than CYRET_STARTED. That indicates that the
 431:Generated_Source\PSoC5/EEPROM_1.c **** *  write has completed. Until EEPROM_1_Query() detects that
 432:Generated_Source\PSoC5/EEPROM_1.c **** *  the write is complete, the SPC is marked as locked to prevent another
 433:Generated_Source\PSoC5/EEPROM_1.c **** *  SPC operation from being performed. For a reliable write procedure to occur
 434:Generated_Source\PSoC5/EEPROM_1.c **** *  you should call EEPROM_1_UpdateTemperature() API if the temperature
 435:Generated_Source\PSoC5/EEPROM_1.c **** *  of the silicon has changed for more than 10C since component was started.
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 20


 436:Generated_Source\PSoC5/EEPROM_1.c **** *
 437:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
 438:Generated_Source\PSoC5/EEPROM_1.c **** *  rowData:    The address of the data to write to the EEPROM.
 439:Generated_Source\PSoC5/EEPROM_1.c **** *  rowNumber:  The row number to write.
 440:Generated_Source\PSoC5/EEPROM_1.c **** *
 441:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
 442:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_STARTED, if the SPC command to write was successfully started.
 443:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_BAD_PARAM, if the parameter rowNumber is out of range.
 444:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_LOCKED, if the SPC is being used.
 445:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_UNKNOWN, if there was an SPC error.
 446:Generated_Source\PSoC5/EEPROM_1.c **** *
 447:Generated_Source\PSoC5/EEPROM_1.c **** * Side effects:
 448:Generated_Source\PSoC5/EEPROM_1.c **** *  After calling this API, the device should not be powered down, reset or switched
 449:Generated_Source\PSoC5/EEPROM_1.c **** *  to low power modes until EEPROM operation is complete. 
 450:Generated_Source\PSoC5/EEPROM_1.c **** *  Ignoring this recommendation may lead to data corruption or silicon
 451:Generated_Source\PSoC5/EEPROM_1.c **** *  unexpected behavior.
 452:Generated_Source\PSoC5/EEPROM_1.c **** *
 453:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
 454:Generated_Source\PSoC5/EEPROM_1.c **** cystatus EEPROM_1_StartWrite(const uint8 * rowData, uint8 rowNumber) \
 455:Generated_Source\PSoC5/EEPROM_1.c **** 
 456:Generated_Source\PSoC5/EEPROM_1.c **** {
 649              		.loc 1 456 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 16
 652              		@ frame_needed = 1, uses_anonymous_args = 0
 653 0000 80B5     		push	{r7, lr}
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 7, -8
 656              		.cfi_offset 14, -4
 657 0002 84B0     		sub	sp, sp, #16
 658              		.cfi_def_cfa_offset 24
 659 0004 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 661 0006 7860     		str	r0, [r7, #4]
 662 0008 0B46     		mov	r3, r1
 663 000a FB70     		strb	r3, [r7, #3]
 457:Generated_Source\PSoC5/EEPROM_1.c ****     cystatus status;
 458:Generated_Source\PSoC5/EEPROM_1.c ****     
 459:Generated_Source\PSoC5/EEPROM_1.c ****     CySpcStart();
 664              		.loc 1 459 0
 665 000c FFF7FEFF 		bl	CySpcStart
 460:Generated_Source\PSoC5/EEPROM_1.c **** 
 461:Generated_Source\PSoC5/EEPROM_1.c ****     if(rowNumber < (uint8) CY_EEPROM_NUMBER_ROWS)
 666              		.loc 1 461 0
 667 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 668 0012 5BB2     		sxtb	r3, r3
 669 0014 002B     		cmp	r3, #0
 670 0016 44DB     		blt	.L55
 462:Generated_Source\PSoC5/EEPROM_1.c ****     {
 463:Generated_Source\PSoC5/EEPROM_1.c ****         /* See if we can get SPC. */
 464:Generated_Source\PSoC5/EEPROM_1.c ****         if(CySpcLock() == CYRET_SUCCESS)
 671              		.loc 1 464 0
 672 0018 FFF7FEFF 		bl	CySpcLock
 673 001c 0346     		mov	r3, r0
 674 001e 002B     		cmp	r3, #0
 675 0020 3CD1     		bne	.L56
 465:Generated_Source\PSoC5/EEPROM_1.c ****         {
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 21


 466:Generated_Source\PSoC5/EEPROM_1.c ****             /* Plan for failure */
 467:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_UNKNOWN;
 676              		.loc 1 467 0
 677 0022 4FF0FF33 		mov	r3, #-1
 678 0026 FB60     		str	r3, [r7, #12]
 468:Generated_Source\PSoC5/EEPROM_1.c **** 
 469:Generated_Source\PSoC5/EEPROM_1.c ****             /* Command to load a row of data */
 470:Generated_Source\PSoC5/EEPROM_1.c ****             if(CySpcLoadRow(CY_SPC_FIRST_EE_ARRAYID, rowData, CYDEV_EEPROM_ROW_SIZE) == CYRET_START
 679              		.loc 1 470 0
 680 0028 4020     		movs	r0, #64
 681 002a 7968     		ldr	r1, [r7, #4]
 682 002c 1022     		movs	r2, #16
 683 002e FFF7FEFF 		bl	CySpcLoadRow
 684 0032 0346     		mov	r3, r0
 685 0034 072B     		cmp	r3, #7
 686 0036 36D1     		bne	.L64
 471:Generated_Source\PSoC5/EEPROM_1.c ****             {
 472:Generated_Source\PSoC5/EEPROM_1.c ****                 while(CY_SPC_BUSY)
 687              		.loc 1 472 0
 688 0038 00BF     		nop
 689              	.L58:
 690              		.loc 1 472 0 is_stmt 0 discriminator 1
 691 003a 1D4B     		ldr	r3, .L66
 692 003c 1B78     		ldrb	r3, [r3]
 693 003e DBB2     		uxtb	r3, r3
 694 0040 03F00203 		and	r3, r3, #2
 695 0044 002B     		cmp	r3, #0
 696 0046 F8D0     		beq	.L58
 473:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 474:Generated_Source\PSoC5/EEPROM_1.c ****                     /* Wait until SPC becomes idle */
 475:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 476:Generated_Source\PSoC5/EEPROM_1.c **** 
 477:Generated_Source\PSoC5/EEPROM_1.c ****                 /* SPC is idle now */
 478:Generated_Source\PSoC5/EEPROM_1.c ****                 if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 697              		.loc 1 478 0 is_stmt 1
 698 0048 194B     		ldr	r3, .L66
 699 004a 1B78     		ldrb	r3, [r3]
 700 004c DBB2     		uxtb	r3, r3
 701 004e 03F00203 		and	r3, r3, #2
 702 0052 002B     		cmp	r3, #0
 703 0054 08D0     		beq	.L59
 704              		.loc 1 478 0 is_stmt 0 discriminator 1
 705 0056 164B     		ldr	r3, .L66
 706 0058 1B78     		ldrb	r3, [r3]
 707 005a DBB2     		uxtb	r3, r3
 708 005c 9B08     		lsrs	r3, r3, #2
 709 005e DBB2     		uxtb	r3, r3
 710 0060 002B     		cmp	r3, #0
 711 0062 01D1     		bne	.L59
 479:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 480:Generated_Source\PSoC5/EEPROM_1.c ****                     status = CYRET_SUCCESS;
 712              		.loc 1 480 0 is_stmt 1
 713 0064 0023     		movs	r3, #0
 714 0066 FB60     		str	r3, [r7, #12]
 715              	.L59:
 481:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 482:Generated_Source\PSoC5/EEPROM_1.c **** 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 22


 483:Generated_Source\PSoC5/EEPROM_1.c ****                 /* Command to erase and program the row. */
 484:Generated_Source\PSoC5/EEPROM_1.c ****                 if(status == CYRET_SUCCESS)
 716              		.loc 1 484 0
 717 0068 FB68     		ldr	r3, [r7, #12]
 718 006a 002B     		cmp	r3, #0
 719 006c 12D1     		bne	.L60
 485:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 486:Generated_Source\PSoC5/EEPROM_1.c ****                     if(CySpcWriteRow(CY_SPC_FIRST_EE_ARRAYID, (uint16)rowNumber, dieTemperature[0u]
 720              		.loc 1 486 0
 721 006e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 722 0070 99B2     		uxth	r1, r3
 723 0072 104B     		ldr	r3, .L66+4
 724 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 725 0076 0F4B     		ldr	r3, .L66+4
 726 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 727 007a 4020     		movs	r0, #64
 728 007c FFF7FEFF 		bl	CySpcWriteRow
 729 0080 0346     		mov	r3, r0
 730 0082 072B     		cmp	r3, #7
 731 0084 02D1     		bne	.L61
 487:Generated_Source\PSoC5/EEPROM_1.c ****                     dieTemperature[1u]) == CYRET_STARTED)
 488:Generated_Source\PSoC5/EEPROM_1.c ****                     {
 489:Generated_Source\PSoC5/EEPROM_1.c ****                         status = CYRET_STARTED;
 732              		.loc 1 489 0
 733 0086 0723     		movs	r3, #7
 734 0088 FB60     		str	r3, [r7, #12]
 735 008a 0CE0     		b	.L64
 736              	.L61:
 490:Generated_Source\PSoC5/EEPROM_1.c ****                     }
 491:Generated_Source\PSoC5/EEPROM_1.c ****                     else
 492:Generated_Source\PSoC5/EEPROM_1.c ****                     {
 493:Generated_Source\PSoC5/EEPROM_1.c ****                         status = CYRET_UNKNOWN;
 737              		.loc 1 493 0
 738 008c 4FF0FF33 		mov	r3, #-1
 739 0090 FB60     		str	r3, [r7, #12]
 740 0092 08E0     		b	.L64
 741              	.L60:
 494:Generated_Source\PSoC5/EEPROM_1.c ****                     }
 495:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 496:Generated_Source\PSoC5/EEPROM_1.c ****                 else
 497:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 498:Generated_Source\PSoC5/EEPROM_1.c ****                     status = CYRET_UNKNOWN;
 742              		.loc 1 498 0
 743 0094 4FF0FF33 		mov	r3, #-1
 744 0098 FB60     		str	r3, [r7, #12]
 745 009a 04E0     		b	.L64
 746              	.L56:
 499:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 500:Generated_Source\PSoC5/EEPROM_1.c ****             }
 501:Generated_Source\PSoC5/EEPROM_1.c ****         }
 502:Generated_Source\PSoC5/EEPROM_1.c ****         else
 503:Generated_Source\PSoC5/EEPROM_1.c ****         {
 504:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_LOCKED;
 747              		.loc 1 504 0
 748 009c 0423     		movs	r3, #4
 749 009e FB60     		str	r3, [r7, #12]
 750 00a0 01E0     		b	.L64
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 23


 751              	.L55:
 505:Generated_Source\PSoC5/EEPROM_1.c ****         }
 506:Generated_Source\PSoC5/EEPROM_1.c ****     }
 507:Generated_Source\PSoC5/EEPROM_1.c ****     else
 508:Generated_Source\PSoC5/EEPROM_1.c ****     {
 509:Generated_Source\PSoC5/EEPROM_1.c ****         status = CYRET_BAD_PARAM;
 752              		.loc 1 509 0
 753 00a2 0123     		movs	r3, #1
 754 00a4 FB60     		str	r3, [r7, #12]
 755              	.L64:
 510:Generated_Source\PSoC5/EEPROM_1.c ****     }
 511:Generated_Source\PSoC5/EEPROM_1.c **** 
 512:Generated_Source\PSoC5/EEPROM_1.c ****     return(status);
 756              		.loc 1 512 0
 757 00a6 FB68     		ldr	r3, [r7, #12]
 513:Generated_Source\PSoC5/EEPROM_1.c **** }
 758              		.loc 1 513 0
 759 00a8 1846     		mov	r0, r3
 760 00aa 1037     		adds	r7, r7, #16
 761              		.cfi_def_cfa_offset 8
 762 00ac BD46     		mov	sp, r7
 763              		.cfi_def_cfa_register 13
 764              		@ sp needed
 765 00ae 80BD     		pop	{r7, pc}
 766              	.L67:
 767              		.align	2
 768              	.L66:
 769 00b0 22470040 		.word	1073760034
 770 00b4 00000000 		.word	dieTemperature
 771              		.cfi_endproc
 772              	.LFE8:
 773              		.size	EEPROM_1_StartWrite, .-EEPROM_1_StartWrite
 774              		.section	.text.EEPROM_1_StartErase,"ax",%progbits
 775              		.align	2
 776              		.global	EEPROM_1_StartErase
 777              		.thumb
 778              		.thumb_func
 779              		.type	EEPROM_1_StartErase, %function
 780              	EEPROM_1_StartErase:
 781              	.LFB9:
 514:Generated_Source\PSoC5/EEPROM_1.c **** 
 515:Generated_Source\PSoC5/EEPROM_1.c **** 
 516:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
 517:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_StartErase
 518:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
 519:Generated_Source\PSoC5/EEPROM_1.c **** *
 520:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
 521:Generated_Source\PSoC5/EEPROM_1.c **** *  Starts the EEPROM sector erase. This function does not block.
 522:Generated_Source\PSoC5/EEPROM_1.c **** *  The function returns once the SPC has begun writing the data. This function
 523:Generated_Source\PSoC5/EEPROM_1.c **** *  must be used in combination with EEPROM_1_Query().
 524:Generated_Source\PSoC5/EEPROM_1.c **** *  EEPROM_1_Query() must be called until it returns a status
 525:Generated_Source\PSoC5/EEPROM_1.c **** *  other than CYRET_STARTED. That indicates the erase has been completed.
 526:Generated_Source\PSoC5/EEPROM_1.c **** *  Until EEPROM_1_Query() detects that the erase is
 527:Generated_Source\PSoC5/EEPROM_1.c **** *  complete, the SPC is marked as locked to prevent another SPC operation
 528:Generated_Source\PSoC5/EEPROM_1.c **** *  from being performed.
 529:Generated_Source\PSoC5/EEPROM_1.c **** *
 530:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 24


 531:Generated_Source\PSoC5/EEPROM_1.c **** *  sectorNumber:  The sector number to erase.
 532:Generated_Source\PSoC5/EEPROM_1.c **** *
 533:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
 534:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_STARTED, if the SPC command to erase was successfully started.
 535:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_BAD_PARAM, if the parameter sectorNumber is out of range.
 536:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_LOCKED, if the SPC is being used.
 537:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_UNKNOWN, if there was an SPC error.
 538:Generated_Source\PSoC5/EEPROM_1.c **** *
 539:Generated_Source\PSoC5/EEPROM_1.c **** * Side effects:
 540:Generated_Source\PSoC5/EEPROM_1.c **** *  After calling this API, the device should not be powered down, reset or switched
 541:Generated_Source\PSoC5/EEPROM_1.c **** *  to low power modes until EEPROM operation is complete.
 542:Generated_Source\PSoC5/EEPROM_1.c **** *  Ignoring this recommendation may lead to data corruption or silicon
 543:Generated_Source\PSoC5/EEPROM_1.c **** *  unexpected behavior.
 544:Generated_Source\PSoC5/EEPROM_1.c **** *
 545:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
 546:Generated_Source\PSoC5/EEPROM_1.c **** cystatus EEPROM_1_StartErase(uint8 sectorNumber) 
 547:Generated_Source\PSoC5/EEPROM_1.c **** {
 782              		.loc 1 547 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 16
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786 0000 80B5     		push	{r7, lr}
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 7, -8
 789              		.cfi_offset 14, -4
 790 0002 84B0     		sub	sp, sp, #16
 791              		.cfi_def_cfa_offset 24
 792 0004 00AF     		add	r7, sp, #0
 793              		.cfi_def_cfa_register 7
 794 0006 0346     		mov	r3, r0
 795 0008 FB71     		strb	r3, [r7, #7]
 548:Generated_Source\PSoC5/EEPROM_1.c ****     cystatus status;
 549:Generated_Source\PSoC5/EEPROM_1.c ****     
 550:Generated_Source\PSoC5/EEPROM_1.c ****     CySpcStart();
 796              		.loc 1 550 0
 797 000a FFF7FEFF 		bl	CySpcStart
 551:Generated_Source\PSoC5/EEPROM_1.c **** 
 552:Generated_Source\PSoC5/EEPROM_1.c ****     if(sectorNumber < (uint8) CY_EEPROM_NUMBER_ARRAYS)
 798              		.loc 1 552 0
 799 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 800 0010 002B     		cmp	r3, #0
 801 0012 15D1     		bne	.L69
 553:Generated_Source\PSoC5/EEPROM_1.c ****     {
 554:Generated_Source\PSoC5/EEPROM_1.c ****         /* See if we can get SPC. */
 555:Generated_Source\PSoC5/EEPROM_1.c ****         if(CySpcLock() == CYRET_SUCCESS)
 802              		.loc 1 555 0
 803 0014 FFF7FEFF 		bl	CySpcLock
 804 0018 0346     		mov	r3, r0
 805 001a 002B     		cmp	r3, #0
 806 001c 0DD1     		bne	.L70
 556:Generated_Source\PSoC5/EEPROM_1.c ****         {
 557:Generated_Source\PSoC5/EEPROM_1.c ****             /* Plan for failure */
 558:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_UNKNOWN;
 807              		.loc 1 558 0
 808 001e 4FF0FF33 		mov	r3, #-1
 809 0022 FB60     		str	r3, [r7, #12]
 559:Generated_Source\PSoC5/EEPROM_1.c **** 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 25


 560:Generated_Source\PSoC5/EEPROM_1.c ****             /* Command to load a row of data */
 561:Generated_Source\PSoC5/EEPROM_1.c ****             if(CySpcEraseSector(CY_SPC_FIRST_EE_ARRAYID, sectorNumber) == CYRET_STARTED)
 810              		.loc 1 561 0
 811 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 812 0026 4020     		movs	r0, #64
 813 0028 1946     		mov	r1, r3
 814 002a FFF7FEFF 		bl	CySpcEraseSector
 815 002e 0346     		mov	r3, r0
 816 0030 072B     		cmp	r3, #7
 817 0032 07D1     		bne	.L73
 562:Generated_Source\PSoC5/EEPROM_1.c ****             {
 563:Generated_Source\PSoC5/EEPROM_1.c ****                 status = CYRET_SUCCESS;
 818              		.loc 1 563 0
 819 0034 0023     		movs	r3, #0
 820 0036 FB60     		str	r3, [r7, #12]
 821 0038 04E0     		b	.L73
 822              	.L70:
 564:Generated_Source\PSoC5/EEPROM_1.c ****             }
 565:Generated_Source\PSoC5/EEPROM_1.c ****         }
 566:Generated_Source\PSoC5/EEPROM_1.c ****         else
 567:Generated_Source\PSoC5/EEPROM_1.c ****         {
 568:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_LOCKED;
 823              		.loc 1 568 0
 824 003a 0423     		movs	r3, #4
 825 003c FB60     		str	r3, [r7, #12]
 826 003e 01E0     		b	.L73
 827              	.L69:
 569:Generated_Source\PSoC5/EEPROM_1.c ****         }
 570:Generated_Source\PSoC5/EEPROM_1.c ****     }
 571:Generated_Source\PSoC5/EEPROM_1.c ****     else
 572:Generated_Source\PSoC5/EEPROM_1.c ****     {
 573:Generated_Source\PSoC5/EEPROM_1.c ****         status = CYRET_BAD_PARAM;
 828              		.loc 1 573 0
 829 0040 0123     		movs	r3, #1
 830 0042 FB60     		str	r3, [r7, #12]
 831              	.L73:
 574:Generated_Source\PSoC5/EEPROM_1.c ****     }
 575:Generated_Source\PSoC5/EEPROM_1.c **** 
 576:Generated_Source\PSoC5/EEPROM_1.c ****     return(status);
 832              		.loc 1 576 0
 833 0044 FB68     		ldr	r3, [r7, #12]
 577:Generated_Source\PSoC5/EEPROM_1.c **** }
 834              		.loc 1 577 0
 835 0046 1846     		mov	r0, r3
 836 0048 1037     		adds	r7, r7, #16
 837              		.cfi_def_cfa_offset 8
 838 004a BD46     		mov	sp, r7
 839              		.cfi_def_cfa_register 13
 840              		@ sp needed
 841 004c 80BD     		pop	{r7, pc}
 842              		.cfi_endproc
 843              	.LFE9:
 844              		.size	EEPROM_1_StartErase, .-EEPROM_1_StartErase
 845 004e 00BF     		.section	.text.EEPROM_1_Query,"ax",%progbits
 846              		.align	2
 847              		.global	EEPROM_1_Query
 848              		.thumb
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 26


 849              		.thumb_func
 850              		.type	EEPROM_1_Query, %function
 851              	EEPROM_1_Query:
 852              	.LFB10:
 578:Generated_Source\PSoC5/EEPROM_1.c **** 
 579:Generated_Source\PSoC5/EEPROM_1.c **** 
 580:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
 581:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_Query
 582:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
 583:Generated_Source\PSoC5/EEPROM_1.c **** *
 584:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
 585:Generated_Source\PSoC5/EEPROM_1.c **** *  Checks the status of an earlier call to EEPROM_1_StartWrite() or
 586:Generated_Source\PSoC5/EEPROM_1.c **** *  EEPROM_1_StartErase().
 587:Generated_Source\PSoC5/EEPROM_1.c **** *  This function must be called until it returns a value other than
 588:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_STARTED. Once that occurs, the write or erase has been completed and
 589:Generated_Source\PSoC5/EEPROM_1.c **** *  the SPC is unlocked.
 590:Generated_Source\PSoC5/EEPROM_1.c **** *
 591:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
 592:Generated_Source\PSoC5/EEPROM_1.c **** *  None
 593:Generated_Source\PSoC5/EEPROM_1.c **** *
 594:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
 595:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_STARTED, if the SPC command is still processing.
 596:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_SUCCESS, if the operation was completed successfully.
 597:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_UNKNOWN, if there was an SPC error.
 598:Generated_Source\PSoC5/EEPROM_1.c **** *
 599:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
 600:Generated_Source\PSoC5/EEPROM_1.c **** cystatus EEPROM_1_Query(void) 
 601:Generated_Source\PSoC5/EEPROM_1.c **** {
 853              		.loc 1 601 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 8
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857 0000 80B5     		push	{r7, lr}
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 861 0002 82B0     		sub	sp, sp, #8
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              		.cfi_def_cfa_register 7
 602:Generated_Source\PSoC5/EEPROM_1.c ****     cystatus status;
 603:Generated_Source\PSoC5/EEPROM_1.c ****     
 604:Generated_Source\PSoC5/EEPROM_1.c ****     CySpcStart();
 865              		.loc 1 604 0
 866 0006 FFF7FEFF 		bl	CySpcStart
 605:Generated_Source\PSoC5/EEPROM_1.c **** 
 606:Generated_Source\PSoC5/EEPROM_1.c ****     /* Check if SPC is idle */
 607:Generated_Source\PSoC5/EEPROM_1.c ****     if(CY_SPC_IDLE)
 867              		.loc 1 607 0
 868 000a 124B     		ldr	r3, .L81
 869 000c 1B78     		ldrb	r3, [r3]
 870 000e DBB2     		uxtb	r3, r3
 871 0010 03F00203 		and	r3, r3, #2
 872 0014 002B     		cmp	r3, #0
 873 0016 16D0     		beq	.L76
 608:Generated_Source\PSoC5/EEPROM_1.c ****     {
 609:Generated_Source\PSoC5/EEPROM_1.c ****         /* SPC is idle now */
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 27


 610:Generated_Source\PSoC5/EEPROM_1.c ****         if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 874              		.loc 1 610 0
 875 0018 0E4B     		ldr	r3, .L81
 876 001a 1B78     		ldrb	r3, [r3]
 877 001c DBB2     		uxtb	r3, r3
 878 001e 03F00203 		and	r3, r3, #2
 879 0022 002B     		cmp	r3, #0
 880 0024 09D0     		beq	.L77
 881              		.loc 1 610 0 is_stmt 0 discriminator 1
 882 0026 0B4B     		ldr	r3, .L81
 883 0028 1B78     		ldrb	r3, [r3]
 884 002a DBB2     		uxtb	r3, r3
 885 002c 9B08     		lsrs	r3, r3, #2
 886 002e DBB2     		uxtb	r3, r3
 887 0030 002B     		cmp	r3, #0
 888 0032 02D1     		bne	.L77
 611:Generated_Source\PSoC5/EEPROM_1.c ****         {
 612:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_SUCCESS;
 889              		.loc 1 612 0 is_stmt 1
 890 0034 0023     		movs	r3, #0
 891 0036 7B60     		str	r3, [r7, #4]
 892 0038 02E0     		b	.L78
 893              	.L77:
 613:Generated_Source\PSoC5/EEPROM_1.c ****         }
 614:Generated_Source\PSoC5/EEPROM_1.c ****         else
 615:Generated_Source\PSoC5/EEPROM_1.c ****         {
 616:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_UNKNOWN;
 894              		.loc 1 616 0
 895 003a 4FF0FF33 		mov	r3, #-1
 896 003e 7B60     		str	r3, [r7, #4]
 897              	.L78:
 617:Generated_Source\PSoC5/EEPROM_1.c ****         }
 618:Generated_Source\PSoC5/EEPROM_1.c **** 
 619:Generated_Source\PSoC5/EEPROM_1.c ****         /* Unlock SPC so that someone else can use it. */
 620:Generated_Source\PSoC5/EEPROM_1.c ****         CySpcUnlock();
 898              		.loc 1 620 0
 899 0040 FFF7FEFF 		bl	CySpcUnlock
 900 0044 01E0     		b	.L79
 901              	.L76:
 621:Generated_Source\PSoC5/EEPROM_1.c ****     }
 622:Generated_Source\PSoC5/EEPROM_1.c ****     else
 623:Generated_Source\PSoC5/EEPROM_1.c ****     {
 624:Generated_Source\PSoC5/EEPROM_1.c ****         status = CYRET_STARTED;
 902              		.loc 1 624 0
 903 0046 0723     		movs	r3, #7
 904 0048 7B60     		str	r3, [r7, #4]
 905              	.L79:
 625:Generated_Source\PSoC5/EEPROM_1.c ****     }
 626:Generated_Source\PSoC5/EEPROM_1.c **** 
 627:Generated_Source\PSoC5/EEPROM_1.c ****     return(status);
 906              		.loc 1 627 0
 907 004a 7B68     		ldr	r3, [r7, #4]
 628:Generated_Source\PSoC5/EEPROM_1.c **** }
 908              		.loc 1 628 0
 909 004c 1846     		mov	r0, r3
 910 004e 0837     		adds	r7, r7, #8
 911              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 28


 912 0050 BD46     		mov	sp, r7
 913              		.cfi_def_cfa_register 13
 914              		@ sp needed
 915 0052 80BD     		pop	{r7, pc}
 916              	.L82:
 917              		.align	2
 918              	.L81:
 919 0054 22470040 		.word	1073760034
 920              		.cfi_endproc
 921              	.LFE10:
 922              		.size	EEPROM_1_Query, .-EEPROM_1_Query
 923              		.section	.text.EEPROM_1_ByteWritePos,"ax",%progbits
 924              		.align	2
 925              		.global	EEPROM_1_ByteWritePos
 926              		.thumb
 927              		.thumb_func
 928              		.type	EEPROM_1_ByteWritePos, %function
 929              	EEPROM_1_ByteWritePos:
 930              	.LFB11:
 629:Generated_Source\PSoC5/EEPROM_1.c **** 
 630:Generated_Source\PSoC5/EEPROM_1.c **** 
 631:Generated_Source\PSoC5/EEPROM_1.c **** /*******************************************************************************
 632:Generated_Source\PSoC5/EEPROM_1.c **** * Function Name: EEPROM_1_ByteWritePos
 633:Generated_Source\PSoC5/EEPROM_1.c **** ********************************************************************************
 634:Generated_Source\PSoC5/EEPROM_1.c **** *
 635:Generated_Source\PSoC5/EEPROM_1.c **** * Summary:
 636:Generated_Source\PSoC5/EEPROM_1.c **** *  Writes a byte of data to the EEPROM. This is a blocking call. It will not
 637:Generated_Source\PSoC5/EEPROM_1.c **** *  return until the write operation succeeds or fails.
 638:Generated_Source\PSoC5/EEPROM_1.c **** *
 639:Generated_Source\PSoC5/EEPROM_1.c **** * Parameters:
 640:Generated_Source\PSoC5/EEPROM_1.c **** *  dataByte:   The byte of data to write to the EEPROM.
 641:Generated_Source\PSoC5/EEPROM_1.c **** *  rowNumber:  The EEPROM row number to program.
 642:Generated_Source\PSoC5/EEPROM_1.c **** *  byteNumber: The byte number within the row to program.
 643:Generated_Source\PSoC5/EEPROM_1.c **** *
 644:Generated_Source\PSoC5/EEPROM_1.c **** * Return:
 645:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_SUCCESS, if the operation was successful.
 646:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_BAD_PARAM, if the parameter rowNumber or byteNumber is out of range.
 647:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_LOCKED, if the SPC is being used.
 648:Generated_Source\PSoC5/EEPROM_1.c **** *  CYRET_UNKNOWN, if there was an SPC error.
 649:Generated_Source\PSoC5/EEPROM_1.c **** *
 650:Generated_Source\PSoC5/EEPROM_1.c **** *******************************************************************************/
 651:Generated_Source\PSoC5/EEPROM_1.c **** cystatus EEPROM_1_ByteWritePos(uint8 dataByte, uint8 rowNumber, uint8 byteNumber) \
 652:Generated_Source\PSoC5/EEPROM_1.c **** 
 653:Generated_Source\PSoC5/EEPROM_1.c **** {
 931              		.loc 1 653 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 16
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935 0000 80B5     		push	{r7, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 84B0     		sub	sp, sp, #16
 940              		.cfi_def_cfa_offset 24
 941 0004 00AF     		add	r7, sp, #0
 942              		.cfi_def_cfa_register 7
 943 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 29


 944 0008 FB71     		strb	r3, [r7, #7]
 945 000a 0B46     		mov	r3, r1
 946 000c BB71     		strb	r3, [r7, #6]
 947 000e 1346     		mov	r3, r2
 948 0010 7B71     		strb	r3, [r7, #5]
 654:Generated_Source\PSoC5/EEPROM_1.c ****     cystatus status;
 655:Generated_Source\PSoC5/EEPROM_1.c **** 
 656:Generated_Source\PSoC5/EEPROM_1.c ****     /* Start SPC */
 657:Generated_Source\PSoC5/EEPROM_1.c ****     CySpcStart();
 949              		.loc 1 657 0
 950 0012 FFF7FEFF 		bl	CySpcStart
 658:Generated_Source\PSoC5/EEPROM_1.c **** 
 659:Generated_Source\PSoC5/EEPROM_1.c ****     if((rowNumber < (uint8) CY_EEPROM_NUMBER_ROWS) && (byteNumber < (uint8) SIZEOF_EEPROM_ROW))
 951              		.loc 1 659 0
 952 0016 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 953 0018 5BB2     		sxtb	r3, r3
 954 001a 002B     		cmp	r3, #0
 955 001c 66DB     		blt	.L84
 956              		.loc 1 659 0 is_stmt 0 discriminator 1
 957 001e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 958 0020 0F2B     		cmp	r3, #15
 959 0022 63D8     		bhi	.L84
 660:Generated_Source\PSoC5/EEPROM_1.c ****     {
 661:Generated_Source\PSoC5/EEPROM_1.c ****         /* See if we can get SPC. */
 662:Generated_Source\PSoC5/EEPROM_1.c ****         if(CySpcLock() == CYRET_SUCCESS)
 960              		.loc 1 662 0 is_stmt 1
 961 0024 FFF7FEFF 		bl	CySpcLock
 962 0028 0346     		mov	r3, r0
 963 002a 002B     		cmp	r3, #0
 964 002c 5BD1     		bne	.L85
 663:Generated_Source\PSoC5/EEPROM_1.c ****         {
 664:Generated_Source\PSoC5/EEPROM_1.c ****             /* Plan for failure */
 665:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_UNKNOWN;
 965              		.loc 1 665 0
 966 002e 4FF0FF33 		mov	r3, #-1
 967 0032 FB60     		str	r3, [r7, #12]
 666:Generated_Source\PSoC5/EEPROM_1.c **** 
 667:Generated_Source\PSoC5/EEPROM_1.c ****             /* Command to load byte of data */
 668:Generated_Source\PSoC5/EEPROM_1.c ****             if(CySpcLoadMultiByte(CY_SPC_FIRST_EE_ARRAYID, (uint16)byteNumber, &dataByte,\
 968              		.loc 1 668 0
 969 0034 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 970 0036 9AB2     		uxth	r2, r3
 971 0038 FB1D     		adds	r3, r7, #7
 972 003a 4020     		movs	r0, #64
 973 003c 1146     		mov	r1, r2
 974 003e 1A46     		mov	r2, r3
 975 0040 0123     		movs	r3, #1
 976 0042 FFF7FEFF 		bl	CySpcLoadMultiByte
 977 0046 0346     		mov	r3, r0
 978 0048 072B     		cmp	r3, #7
 979 004a 49D1     		bne	.L86
 669:Generated_Source\PSoC5/EEPROM_1.c ****                                                                 EEPROM_1_SPC_BYTE_WRITE_SIZE) == CY
 670:Generated_Source\PSoC5/EEPROM_1.c ****             {
 671:Generated_Source\PSoC5/EEPROM_1.c ****                 while(CY_SPC_BUSY)
 980              		.loc 1 671 0
 981 004c 00BF     		nop
 982              	.L87:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 30


 983              		.loc 1 671 0 is_stmt 0 discriminator 1
 984 004e 2B4B     		ldr	r3, .L97
 985 0050 1B78     		ldrb	r3, [r3]
 986 0052 DBB2     		uxtb	r3, r3
 987 0054 03F00203 		and	r3, r3, #2
 988 0058 002B     		cmp	r3, #0
 989 005a F8D0     		beq	.L87
 672:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 673:Generated_Source\PSoC5/EEPROM_1.c ****                     /* Wait until SPC becomes idle */
 674:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 675:Generated_Source\PSoC5/EEPROM_1.c **** 
 676:Generated_Source\PSoC5/EEPROM_1.c ****                 /* SPC is idle now */
 677:Generated_Source\PSoC5/EEPROM_1.c ****                 if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 990              		.loc 1 677 0 is_stmt 1
 991 005c 274B     		ldr	r3, .L97
 992 005e 1B78     		ldrb	r3, [r3]
 993 0060 DBB2     		uxtb	r3, r3
 994 0062 03F00203 		and	r3, r3, #2
 995 0066 002B     		cmp	r3, #0
 996 0068 08D0     		beq	.L88
 997              		.loc 1 677 0 is_stmt 0 discriminator 1
 998 006a 244B     		ldr	r3, .L97
 999 006c 1B78     		ldrb	r3, [r3]
 1000 006e DBB2     		uxtb	r3, r3
 1001 0070 9B08     		lsrs	r3, r3, #2
 1002 0072 DBB2     		uxtb	r3, r3
 1003 0074 002B     		cmp	r3, #0
 1004 0076 01D1     		bne	.L88
 678:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 679:Generated_Source\PSoC5/EEPROM_1.c ****                     status = CYRET_SUCCESS;
 1005              		.loc 1 679 0 is_stmt 1
 1006 0078 0023     		movs	r3, #0
 1007 007a FB60     		str	r3, [r7, #12]
 1008              	.L88:
 680:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 681:Generated_Source\PSoC5/EEPROM_1.c **** 
 682:Generated_Source\PSoC5/EEPROM_1.c ****                 /* Command to erase and program the row. */
 683:Generated_Source\PSoC5/EEPROM_1.c ****                 if(status == CYRET_SUCCESS)
 1009              		.loc 1 683 0
 1010 007c FB68     		ldr	r3, [r7, #12]
 1011 007e 002B     		cmp	r3, #0
 1012 0080 2BD1     		bne	.L89
 684:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 685:Generated_Source\PSoC5/EEPROM_1.c ****                     if(CySpcWriteRow(CY_SPC_FIRST_EE_ARRAYID, (uint16)rowNumber, dieTemperature[0u]
 1013              		.loc 1 685 0
 1014 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1015 0084 99B2     		uxth	r1, r3
 1016 0086 1E4B     		ldr	r3, .L97+4
 1017 0088 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1018 008a 1D4B     		ldr	r3, .L97+4
 1019 008c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1020 008e 4020     		movs	r0, #64
 1021 0090 FFF7FEFF 		bl	CySpcWriteRow
 1022 0094 0346     		mov	r3, r0
 1023 0096 072B     		cmp	r3, #7
 1024 0098 1BD1     		bne	.L90
 686:Generated_Source\PSoC5/EEPROM_1.c ****                     dieTemperature[1u]) == CYRET_STARTED)
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 31


 687:Generated_Source\PSoC5/EEPROM_1.c ****                     {
 688:Generated_Source\PSoC5/EEPROM_1.c ****                         /* Plan for failure */
 689:Generated_Source\PSoC5/EEPROM_1.c ****                         status = CYRET_UNKNOWN;
 1025              		.loc 1 689 0
 1026 009a 4FF0FF33 		mov	r3, #-1
 1027 009e FB60     		str	r3, [r7, #12]
 690:Generated_Source\PSoC5/EEPROM_1.c **** 
 691:Generated_Source\PSoC5/EEPROM_1.c ****                         while(CY_SPC_BUSY)
 1028              		.loc 1 691 0
 1029 00a0 00BF     		nop
 1030              	.L91:
 1031              		.loc 1 691 0 is_stmt 0 discriminator 1
 1032 00a2 164B     		ldr	r3, .L97
 1033 00a4 1B78     		ldrb	r3, [r3]
 1034 00a6 DBB2     		uxtb	r3, r3
 1035 00a8 03F00203 		and	r3, r3, #2
 1036 00ac 002B     		cmp	r3, #0
 1037 00ae F8D0     		beq	.L91
 692:Generated_Source\PSoC5/EEPROM_1.c ****                         {
 693:Generated_Source\PSoC5/EEPROM_1.c ****                             /* Wait until SPC becomes idle */
 694:Generated_Source\PSoC5/EEPROM_1.c ****                         }
 695:Generated_Source\PSoC5/EEPROM_1.c **** 
 696:Generated_Source\PSoC5/EEPROM_1.c ****                         /* SPC is idle now */
 697:Generated_Source\PSoC5/EEPROM_1.c ****                         if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 1038              		.loc 1 697 0 is_stmt 1
 1039 00b0 124B     		ldr	r3, .L97
 1040 00b2 1B78     		ldrb	r3, [r3]
 1041 00b4 DBB2     		uxtb	r3, r3
 1042 00b6 03F00203 		and	r3, r3, #2
 1043 00ba 002B     		cmp	r3, #0
 1044 00bc 10D0     		beq	.L86
 1045              		.loc 1 697 0 is_stmt 0 discriminator 1
 1046 00be 0F4B     		ldr	r3, .L97
 1047 00c0 1B78     		ldrb	r3, [r3]
 1048 00c2 DBB2     		uxtb	r3, r3
 1049 00c4 9B08     		lsrs	r3, r3, #2
 1050 00c6 DBB2     		uxtb	r3, r3
 1051 00c8 002B     		cmp	r3, #0
 1052 00ca 09D1     		bne	.L86
 698:Generated_Source\PSoC5/EEPROM_1.c ****                         {
 699:Generated_Source\PSoC5/EEPROM_1.c ****                             status = CYRET_SUCCESS;
 1053              		.loc 1 699 0 is_stmt 1
 1054 00cc 0023     		movs	r3, #0
 1055 00ce FB60     		str	r3, [r7, #12]
 1056 00d0 06E0     		b	.L86
 1057              	.L90:
 700:Generated_Source\PSoC5/EEPROM_1.c ****                         }
 701:Generated_Source\PSoC5/EEPROM_1.c ****                     }
 702:Generated_Source\PSoC5/EEPROM_1.c ****                     else
 703:Generated_Source\PSoC5/EEPROM_1.c ****                     {
 704:Generated_Source\PSoC5/EEPROM_1.c ****                         status = CYRET_UNKNOWN;
 1058              		.loc 1 704 0
 1059 00d2 4FF0FF33 		mov	r3, #-1
 1060 00d6 FB60     		str	r3, [r7, #12]
 1061 00d8 02E0     		b	.L86
 1062              	.L89:
 705:Generated_Source\PSoC5/EEPROM_1.c ****                     }
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 32


 706:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 707:Generated_Source\PSoC5/EEPROM_1.c ****                 else
 708:Generated_Source\PSoC5/EEPROM_1.c ****                 {
 709:Generated_Source\PSoC5/EEPROM_1.c ****                     status = CYRET_UNKNOWN;
 1063              		.loc 1 709 0
 1064 00da 4FF0FF33 		mov	r3, #-1
 1065 00de FB60     		str	r3, [r7, #12]
 1066              	.L86:
 710:Generated_Source\PSoC5/EEPROM_1.c ****                 }
 711:Generated_Source\PSoC5/EEPROM_1.c ****             }
 712:Generated_Source\PSoC5/EEPROM_1.c **** 
 713:Generated_Source\PSoC5/EEPROM_1.c ****             /* Unlock SPC so that someone else can use it. */
 714:Generated_Source\PSoC5/EEPROM_1.c ****             CySpcUnlock();
 1067              		.loc 1 714 0
 1068 00e0 FFF7FEFF 		bl	CySpcUnlock
 662:Generated_Source\PSoC5/EEPROM_1.c ****         {
 1069              		.loc 1 662 0
 1070 00e4 04E0     		b	.L95
 1071              	.L85:
 715:Generated_Source\PSoC5/EEPROM_1.c ****         }
 716:Generated_Source\PSoC5/EEPROM_1.c ****         else
 717:Generated_Source\PSoC5/EEPROM_1.c ****         {
 718:Generated_Source\PSoC5/EEPROM_1.c ****             status = CYRET_LOCKED;
 1072              		.loc 1 718 0
 1073 00e6 0423     		movs	r3, #4
 1074 00e8 FB60     		str	r3, [r7, #12]
 662:Generated_Source\PSoC5/EEPROM_1.c ****         {
 1075              		.loc 1 662 0
 1076 00ea 01E0     		b	.L95
 1077              	.L84:
 719:Generated_Source\PSoC5/EEPROM_1.c ****         }
 720:Generated_Source\PSoC5/EEPROM_1.c ****     }
 721:Generated_Source\PSoC5/EEPROM_1.c ****     else
 722:Generated_Source\PSoC5/EEPROM_1.c ****     {
 723:Generated_Source\PSoC5/EEPROM_1.c ****         status = CYRET_BAD_PARAM;
 1078              		.loc 1 723 0
 1079 00ec 0123     		movs	r3, #1
 1080 00ee FB60     		str	r3, [r7, #12]
 1081              	.L95:
 724:Generated_Source\PSoC5/EEPROM_1.c ****     }
 725:Generated_Source\PSoC5/EEPROM_1.c **** 
 726:Generated_Source\PSoC5/EEPROM_1.c ****     return(status);
 1082              		.loc 1 726 0
 1083 00f0 FB68     		ldr	r3, [r7, #12]
 727:Generated_Source\PSoC5/EEPROM_1.c **** }
 1084              		.loc 1 727 0
 1085 00f2 1846     		mov	r0, r3
 1086 00f4 1037     		adds	r7, r7, #16
 1087              		.cfi_def_cfa_offset 8
 1088 00f6 BD46     		mov	sp, r7
 1089              		.cfi_def_cfa_register 13
 1090              		@ sp needed
 1091 00f8 80BD     		pop	{r7, pc}
 1092              	.L98:
 1093 00fa 00BF     		.align	2
 1094              	.L97:
 1095 00fc 22470040 		.word	1073760034
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 33


 1096 0100 00000000 		.word	dieTemperature
 1097              		.cfi_endproc
 1098              	.LFE11:
 1099              		.size	EEPROM_1_ByteWritePos, .-EEPROM_1_ByteWritePos
 1100              		.text
 1101              	.Letext0:
 1102              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1103              		.file 3 "Generated_Source\\PSoC5\\CyFlash.h"
 1104              		.section	.debug_info,"",%progbits
 1105              	.Ldebug_info0:
 1106 0000 4E030000 		.4byte	0x34e
 1107 0004 0400     		.2byte	0x4
 1108 0006 00000000 		.4byte	.Ldebug_abbrev0
 1109 000a 04       		.byte	0x4
 1110 000b 01       		.uleb128 0x1
 1111 000c 57010000 		.4byte	.LASF37
 1112 0010 01       		.byte	0x1
 1113 0011 BB000000 		.4byte	.LASF38
 1114 0015 FC010000 		.4byte	.LASF39
 1115 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1116 001d 00000000 		.4byte	0
 1117 0021 00000000 		.4byte	.Ldebug_line0
 1118 0025 02       		.uleb128 0x2
 1119 0026 01       		.byte	0x1
 1120 0027 06       		.byte	0x6
 1121 0028 E2020000 		.4byte	.LASF0
 1122 002c 02       		.uleb128 0x2
 1123 002d 01       		.byte	0x1
 1124 002e 08       		.byte	0x8
 1125 002f E8000000 		.4byte	.LASF1
 1126 0033 02       		.uleb128 0x2
 1127 0034 02       		.byte	0x2
 1128 0035 05       		.byte	0x5
 1129 0036 B8020000 		.4byte	.LASF2
 1130 003a 02       		.uleb128 0x2
 1131 003b 02       		.byte	0x2
 1132 003c 07       		.byte	0x7
 1133 003d EE020000 		.4byte	.LASF3
 1134 0041 02       		.uleb128 0x2
 1135 0042 04       		.byte	0x4
 1136 0043 05       		.byte	0x5
 1137 0044 CF020000 		.4byte	.LASF4
 1138 0048 02       		.uleb128 0x2
 1139 0049 04       		.byte	0x4
 1140 004a 07       		.byte	0x7
 1141 004b 12010000 		.4byte	.LASF5
 1142 004f 02       		.uleb128 0x2
 1143 0050 08       		.byte	0x8
 1144 0051 05       		.byte	0x5
 1145 0052 91020000 		.4byte	.LASF6
 1146 0056 02       		.uleb128 0x2
 1147 0057 08       		.byte	0x8
 1148 0058 07       		.byte	0x7
 1149 0059 71020000 		.4byte	.LASF7
 1150 005d 03       		.uleb128 0x3
 1151 005e 04       		.byte	0x4
 1152 005f 05       		.byte	0x5
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 34


 1153 0060 696E7400 		.ascii	"int\000"
 1154 0064 02       		.uleb128 0x2
 1155 0065 04       		.byte	0x4
 1156 0066 07       		.byte	0x7
 1157 0067 55020000 		.4byte	.LASF8
 1158 006b 04       		.uleb128 0x4
 1159 006c 24010000 		.4byte	.LASF9
 1160 0070 02       		.byte	0x2
 1161 0071 3801     		.2byte	0x138
 1162 0073 2C000000 		.4byte	0x2c
 1163 0077 04       		.uleb128 0x4
 1164 0078 EC010000 		.4byte	.LASF10
 1165 007c 02       		.byte	0x2
 1166 007d 3901     		.2byte	0x139
 1167 007f 3A000000 		.4byte	0x3a
 1168 0083 02       		.uleb128 0x2
 1169 0084 04       		.byte	0x4
 1170 0085 04       		.byte	0x4
 1171 0086 72000000 		.4byte	.LASF11
 1172 008a 02       		.uleb128 0x2
 1173 008b 08       		.byte	0x8
 1174 008c 04       		.byte	0x4
 1175 008d E5010000 		.4byte	.LASF12
 1176 0091 02       		.uleb128 0x2
 1177 0092 01       		.byte	0x1
 1178 0093 08       		.byte	0x8
 1179 0094 B3020000 		.4byte	.LASF13
 1180 0098 04       		.uleb128 0x4
 1181 0099 F3010000 		.4byte	.LASF14
 1182 009d 02       		.byte	0x2
 1183 009e DA01     		.2byte	0x1da
 1184 00a0 48000000 		.4byte	0x48
 1185 00a4 04       		.uleb128 0x4
 1186 00a5 FE000000 		.4byte	.LASF15
 1187 00a9 02       		.byte	0x2
 1188 00aa E201     		.2byte	0x1e2
 1189 00ac B0000000 		.4byte	0xb0
 1190 00b0 05       		.uleb128 0x5
 1191 00b1 6B000000 		.4byte	0x6b
 1192 00b5 02       		.uleb128 0x2
 1193 00b6 04       		.byte	0x4
 1194 00b7 07       		.byte	0x7
 1195 00b8 88020000 		.4byte	.LASF16
 1196 00bc 06       		.uleb128 0x6
 1197 00bd 8B000000 		.4byte	.LASF17
 1198 00c1 01       		.byte	0x1
 1199 00c2 21       		.byte	0x21
 1200 00c3 00000000 		.4byte	.LFB0
 1201 00c7 0E000000 		.4byte	.LFE0-.LFB0
 1202 00cb 01       		.uleb128 0x1
 1203 00cc 9C       		.byte	0x9c
 1204 00cd 06       		.uleb128 0x6
 1205 00ce 54000000 		.4byte	.LASF18
 1206 00d2 01       		.byte	0x1
 1207 00d3 39       		.byte	0x39
 1208 00d4 00000000 		.4byte	.LFB1
 1209 00d8 0A000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 35


 1210 00dc 01       		.uleb128 0x1
 1211 00dd 9C       		.byte	0x9c
 1212 00de 06       		.uleb128 0x6
 1213 00df AD000000 		.4byte	.LASF19
 1214 00e3 01       		.byte	0x1
 1215 00e4 4D       		.byte	0x4d
 1216 00e5 00000000 		.4byte	.LFB2
 1217 00e9 0A000000 		.4byte	.LFE2-.LFB2
 1218 00ed 01       		.uleb128 0x1
 1219 00ee 9C       		.byte	0x9c
 1220 00ef 07       		.uleb128 0x7
 1221 00f0 78000000 		.4byte	.LASF25
 1222 00f4 01       		.byte	0x1
 1223 00f5 6A       		.byte	0x6a
 1224 00f6 98000000 		.4byte	0x98
 1225 00fa 00000000 		.4byte	.LFB3
 1226 00fe 20010000 		.4byte	.LFE3-.LFB3
 1227 0102 01       		.uleb128 0x1
 1228 0103 9C       		.byte	0x9c
 1229 0104 4F010000 		.4byte	0x14f
 1230 0108 08       		.uleb128 0x8
 1231 0109 4E010000 		.4byte	.LASF20
 1232 010d 01       		.byte	0x1
 1233 010e 6A       		.byte	0x6a
 1234 010f 6B000000 		.4byte	0x6b
 1235 0113 02       		.uleb128 0x2
 1236 0114 91       		.byte	0x91
 1237 0115 6F       		.sleb128 -17
 1238 0116 08       		.uleb128 0x8
 1239 0117 69020000 		.4byte	.LASF21
 1240 011b 01       		.byte	0x1
 1241 011c 6A       		.byte	0x6a
 1242 011d 77000000 		.4byte	0x77
 1243 0121 02       		.uleb128 0x2
 1244 0122 91       		.byte	0x91
 1245 0123 6C       		.sleb128 -20
 1246 0124 09       		.uleb128 0x9
 1247 0125 62020000 		.4byte	.LASF22
 1248 0129 01       		.byte	0x1
 1249 012a 6C       		.byte	0x6c
 1250 012b 98000000 		.4byte	0x98
 1251 012f 02       		.uleb128 0x2
 1252 0130 91       		.byte	0x91
 1253 0131 74       		.sleb128 -12
 1254 0132 09       		.uleb128 0x9
 1255 0133 D8020000 		.4byte	.LASF23
 1256 0137 01       		.byte	0x1
 1257 0138 6D       		.byte	0x6d
 1258 0139 77000000 		.4byte	0x77
 1259 013d 02       		.uleb128 0x2
 1260 013e 91       		.byte	0x91
 1261 013f 72       		.sleb128 -14
 1262 0140 09       		.uleb128 0x9
 1263 0141 DD000000 		.4byte	.LASF24
 1264 0145 01       		.byte	0x1
 1265 0146 6E       		.byte	0x6e
 1266 0147 77000000 		.4byte	0x77
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 36


 1267 014b 02       		.uleb128 0x2
 1268 014c 91       		.byte	0x91
 1269 014d 70       		.sleb128 -16
 1270 014e 00       		.byte	0
 1271 014f 07       		.uleb128 0x7
 1272 0150 9B000000 		.4byte	.LASF26
 1273 0154 01       		.byte	0x1
 1274 0155 D0       		.byte	0xd0
 1275 0156 6B000000 		.4byte	0x6b
 1276 015a 00000000 		.4byte	.LFB4
 1277 015e 3A000000 		.4byte	.LFE4-.LFB4
 1278 0162 01       		.uleb128 0x1
 1279 0163 9C       		.byte	0x9c
 1280 0164 93010000 		.4byte	0x193
 1281 0168 08       		.uleb128 0x8
 1282 0169 69020000 		.4byte	.LASF21
 1283 016d 01       		.byte	0x1
 1284 016e D0       		.byte	0xd0
 1285 016f 77000000 		.4byte	0x77
 1286 0173 02       		.uleb128 0x2
 1287 0174 91       		.byte	0x91
 1288 0175 6E       		.sleb128 -18
 1289 0176 09       		.uleb128 0x9
 1290 0177 01030000 		.4byte	.LASF27
 1291 017b 01       		.byte	0x1
 1292 017c D2       		.byte	0xd2
 1293 017d 6B000000 		.4byte	0x6b
 1294 0181 02       		.uleb128 0x2
 1295 0182 91       		.byte	0x91
 1296 0183 76       		.sleb128 -10
 1297 0184 09       		.uleb128 0x9
 1298 0185 03010000 		.4byte	.LASF28
 1299 0189 01       		.byte	0x1
 1300 018a D3       		.byte	0xd3
 1301 018b 6B000000 		.4byte	0x6b
 1302 018f 02       		.uleb128 0x2
 1303 0190 91       		.byte	0x91
 1304 0191 77       		.sleb128 -9
 1305 0192 00       		.byte	0
 1306 0193 0A       		.uleb128 0xa
 1307 0194 0F000000 		.4byte	.LASF40
 1308 0198 01       		.byte	0x1
 1309 0199 F7       		.byte	0xf7
 1310 019a 6B000000 		.4byte	0x6b
 1311 019e 00000000 		.4byte	.LFB5
 1312 01a2 10000000 		.4byte	.LFE5-.LFB5
 1313 01a6 01       		.uleb128 0x1
 1314 01a7 9C       		.byte	0x9c
 1315 01a8 0B       		.uleb128 0xb
 1316 01a9 39010000 		.4byte	.LASF29
 1317 01ad 01       		.byte	0x1
 1318 01ae 1101     		.2byte	0x111
 1319 01b0 98000000 		.4byte	0x98
 1320 01b4 00000000 		.4byte	.LFB6
 1321 01b8 8C000000 		.4byte	.LFE6-.LFB6
 1322 01bc 01       		.uleb128 0x1
 1323 01bd 9C       		.byte	0x9c
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 37


 1324 01be E1010000 		.4byte	0x1e1
 1325 01c2 0C       		.uleb128 0xc
 1326 01c3 C2020000 		.4byte	.LASF30
 1327 01c7 01       		.byte	0x1
 1328 01c8 1101     		.2byte	0x111
 1329 01ca 6B000000 		.4byte	0x6b
 1330 01ce 02       		.uleb128 0x2
 1331 01cf 91       		.byte	0x91
 1332 01d0 6F       		.sleb128 -17
 1333 01d1 0D       		.uleb128 0xd
 1334 01d2 62020000 		.4byte	.LASF22
 1335 01d6 01       		.byte	0x1
 1336 01d7 1301     		.2byte	0x113
 1337 01d9 98000000 		.4byte	0x98
 1338 01dd 02       		.uleb128 0x2
 1339 01de 91       		.byte	0x91
 1340 01df 74       		.sleb128 -12
 1341 01e0 00       		.byte	0
 1342 01e1 0B       		.uleb128 0xb
 1343 01e2 00000000 		.4byte	.LASF31
 1344 01e6 01       		.byte	0x1
 1345 01e7 5901     		.2byte	0x159
 1346 01e9 98000000 		.4byte	0x98
 1347 01ed 00000000 		.4byte	.LFB7
 1348 01f1 F0000000 		.4byte	.LFE7-.LFB7
 1349 01f5 01       		.uleb128 0x1
 1350 01f6 9C       		.byte	0x9c
 1351 01f7 29020000 		.4byte	0x229
 1352 01fb 0C       		.uleb128 0xc
 1353 01fc F6000000 		.4byte	.LASF32
 1354 0200 01       		.byte	0x1
 1355 0201 5901     		.2byte	0x159
 1356 0203 29020000 		.4byte	0x229
 1357 0207 02       		.uleb128 0x2
 1358 0208 91       		.byte	0x91
 1359 0209 6C       		.sleb128 -20
 1360 020a 0C       		.uleb128 0xc
 1361 020b D8020000 		.4byte	.LASF23
 1362 020f 01       		.byte	0x1
 1363 0210 5901     		.2byte	0x159
 1364 0212 6B000000 		.4byte	0x6b
 1365 0216 02       		.uleb128 0x2
 1366 0217 91       		.byte	0x91
 1367 0218 6B       		.sleb128 -21
 1368 0219 0D       		.uleb128 0xd
 1369 021a 62020000 		.4byte	.LASF22
 1370 021e 01       		.byte	0x1
 1371 021f 5B01     		.2byte	0x15b
 1372 0221 98000000 		.4byte	0x98
 1373 0225 02       		.uleb128 0x2
 1374 0226 91       		.byte	0x91
 1375 0227 74       		.sleb128 -12
 1376 0228 00       		.byte	0
 1377 0229 0E       		.uleb128 0xe
 1378 022a 04       		.byte	0x4
 1379 022b 2F020000 		.4byte	0x22f
 1380 022f 0F       		.uleb128 0xf
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 38


 1381 0230 6B000000 		.4byte	0x6b
 1382 0234 0B       		.uleb128 0xb
 1383 0235 9F020000 		.4byte	.LASF33
 1384 0239 01       		.byte	0x1
 1385 023a C601     		.2byte	0x1c6
 1386 023c 98000000 		.4byte	0x98
 1387 0240 00000000 		.4byte	.LFB8
 1388 0244 B8000000 		.4byte	.LFE8-.LFB8
 1389 0248 01       		.uleb128 0x1
 1390 0249 9C       		.byte	0x9c
 1391 024a 7C020000 		.4byte	0x27c
 1392 024e 0C       		.uleb128 0xc
 1393 024f F6000000 		.4byte	.LASF32
 1394 0253 01       		.byte	0x1
 1395 0254 C601     		.2byte	0x1c6
 1396 0256 29020000 		.4byte	0x229
 1397 025a 02       		.uleb128 0x2
 1398 025b 91       		.byte	0x91
 1399 025c 6C       		.sleb128 -20
 1400 025d 0C       		.uleb128 0xc
 1401 025e D8020000 		.4byte	.LASF23
 1402 0262 01       		.byte	0x1
 1403 0263 C601     		.2byte	0x1c6
 1404 0265 6B000000 		.4byte	0x6b
 1405 0269 02       		.uleb128 0x2
 1406 026a 91       		.byte	0x91
 1407 026b 6B       		.sleb128 -21
 1408 026c 0D       		.uleb128 0xd
 1409 026d 62020000 		.4byte	.LASF22
 1410 0271 01       		.byte	0x1
 1411 0272 C901     		.2byte	0x1c9
 1412 0274 98000000 		.4byte	0x98
 1413 0278 02       		.uleb128 0x2
 1414 0279 91       		.byte	0x91
 1415 027a 74       		.sleb128 -12
 1416 027b 00       		.byte	0
 1417 027c 0B       		.uleb128 0xb
 1418 027d 2A000000 		.4byte	.LASF34
 1419 0281 01       		.byte	0x1
 1420 0282 2202     		.2byte	0x222
 1421 0284 98000000 		.4byte	0x98
 1422 0288 00000000 		.4byte	.LFB9
 1423 028c 4E000000 		.4byte	.LFE9-.LFB9
 1424 0290 01       		.uleb128 0x1
 1425 0291 9C       		.byte	0x9c
 1426 0292 B5020000 		.4byte	0x2b5
 1427 0296 0C       		.uleb128 0xc
 1428 0297 C2020000 		.4byte	.LASF30
 1429 029b 01       		.byte	0x1
 1430 029c 2202     		.2byte	0x222
 1431 029e 6B000000 		.4byte	0x6b
 1432 02a2 02       		.uleb128 0x2
 1433 02a3 91       		.byte	0x91
 1434 02a4 6F       		.sleb128 -17
 1435 02a5 0D       		.uleb128 0xd
 1436 02a6 62020000 		.4byte	.LASF22
 1437 02aa 01       		.byte	0x1
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 39


 1438 02ab 2402     		.2byte	0x224
 1439 02ad 98000000 		.4byte	0x98
 1440 02b1 02       		.uleb128 0x2
 1441 02b2 91       		.byte	0x91
 1442 02b3 74       		.sleb128 -12
 1443 02b4 00       		.byte	0
 1444 02b5 0B       		.uleb128 0xb
 1445 02b6 63000000 		.4byte	.LASF35
 1446 02ba 01       		.byte	0x1
 1447 02bb 5802     		.2byte	0x258
 1448 02bd 98000000 		.4byte	0x98
 1449 02c1 00000000 		.4byte	.LFB10
 1450 02c5 58000000 		.4byte	.LFE10-.LFB10
 1451 02c9 01       		.uleb128 0x1
 1452 02ca 9C       		.byte	0x9c
 1453 02cb DF020000 		.4byte	0x2df
 1454 02cf 0D       		.uleb128 0xd
 1455 02d0 62020000 		.4byte	.LASF22
 1456 02d4 01       		.byte	0x1
 1457 02d5 5A02     		.2byte	0x25a
 1458 02d7 98000000 		.4byte	0x98
 1459 02db 02       		.uleb128 0x2
 1460 02dc 91       		.byte	0x91
 1461 02dd 74       		.sleb128 -12
 1462 02de 00       		.byte	0
 1463 02df 0B       		.uleb128 0xb
 1464 02e0 3E000000 		.4byte	.LASF36
 1465 02e4 01       		.byte	0x1
 1466 02e5 8B02     		.2byte	0x28b
 1467 02e7 98000000 		.4byte	0x98
 1468 02eb 00000000 		.4byte	.LFB11
 1469 02ef 04010000 		.4byte	.LFE11-.LFB11
 1470 02f3 01       		.uleb128 0x1
 1471 02f4 9C       		.byte	0x9c
 1472 02f5 36030000 		.4byte	0x336
 1473 02f9 0C       		.uleb128 0xc
 1474 02fa 4E010000 		.4byte	.LASF20
 1475 02fe 01       		.byte	0x1
 1476 02ff 8B02     		.2byte	0x28b
 1477 0301 6B000000 		.4byte	0x6b
 1478 0305 02       		.uleb128 0x2
 1479 0306 91       		.byte	0x91
 1480 0307 6F       		.sleb128 -17
 1481 0308 0C       		.uleb128 0xc
 1482 0309 D8020000 		.4byte	.LASF23
 1483 030d 01       		.byte	0x1
 1484 030e 8B02     		.2byte	0x28b
 1485 0310 6B000000 		.4byte	0x6b
 1486 0314 02       		.uleb128 0x2
 1487 0315 91       		.byte	0x91
 1488 0316 6E       		.sleb128 -18
 1489 0317 0C       		.uleb128 0xc
 1490 0318 DD000000 		.4byte	.LASF24
 1491 031c 01       		.byte	0x1
 1492 031d 8B02     		.2byte	0x28b
 1493 031f 6B000000 		.4byte	0x6b
 1494 0323 02       		.uleb128 0x2
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 40


 1495 0324 91       		.byte	0x91
 1496 0325 6D       		.sleb128 -19
 1497 0326 0D       		.uleb128 0xd
 1498 0327 62020000 		.4byte	.LASF22
 1499 032b 01       		.byte	0x1
 1500 032c 8E02     		.2byte	0x28e
 1501 032e 98000000 		.4byte	0x98
 1502 0332 02       		.uleb128 0x2
 1503 0333 91       		.byte	0x91
 1504 0334 74       		.sleb128 -12
 1505 0335 00       		.byte	0
 1506 0336 10       		.uleb128 0x10
 1507 0337 6B000000 		.4byte	0x6b
 1508 033b 46030000 		.4byte	0x346
 1509 033f 11       		.uleb128 0x11
 1510 0340 B5000000 		.4byte	0xb5
 1511 0344 01       		.byte	0x1
 1512 0345 00       		.byte	0
 1513 0346 12       		.uleb128 0x12
 1514 0347 2A010000 		.4byte	.LASF41
 1515 034b 03       		.byte	0x3
 1516 034c 1D       		.byte	0x1d
 1517 034d 36030000 		.4byte	0x336
 1518 0351 00       		.byte	0
 1519              		.section	.debug_abbrev,"",%progbits
 1520              	.Ldebug_abbrev0:
 1521 0000 01       		.uleb128 0x1
 1522 0001 11       		.uleb128 0x11
 1523 0002 01       		.byte	0x1
 1524 0003 25       		.uleb128 0x25
 1525 0004 0E       		.uleb128 0xe
 1526 0005 13       		.uleb128 0x13
 1527 0006 0B       		.uleb128 0xb
 1528 0007 03       		.uleb128 0x3
 1529 0008 0E       		.uleb128 0xe
 1530 0009 1B       		.uleb128 0x1b
 1531 000a 0E       		.uleb128 0xe
 1532 000b 55       		.uleb128 0x55
 1533 000c 17       		.uleb128 0x17
 1534 000d 11       		.uleb128 0x11
 1535 000e 01       		.uleb128 0x1
 1536 000f 10       		.uleb128 0x10
 1537 0010 17       		.uleb128 0x17
 1538 0011 00       		.byte	0
 1539 0012 00       		.byte	0
 1540 0013 02       		.uleb128 0x2
 1541 0014 24       		.uleb128 0x24
 1542 0015 00       		.byte	0
 1543 0016 0B       		.uleb128 0xb
 1544 0017 0B       		.uleb128 0xb
 1545 0018 3E       		.uleb128 0x3e
 1546 0019 0B       		.uleb128 0xb
 1547 001a 03       		.uleb128 0x3
 1548 001b 0E       		.uleb128 0xe
 1549 001c 00       		.byte	0
 1550 001d 00       		.byte	0
 1551 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 41


 1552 001f 24       		.uleb128 0x24
 1553 0020 00       		.byte	0
 1554 0021 0B       		.uleb128 0xb
 1555 0022 0B       		.uleb128 0xb
 1556 0023 3E       		.uleb128 0x3e
 1557 0024 0B       		.uleb128 0xb
 1558 0025 03       		.uleb128 0x3
 1559 0026 08       		.uleb128 0x8
 1560 0027 00       		.byte	0
 1561 0028 00       		.byte	0
 1562 0029 04       		.uleb128 0x4
 1563 002a 16       		.uleb128 0x16
 1564 002b 00       		.byte	0
 1565 002c 03       		.uleb128 0x3
 1566 002d 0E       		.uleb128 0xe
 1567 002e 3A       		.uleb128 0x3a
 1568 002f 0B       		.uleb128 0xb
 1569 0030 3B       		.uleb128 0x3b
 1570 0031 05       		.uleb128 0x5
 1571 0032 49       		.uleb128 0x49
 1572 0033 13       		.uleb128 0x13
 1573 0034 00       		.byte	0
 1574 0035 00       		.byte	0
 1575 0036 05       		.uleb128 0x5
 1576 0037 35       		.uleb128 0x35
 1577 0038 00       		.byte	0
 1578 0039 49       		.uleb128 0x49
 1579 003a 13       		.uleb128 0x13
 1580 003b 00       		.byte	0
 1581 003c 00       		.byte	0
 1582 003d 06       		.uleb128 0x6
 1583 003e 2E       		.uleb128 0x2e
 1584 003f 00       		.byte	0
 1585 0040 3F       		.uleb128 0x3f
 1586 0041 19       		.uleb128 0x19
 1587 0042 03       		.uleb128 0x3
 1588 0043 0E       		.uleb128 0xe
 1589 0044 3A       		.uleb128 0x3a
 1590 0045 0B       		.uleb128 0xb
 1591 0046 3B       		.uleb128 0x3b
 1592 0047 0B       		.uleb128 0xb
 1593 0048 27       		.uleb128 0x27
 1594 0049 19       		.uleb128 0x19
 1595 004a 11       		.uleb128 0x11
 1596 004b 01       		.uleb128 0x1
 1597 004c 12       		.uleb128 0x12
 1598 004d 06       		.uleb128 0x6
 1599 004e 40       		.uleb128 0x40
 1600 004f 18       		.uleb128 0x18
 1601 0050 9642     		.uleb128 0x2116
 1602 0052 19       		.uleb128 0x19
 1603 0053 00       		.byte	0
 1604 0054 00       		.byte	0
 1605 0055 07       		.uleb128 0x7
 1606 0056 2E       		.uleb128 0x2e
 1607 0057 01       		.byte	0x1
 1608 0058 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 42


 1609 0059 19       		.uleb128 0x19
 1610 005a 03       		.uleb128 0x3
 1611 005b 0E       		.uleb128 0xe
 1612 005c 3A       		.uleb128 0x3a
 1613 005d 0B       		.uleb128 0xb
 1614 005e 3B       		.uleb128 0x3b
 1615 005f 0B       		.uleb128 0xb
 1616 0060 27       		.uleb128 0x27
 1617 0061 19       		.uleb128 0x19
 1618 0062 49       		.uleb128 0x49
 1619 0063 13       		.uleb128 0x13
 1620 0064 11       		.uleb128 0x11
 1621 0065 01       		.uleb128 0x1
 1622 0066 12       		.uleb128 0x12
 1623 0067 06       		.uleb128 0x6
 1624 0068 40       		.uleb128 0x40
 1625 0069 18       		.uleb128 0x18
 1626 006a 9642     		.uleb128 0x2116
 1627 006c 19       		.uleb128 0x19
 1628 006d 01       		.uleb128 0x1
 1629 006e 13       		.uleb128 0x13
 1630 006f 00       		.byte	0
 1631 0070 00       		.byte	0
 1632 0071 08       		.uleb128 0x8
 1633 0072 05       		.uleb128 0x5
 1634 0073 00       		.byte	0
 1635 0074 03       		.uleb128 0x3
 1636 0075 0E       		.uleb128 0xe
 1637 0076 3A       		.uleb128 0x3a
 1638 0077 0B       		.uleb128 0xb
 1639 0078 3B       		.uleb128 0x3b
 1640 0079 0B       		.uleb128 0xb
 1641 007a 49       		.uleb128 0x49
 1642 007b 13       		.uleb128 0x13
 1643 007c 02       		.uleb128 0x2
 1644 007d 18       		.uleb128 0x18
 1645 007e 00       		.byte	0
 1646 007f 00       		.byte	0
 1647 0080 09       		.uleb128 0x9
 1648 0081 34       		.uleb128 0x34
 1649 0082 00       		.byte	0
 1650 0083 03       		.uleb128 0x3
 1651 0084 0E       		.uleb128 0xe
 1652 0085 3A       		.uleb128 0x3a
 1653 0086 0B       		.uleb128 0xb
 1654 0087 3B       		.uleb128 0x3b
 1655 0088 0B       		.uleb128 0xb
 1656 0089 49       		.uleb128 0x49
 1657 008a 13       		.uleb128 0x13
 1658 008b 02       		.uleb128 0x2
 1659 008c 18       		.uleb128 0x18
 1660 008d 00       		.byte	0
 1661 008e 00       		.byte	0
 1662 008f 0A       		.uleb128 0xa
 1663 0090 2E       		.uleb128 0x2e
 1664 0091 00       		.byte	0
 1665 0092 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 43


 1666 0093 19       		.uleb128 0x19
 1667 0094 03       		.uleb128 0x3
 1668 0095 0E       		.uleb128 0xe
 1669 0096 3A       		.uleb128 0x3a
 1670 0097 0B       		.uleb128 0xb
 1671 0098 3B       		.uleb128 0x3b
 1672 0099 0B       		.uleb128 0xb
 1673 009a 27       		.uleb128 0x27
 1674 009b 19       		.uleb128 0x19
 1675 009c 49       		.uleb128 0x49
 1676 009d 13       		.uleb128 0x13
 1677 009e 11       		.uleb128 0x11
 1678 009f 01       		.uleb128 0x1
 1679 00a0 12       		.uleb128 0x12
 1680 00a1 06       		.uleb128 0x6
 1681 00a2 40       		.uleb128 0x40
 1682 00a3 18       		.uleb128 0x18
 1683 00a4 9642     		.uleb128 0x2116
 1684 00a6 19       		.uleb128 0x19
 1685 00a7 00       		.byte	0
 1686 00a8 00       		.byte	0
 1687 00a9 0B       		.uleb128 0xb
 1688 00aa 2E       		.uleb128 0x2e
 1689 00ab 01       		.byte	0x1
 1690 00ac 3F       		.uleb128 0x3f
 1691 00ad 19       		.uleb128 0x19
 1692 00ae 03       		.uleb128 0x3
 1693 00af 0E       		.uleb128 0xe
 1694 00b0 3A       		.uleb128 0x3a
 1695 00b1 0B       		.uleb128 0xb
 1696 00b2 3B       		.uleb128 0x3b
 1697 00b3 05       		.uleb128 0x5
 1698 00b4 27       		.uleb128 0x27
 1699 00b5 19       		.uleb128 0x19
 1700 00b6 49       		.uleb128 0x49
 1701 00b7 13       		.uleb128 0x13
 1702 00b8 11       		.uleb128 0x11
 1703 00b9 01       		.uleb128 0x1
 1704 00ba 12       		.uleb128 0x12
 1705 00bb 06       		.uleb128 0x6
 1706 00bc 40       		.uleb128 0x40
 1707 00bd 18       		.uleb128 0x18
 1708 00be 9642     		.uleb128 0x2116
 1709 00c0 19       		.uleb128 0x19
 1710 00c1 01       		.uleb128 0x1
 1711 00c2 13       		.uleb128 0x13
 1712 00c3 00       		.byte	0
 1713 00c4 00       		.byte	0
 1714 00c5 0C       		.uleb128 0xc
 1715 00c6 05       		.uleb128 0x5
 1716 00c7 00       		.byte	0
 1717 00c8 03       		.uleb128 0x3
 1718 00c9 0E       		.uleb128 0xe
 1719 00ca 3A       		.uleb128 0x3a
 1720 00cb 0B       		.uleb128 0xb
 1721 00cc 3B       		.uleb128 0x3b
 1722 00cd 05       		.uleb128 0x5
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 44


 1723 00ce 49       		.uleb128 0x49
 1724 00cf 13       		.uleb128 0x13
 1725 00d0 02       		.uleb128 0x2
 1726 00d1 18       		.uleb128 0x18
 1727 00d2 00       		.byte	0
 1728 00d3 00       		.byte	0
 1729 00d4 0D       		.uleb128 0xd
 1730 00d5 34       		.uleb128 0x34
 1731 00d6 00       		.byte	0
 1732 00d7 03       		.uleb128 0x3
 1733 00d8 0E       		.uleb128 0xe
 1734 00d9 3A       		.uleb128 0x3a
 1735 00da 0B       		.uleb128 0xb
 1736 00db 3B       		.uleb128 0x3b
 1737 00dc 05       		.uleb128 0x5
 1738 00dd 49       		.uleb128 0x49
 1739 00de 13       		.uleb128 0x13
 1740 00df 02       		.uleb128 0x2
 1741 00e0 18       		.uleb128 0x18
 1742 00e1 00       		.byte	0
 1743 00e2 00       		.byte	0
 1744 00e3 0E       		.uleb128 0xe
 1745 00e4 0F       		.uleb128 0xf
 1746 00e5 00       		.byte	0
 1747 00e6 0B       		.uleb128 0xb
 1748 00e7 0B       		.uleb128 0xb
 1749 00e8 49       		.uleb128 0x49
 1750 00e9 13       		.uleb128 0x13
 1751 00ea 00       		.byte	0
 1752 00eb 00       		.byte	0
 1753 00ec 0F       		.uleb128 0xf
 1754 00ed 26       		.uleb128 0x26
 1755 00ee 00       		.byte	0
 1756 00ef 49       		.uleb128 0x49
 1757 00f0 13       		.uleb128 0x13
 1758 00f1 00       		.byte	0
 1759 00f2 00       		.byte	0
 1760 00f3 10       		.uleb128 0x10
 1761 00f4 01       		.uleb128 0x1
 1762 00f5 01       		.byte	0x1
 1763 00f6 49       		.uleb128 0x49
 1764 00f7 13       		.uleb128 0x13
 1765 00f8 01       		.uleb128 0x1
 1766 00f9 13       		.uleb128 0x13
 1767 00fa 00       		.byte	0
 1768 00fb 00       		.byte	0
 1769 00fc 11       		.uleb128 0x11
 1770 00fd 21       		.uleb128 0x21
 1771 00fe 00       		.byte	0
 1772 00ff 49       		.uleb128 0x49
 1773 0100 13       		.uleb128 0x13
 1774 0101 2F       		.uleb128 0x2f
 1775 0102 0B       		.uleb128 0xb
 1776 0103 00       		.byte	0
 1777 0104 00       		.byte	0
 1778 0105 12       		.uleb128 0x12
 1779 0106 34       		.uleb128 0x34
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 45


 1780 0107 00       		.byte	0
 1781 0108 03       		.uleb128 0x3
 1782 0109 0E       		.uleb128 0xe
 1783 010a 3A       		.uleb128 0x3a
 1784 010b 0B       		.uleb128 0xb
 1785 010c 3B       		.uleb128 0x3b
 1786 010d 0B       		.uleb128 0xb
 1787 010e 49       		.uleb128 0x49
 1788 010f 13       		.uleb128 0x13
 1789 0110 3F       		.uleb128 0x3f
 1790 0111 19       		.uleb128 0x19
 1791 0112 3C       		.uleb128 0x3c
 1792 0113 19       		.uleb128 0x19
 1793 0114 00       		.byte	0
 1794 0115 00       		.byte	0
 1795 0116 00       		.byte	0
 1796              		.section	.debug_aranges,"",%progbits
 1797 0000 74000000 		.4byte	0x74
 1798 0004 0200     		.2byte	0x2
 1799 0006 00000000 		.4byte	.Ldebug_info0
 1800 000a 04       		.byte	0x4
 1801 000b 00       		.byte	0
 1802 000c 0000     		.2byte	0
 1803 000e 0000     		.2byte	0
 1804 0010 00000000 		.4byte	.LFB0
 1805 0014 0E000000 		.4byte	.LFE0-.LFB0
 1806 0018 00000000 		.4byte	.LFB1
 1807 001c 0A000000 		.4byte	.LFE1-.LFB1
 1808 0020 00000000 		.4byte	.LFB2
 1809 0024 0A000000 		.4byte	.LFE2-.LFB2
 1810 0028 00000000 		.4byte	.LFB3
 1811 002c 20010000 		.4byte	.LFE3-.LFB3
 1812 0030 00000000 		.4byte	.LFB4
 1813 0034 3A000000 		.4byte	.LFE4-.LFB4
 1814 0038 00000000 		.4byte	.LFB5
 1815 003c 10000000 		.4byte	.LFE5-.LFB5
 1816 0040 00000000 		.4byte	.LFB6
 1817 0044 8C000000 		.4byte	.LFE6-.LFB6
 1818 0048 00000000 		.4byte	.LFB7
 1819 004c F0000000 		.4byte	.LFE7-.LFB7
 1820 0050 00000000 		.4byte	.LFB8
 1821 0054 B8000000 		.4byte	.LFE8-.LFB8
 1822 0058 00000000 		.4byte	.LFB9
 1823 005c 4E000000 		.4byte	.LFE9-.LFB9
 1824 0060 00000000 		.4byte	.LFB10
 1825 0064 58000000 		.4byte	.LFE10-.LFB10
 1826 0068 00000000 		.4byte	.LFB11
 1827 006c 04010000 		.4byte	.LFE11-.LFB11
 1828 0070 00000000 		.4byte	0
 1829 0074 00000000 		.4byte	0
 1830              		.section	.debug_ranges,"",%progbits
 1831              	.Ldebug_ranges0:
 1832 0000 00000000 		.4byte	.LFB0
 1833 0004 0E000000 		.4byte	.LFE0
 1834 0008 00000000 		.4byte	.LFB1
 1835 000c 0A000000 		.4byte	.LFE1
 1836 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 46


 1837 0014 0A000000 		.4byte	.LFE2
 1838 0018 00000000 		.4byte	.LFB3
 1839 001c 20010000 		.4byte	.LFE3
 1840 0020 00000000 		.4byte	.LFB4
 1841 0024 3A000000 		.4byte	.LFE4
 1842 0028 00000000 		.4byte	.LFB5
 1843 002c 10000000 		.4byte	.LFE5
 1844 0030 00000000 		.4byte	.LFB6
 1845 0034 8C000000 		.4byte	.LFE6
 1846 0038 00000000 		.4byte	.LFB7
 1847 003c F0000000 		.4byte	.LFE7
 1848 0040 00000000 		.4byte	.LFB8
 1849 0044 B8000000 		.4byte	.LFE8
 1850 0048 00000000 		.4byte	.LFB9
 1851 004c 4E000000 		.4byte	.LFE9
 1852 0050 00000000 		.4byte	.LFB10
 1853 0054 58000000 		.4byte	.LFE10
 1854 0058 00000000 		.4byte	.LFB11
 1855 005c 04010000 		.4byte	.LFE11
 1856 0060 00000000 		.4byte	0
 1857 0064 00000000 		.4byte	0
 1858              		.section	.debug_line,"",%progbits
 1859              	.Ldebug_line0:
 1860 0000 24020000 		.section	.debug_str,"MS",%progbits,1
 1860      02005200 
 1860      00000201 
 1860      FB0E0D00 
 1860      01010101 
 1861              	.LASF31:
 1862 0000 45455052 		.ascii	"EEPROM_1_Write\000"
 1862      4F4D5F31 
 1862      5F577269 
 1862      746500
 1863              	.LASF40:
 1864 000f 45455052 		.ascii	"EEPROM_1_UpdateTemperature\000"
 1864      4F4D5F31 
 1864      5F557064 
 1864      61746554 
 1864      656D7065 
 1865              	.LASF34:
 1866 002a 45455052 		.ascii	"EEPROM_1_StartErase\000"
 1866      4F4D5F31 
 1866      5F537461 
 1866      72744572 
 1866      61736500 
 1867              	.LASF36:
 1868 003e 45455052 		.ascii	"EEPROM_1_ByteWritePos\000"
 1868      4F4D5F31 
 1868      5F427974 
 1868      65577269 
 1868      7465506F 
 1869              	.LASF18:
 1870 0054 45455052 		.ascii	"EEPROM_1_Start\000"
 1870      4F4D5F31 
 1870      5F537461 
 1870      727400
 1871              	.LASF35:
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 47


 1872 0063 45455052 		.ascii	"EEPROM_1_Query\000"
 1872      4F4D5F31 
 1872      5F517565 
 1872      727900
 1873              	.LASF11:
 1874 0072 666C6F61 		.ascii	"float\000"
 1874      7400
 1875              	.LASF25:
 1876 0078 45455052 		.ascii	"EEPROM_1_WriteByte\000"
 1876      4F4D5F31 
 1876      5F577269 
 1876      74654279 
 1876      746500
 1877              	.LASF17:
 1878 008b 45455052 		.ascii	"EEPROM_1_Enable\000"
 1878      4F4D5F31 
 1878      5F456E61 
 1878      626C6500 
 1879              	.LASF26:
 1880 009b 45455052 		.ascii	"EEPROM_1_ReadByte\000"
 1880      4F4D5F31 
 1880      5F526561 
 1880      64427974 
 1880      6500
 1881              	.LASF19:
 1882 00ad 45455052 		.ascii	"EEPROM_1_Stop\000"
 1882      4F4D5F31 
 1882      5F53746F 
 1882      7000
 1883              	.LASF38:
 1884 00bb 47656E65 		.ascii	"Generated_Source\\PSoC5\\EEPROM_1.c\000"
 1884      72617465 
 1884      645F536F 
 1884      75726365 
 1884      5C50536F 
 1885              	.LASF24:
 1886 00dd 62797465 		.ascii	"byteNumber\000"
 1886      4E756D62 
 1886      657200
 1887              	.LASF1:
 1888 00e8 756E7369 		.ascii	"unsigned char\000"
 1888      676E6564 
 1888      20636861 
 1888      7200
 1889              	.LASF32:
 1890 00f6 726F7744 		.ascii	"rowData\000"
 1890      61746100 
 1891              	.LASF15:
 1892 00fe 72656738 		.ascii	"reg8\000"
 1892      00
 1893              	.LASF28:
 1894 0103 696E7465 		.ascii	"interruptState\000"
 1894      72727570 
 1894      74537461 
 1894      746500
 1895              	.LASF5:
 1896 0112 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 48


 1896      20756E73 
 1896      69676E65 
 1896      6420696E 
 1896      7400
 1897              	.LASF9:
 1898 0124 75696E74 		.ascii	"uint8\000"
 1898      3800
 1899              	.LASF41:
 1900 012a 64696554 		.ascii	"dieTemperature\000"
 1900      656D7065 
 1900      72617475 
 1900      726500
 1901              	.LASF29:
 1902 0139 45455052 		.ascii	"EEPROM_1_EraseSector\000"
 1902      4F4D5F31 
 1902      5F457261 
 1902      73655365 
 1902      63746F72 
 1903              	.LASF20:
 1904 014e 64617461 		.ascii	"dataByte\000"
 1904      42797465 
 1904      00
 1905              	.LASF37:
 1906 0157 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1906      4320342E 
 1906      392E3320 
 1906      32303135 
 1906      30333033 
 1907 018a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1907      20726576 
 1907      6973696F 
 1907      6E203232 
 1907      31323230 
 1908 01bd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1908      66756E63 
 1908      74696F6E 
 1908      2D736563 
 1908      74696F6E 
 1909              	.LASF12:
 1910 01e5 646F7562 		.ascii	"double\000"
 1910      6C6500
 1911              	.LASF10:
 1912 01ec 75696E74 		.ascii	"uint16\000"
 1912      313600
 1913              	.LASF14:
 1914 01f3 63797374 		.ascii	"cystatus\000"
 1914      61747573 
 1914      00
 1915              	.LASF39:
 1916 01fc 433A5C55 		.ascii	"C:\\Users\\Bruger\\Desktop\\CODE\\PSOC5\\CY8CKIT-59"
 1916      73657273 
 1916      5C427275 
 1916      6765725C 
 1916      4465736B 
 1917 0229 2D417264 		.ascii	"-Arduino\\CY8CKIT59_Ardudino-Speeduino.cydsn\000"
 1917      75696E6F 
 1917      5C435938 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 49


 1917      434B4954 
 1917      35395F41 
 1918              	.LASF8:
 1919 0255 756E7369 		.ascii	"unsigned int\000"
 1919      676E6564 
 1919      20696E74 
 1919      00
 1920              	.LASF22:
 1921 0262 73746174 		.ascii	"status\000"
 1921      757300
 1922              	.LASF21:
 1923 0269 61646472 		.ascii	"address\000"
 1923      65737300 
 1924              	.LASF7:
 1925 0271 6C6F6E67 		.ascii	"long long unsigned int\000"
 1925      206C6F6E 
 1925      6720756E 
 1925      7369676E 
 1925      65642069 
 1926              	.LASF16:
 1927 0288 73697A65 		.ascii	"sizetype\000"
 1927      74797065 
 1927      00
 1928              	.LASF6:
 1929 0291 6C6F6E67 		.ascii	"long long int\000"
 1929      206C6F6E 
 1929      6720696E 
 1929      7400
 1930              	.LASF33:
 1931 029f 45455052 		.ascii	"EEPROM_1_StartWrite\000"
 1931      4F4D5F31 
 1931      5F537461 
 1931      72745772 
 1931      69746500 
 1932              	.LASF13:
 1933 02b3 63686172 		.ascii	"char\000"
 1933      00
 1934              	.LASF2:
 1935 02b8 73686F72 		.ascii	"short int\000"
 1935      7420696E 
 1935      7400
 1936              	.LASF30:
 1937 02c2 73656374 		.ascii	"sectorNumber\000"
 1937      6F724E75 
 1937      6D626572 
 1937      00
 1938              	.LASF4:
 1939 02cf 6C6F6E67 		.ascii	"long int\000"
 1939      20696E74 
 1939      00
 1940              	.LASF23:
 1941 02d8 726F774E 		.ascii	"rowNumber\000"
 1941      756D6265 
 1941      7200
 1942              	.LASF0:
 1943 02e2 7369676E 		.ascii	"signed char\000"
 1943      65642063 
ARM GAS  C:\Users\Bruger\AppData\Local\Temp\ccdRkxaG.s 			page 50


 1943      68617200 
 1944              	.LASF3:
 1945 02ee 73686F72 		.ascii	"short unsigned int\000"
 1945      7420756E 
 1945      7369676E 
 1945      65642069 
 1945      6E7400
 1946              	.LASF27:
 1947 0301 72657442 		.ascii	"retByte\000"
 1947      79746500 
 1948              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
